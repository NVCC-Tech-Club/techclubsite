{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _createClass from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _inherits from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { Vector } from '../vector.mjs';\nimport { Visitor } from '../visitor.mjs';\nimport { encodeUtf8 } from '../util/utf8.mjs';\nimport { float64ToUint16 } from '../util/math.mjs';\nimport { UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum.mjs';\n/** @ignore */\nexport var SetVisitor = /*#__PURE__*/function (_Visitor) {\n  _inherits(SetVisitor, _Visitor);\n  var _super = _createSuper(SetVisitor);\n  function SetVisitor() {\n    _classCallCheck(this, SetVisitor);\n    return _super.apply(this, arguments);\n  }\n  return _createClass(SetVisitor);\n}(Visitor);\n/** @ignore */\nfunction wrapSet(fn) {\n  return function (data, _1, _2) {\n    if (data.setValid(_1, _2 != null)) {\n      return fn(data, _1, _2);\n    }\n  };\n}\n/** @ignore */\nexport var setEpochMsToDays = function setEpochMsToDays(data, index, epochMs) {\n  data[index] = Math.trunc(epochMs / 86400000);\n};\n/** @ignore */\nexport var setEpochMsToMillisecondsLong = function setEpochMsToMillisecondsLong(data, index, epochMs) {\n  data[index] = Math.trunc(epochMs % 4294967296);\n  data[index + 1] = Math.trunc(epochMs / 4294967296);\n};\n/** @ignore */\nexport var setEpochMsToMicrosecondsLong = function setEpochMsToMicrosecondsLong(data, index, epochMs) {\n  data[index] = Math.trunc(epochMs * 1000 % 4294967296);\n  data[index + 1] = Math.trunc(epochMs * 1000 / 4294967296);\n};\n/** @ignore */\nexport var setEpochMsToNanosecondsLong = function setEpochMsToNanosecondsLong(data, index, epochMs) {\n  data[index] = Math.trunc(epochMs * 1000000 % 4294967296);\n  data[index + 1] = Math.trunc(epochMs * 1000000 / 4294967296);\n};\n/** @ignore */\nexport var setVariableWidthBytes = function setVariableWidthBytes(values, valueOffsets, index, value) {\n  if (index + 1 < valueOffsets.length) {\n    var x = valueOffsets[index],\n      y = valueOffsets[index + 1];\n    values.set(value.subarray(0, y - x), x);\n  }\n};\n/** @ignore */\nvar setBool = function setBool(_ref, index, val) {\n  var offset = _ref.offset,\n    values = _ref.values;\n  var idx = offset + index;\n  val ? values[idx >> 3] |= 1 << idx % 8 // true\n  : values[idx >> 3] &= ~(1 << idx % 8); // false\n};\n/** @ignore */\nexport var setInt = function setInt(_ref2, index, value) {\n  var values = _ref2.values;\n  values[index] = value;\n};\n/** @ignore */\nexport var setFloat = function setFloat(_ref3, index, value) {\n  var values = _ref3.values;\n  values[index] = value;\n};\n/** @ignore */\nexport var setFloat16 = function setFloat16(_ref4, index, value) {\n  var values = _ref4.values;\n  values[index] = float64ToUint16(value);\n};\n/* istanbul ignore next */\n/** @ignore */\nexport var setAnyFloat = function setAnyFloat(data, index, value) {\n  switch (data.type.precision) {\n    case Precision.HALF:\n      return setFloat16(data, index, value);\n    case Precision.SINGLE:\n    case Precision.DOUBLE:\n      return setFloat(data, index, value);\n  }\n};\n/** @ignore */\nexport var setDateDay = function setDateDay(_ref5, index, value) {\n  var values = _ref5.values;\n  setEpochMsToDays(values, index, value.valueOf());\n};\n/** @ignore */\nexport var setDateMillisecond = function setDateMillisecond(_ref6, index, value) {\n  var values = _ref6.values;\n  setEpochMsToMillisecondsLong(values, index * 2, value.valueOf());\n};\n/** @ignore */\nexport var setFixedSizeBinary = function setFixedSizeBinary(_ref7, index, value) {\n  var stride = _ref7.stride,\n    values = _ref7.values;\n  values.set(value.subarray(0, stride), stride * index);\n};\n/** @ignore */\nvar setBinary = function setBinary(_ref8, index, value) {\n  var values = _ref8.values,\n    valueOffsets = _ref8.valueOffsets;\n  return setVariableWidthBytes(values, valueOffsets, index, value);\n};\n/** @ignore */\nvar setUtf8 = function setUtf8(_ref9, index, value) {\n  var values = _ref9.values,\n    valueOffsets = _ref9.valueOffsets;\n  setVariableWidthBytes(values, valueOffsets, index, encodeUtf8(value));\n};\n/* istanbul ignore next */\nexport var setDate = function setDate(data, index, value) {\n  data.type.unit === DateUnit.DAY ? setDateDay(data, index, value) : setDateMillisecond(data, index, value);\n};\n/** @ignore */\nexport var setTimestampSecond = function setTimestampSecond(_ref10, index, value) {\n  var values = _ref10.values;\n  return setEpochMsToMillisecondsLong(values, index * 2, value / 1000);\n};\n/** @ignore */\nexport var setTimestampMillisecond = function setTimestampMillisecond(_ref11, index, value) {\n  var values = _ref11.values;\n  return setEpochMsToMillisecondsLong(values, index * 2, value);\n};\n/** @ignore */\nexport var setTimestampMicrosecond = function setTimestampMicrosecond(_ref12, index, value) {\n  var values = _ref12.values;\n  return setEpochMsToMicrosecondsLong(values, index * 2, value);\n};\n/** @ignore */\nexport var setTimestampNanosecond = function setTimestampNanosecond(_ref13, index, value) {\n  var values = _ref13.values;\n  return setEpochMsToNanosecondsLong(values, index * 2, value);\n};\n/* istanbul ignore next */\n/** @ignore */\nexport var setTimestamp = function setTimestamp(data, index, value) {\n  switch (data.type.unit) {\n    case TimeUnit.SECOND:\n      return setTimestampSecond(data, index, value);\n    case TimeUnit.MILLISECOND:\n      return setTimestampMillisecond(data, index, value);\n    case TimeUnit.MICROSECOND:\n      return setTimestampMicrosecond(data, index, value);\n    case TimeUnit.NANOSECOND:\n      return setTimestampNanosecond(data, index, value);\n  }\n};\n/** @ignore */\nexport var setTimeSecond = function setTimeSecond(_ref14, index, value) {\n  var values = _ref14.values;\n  values[index] = value;\n};\n/** @ignore */\nexport var setTimeMillisecond = function setTimeMillisecond(_ref15, index, value) {\n  var values = _ref15.values;\n  values[index] = value;\n};\n/** @ignore */\nexport var setTimeMicrosecond = function setTimeMicrosecond(_ref16, index, value) {\n  var values = _ref16.values;\n  values[index] = value;\n};\n/** @ignore */\nexport var setTimeNanosecond = function setTimeNanosecond(_ref17, index, value) {\n  var values = _ref17.values;\n  values[index] = value;\n};\n/* istanbul ignore next */\n/** @ignore */\nexport var setTime = function setTime(data, index, value) {\n  switch (data.type.unit) {\n    case TimeUnit.SECOND:\n      return setTimeSecond(data, index, value);\n    case TimeUnit.MILLISECOND:\n      return setTimeMillisecond(data, index, value);\n    case TimeUnit.MICROSECOND:\n      return setTimeMicrosecond(data, index, value);\n    case TimeUnit.NANOSECOND:\n      return setTimeNanosecond(data, index, value);\n  }\n};\n/** @ignore */\nexport var setDecimal = function setDecimal(_ref18, index, value) {\n  var values = _ref18.values,\n    stride = _ref18.stride;\n  values.set(value.subarray(0, stride), stride * index);\n};\n/** @ignore */\nvar setList = function setList(data, index, value) {\n  var values = data.children[0];\n  var valueOffsets = data.valueOffsets;\n  var set = instance.getVisitFn(values);\n  if (Array.isArray(value)) {\n    for (var idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n      set(values, itr++, value[++idx]);\n    }\n  } else {\n    for (var _idx = -1, _itr = valueOffsets[index], _end = valueOffsets[index + 1]; _itr < _end;) {\n      set(values, _itr++, value.get(++_idx));\n    }\n  }\n};\n/** @ignore */\nvar setMap = function setMap(data, index, value) {\n  var values = data.children[0];\n  var valueOffsets = data.valueOffsets;\n  var set = instance.getVisitFn(values);\n  var idx = valueOffsets[index],\n    end = valueOffsets[index + 1];\n  var entries = value instanceof Map ? value.entries() : Object.entries(value);\n  var _iterator = _createForOfIteratorHelper(entries),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var val = _step.value;\n      set(values, idx, val);\n      if (++idx >= end) break;\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n};\n/** @ignore */\nvar _setStructArrayValue = function _setStructArrayValue(o, v) {\n  return function (set, c, _, i) {\n    return c && set(c, o, v[i]);\n  };\n};\n/** @ignore */\nvar _setStructVectorValue = function _setStructVectorValue(o, v) {\n  return function (set, c, _, i) {\n    return c && set(c, o, v.get(i));\n  };\n};\n/** @ignore */\nvar _setStructMapValue = function _setStructMapValue(o, v) {\n  return function (set, c, f, _) {\n    return c && set(c, o, v.get(f.name));\n  };\n};\n/** @ignore */\nvar _setStructObjectValue = function _setStructObjectValue(o, v) {\n  return function (set, c, f, _) {\n    return c && set(c, o, v[f.name]);\n  };\n};\n/** @ignore */\nvar setStruct = function setStruct(data, index, value) {\n  var childSetters = data.type.children.map(function (f) {\n    return instance.getVisitFn(f.type);\n  });\n  var set = value instanceof Map ? _setStructMapValue(index, value) : value instanceof Vector ? _setStructVectorValue(index, value) : Array.isArray(value) ? _setStructArrayValue(index, value) : _setStructObjectValue(index, value);\n  // eslint-disable-next-line unicorn/no-array-for-each\n  data.type.children.forEach(function (f, i) {\n    return set(childSetters[i], data.children[i], f, i);\n  });\n};\n/* istanbul ignore next */\n/** @ignore */\nvar setUnion = function setUnion(data, index, value) {\n  data.type.mode === UnionMode.Dense ? setDenseUnion(data, index, value) : setSparseUnion(data, index, value);\n};\n/** @ignore */\nvar setDenseUnion = function setDenseUnion(data, index, value) {\n  var childIndex = data.type.typeIdToChildIndex[data.typeIds[index]];\n  var child = data.children[childIndex];\n  instance.visit(child, data.valueOffsets[index], value);\n};\n/** @ignore */\nvar setSparseUnion = function setSparseUnion(data, index, value) {\n  var childIndex = data.type.typeIdToChildIndex[data.typeIds[index]];\n  var child = data.children[childIndex];\n  instance.visit(child, index, value);\n};\n/** @ignore */\nvar setDictionary = function setDictionary(data, index, value) {\n  var _a;\n  (_a = data.dictionary) === null || _a === void 0 ? void 0 : _a.set(data.values[index], value);\n};\n/* istanbul ignore next */\n/** @ignore */\nexport var setIntervalValue = function setIntervalValue(data, index, value) {\n  data.type.unit === IntervalUnit.DAY_TIME ? setIntervalDayTime(data, index, value) : setIntervalYearMonth(data, index, value);\n};\n/** @ignore */\nexport var setIntervalDayTime = function setIntervalDayTime(_ref19, index, value) {\n  var values = _ref19.values;\n  values.set(value.subarray(0, 2), 2 * index);\n};\n/** @ignore */\nexport var setIntervalYearMonth = function setIntervalYearMonth(_ref20, index, value) {\n  var values = _ref20.values;\n  values[index] = value[0] * 12 + value[1] % 12;\n};\n/** @ignore */\nvar setFixedSizeList = function setFixedSizeList(data, index, value) {\n  var stride = data.stride;\n  var child = data.children[0];\n  var set = instance.getVisitFn(child);\n  if (Array.isArray(value)) {\n    for (var idx = -1, offset = index * stride; ++idx < stride;) {\n      set(child, offset + idx, value[idx]);\n    }\n  } else {\n    for (var _idx2 = -1, _offset = index * stride; ++_idx2 < stride;) {\n      set(child, _offset + _idx2, value.get(_idx2));\n    }\n  }\n};\nSetVisitor.prototype.visitBool = wrapSet(setBool);\nSetVisitor.prototype.visitInt = wrapSet(setInt);\nSetVisitor.prototype.visitInt8 = wrapSet(setInt);\nSetVisitor.prototype.visitInt16 = wrapSet(setInt);\nSetVisitor.prototype.visitInt32 = wrapSet(setInt);\nSetVisitor.prototype.visitInt64 = wrapSet(setInt);\nSetVisitor.prototype.visitUint8 = wrapSet(setInt);\nSetVisitor.prototype.visitUint16 = wrapSet(setInt);\nSetVisitor.prototype.visitUint32 = wrapSet(setInt);\nSetVisitor.prototype.visitUint64 = wrapSet(setInt);\nSetVisitor.prototype.visitFloat = wrapSet(setAnyFloat);\nSetVisitor.prototype.visitFloat16 = wrapSet(setFloat16);\nSetVisitor.prototype.visitFloat32 = wrapSet(setFloat);\nSetVisitor.prototype.visitFloat64 = wrapSet(setFloat);\nSetVisitor.prototype.visitUtf8 = wrapSet(setUtf8);\nSetVisitor.prototype.visitBinary = wrapSet(setBinary);\nSetVisitor.prototype.visitFixedSizeBinary = wrapSet(setFixedSizeBinary);\nSetVisitor.prototype.visitDate = wrapSet(setDate);\nSetVisitor.prototype.visitDateDay = wrapSet(setDateDay);\nSetVisitor.prototype.visitDateMillisecond = wrapSet(setDateMillisecond);\nSetVisitor.prototype.visitTimestamp = wrapSet(setTimestamp);\nSetVisitor.prototype.visitTimestampSecond = wrapSet(setTimestampSecond);\nSetVisitor.prototype.visitTimestampMillisecond = wrapSet(setTimestampMillisecond);\nSetVisitor.prototype.visitTimestampMicrosecond = wrapSet(setTimestampMicrosecond);\nSetVisitor.prototype.visitTimestampNanosecond = wrapSet(setTimestampNanosecond);\nSetVisitor.prototype.visitTime = wrapSet(setTime);\nSetVisitor.prototype.visitTimeSecond = wrapSet(setTimeSecond);\nSetVisitor.prototype.visitTimeMillisecond = wrapSet(setTimeMillisecond);\nSetVisitor.prototype.visitTimeMicrosecond = wrapSet(setTimeMicrosecond);\nSetVisitor.prototype.visitTimeNanosecond = wrapSet(setTimeNanosecond);\nSetVisitor.prototype.visitDecimal = wrapSet(setDecimal);\nSetVisitor.prototype.visitList = wrapSet(setList);\nSetVisitor.prototype.visitStruct = wrapSet(setStruct);\nSetVisitor.prototype.visitUnion = wrapSet(setUnion);\nSetVisitor.prototype.visitDenseUnion = wrapSet(setDenseUnion);\nSetVisitor.prototype.visitSparseUnion = wrapSet(setSparseUnion);\nSetVisitor.prototype.visitDictionary = wrapSet(setDictionary);\nSetVisitor.prototype.visitInterval = wrapSet(setIntervalValue);\nSetVisitor.prototype.visitIntervalDayTime = wrapSet(setIntervalDayTime);\nSetVisitor.prototype.visitIntervalYearMonth = wrapSet(setIntervalYearMonth);\nSetVisitor.prototype.visitFixedSizeList = wrapSet(setFixedSizeList);\nSetVisitor.prototype.visitMap = wrapSet(setMap);\n/** @ignore */\nexport var instance = new SetVisitor();","map":{"version":3,"names":["Vector","Visitor","encodeUtf8","float64ToUint16","UnionMode","Precision","DateUnit","TimeUnit","IntervalUnit","SetVisitor","_Visitor","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","wrapSet","fn","data","_1","_2","setValid","setEpochMsToDays","index","epochMs","Math","trunc","setEpochMsToMillisecondsLong","setEpochMsToMicrosecondsLong","setEpochMsToNanosecondsLong","setVariableWidthBytes","values","valueOffsets","value","length","x","y","set","subarray","setBool","_ref","val","offset","idx","setInt","_ref2","setFloat","_ref3","setFloat16","_ref4","setAnyFloat","type","precision","HALF","SINGLE","DOUBLE","setDateDay","_ref5","valueOf","setDateMillisecond","_ref6","setFixedSizeBinary","_ref7","stride","setBinary","_ref8","setUtf8","_ref9","setDate","unit","DAY","setTimestampSecond","_ref10","setTimestampMillisecond","_ref11","setTimestampMicrosecond","_ref12","setTimestampNanosecond","_ref13","setTimestamp","SECOND","MILLISECOND","MICROSECOND","NANOSECOND","setTimeSecond","_ref14","setTimeMillisecond","_ref15","setTimeMicrosecond","_ref16","setTimeNanosecond","_ref17","setTime","setDecimal","_ref18","setList","children","instance","getVisitFn","Array","isArray","itr","end","get","setMap","entries","Map","Object","_iterator","_createForOfIteratorHelper","_step","s","n","done","err","e","f","_setStructArrayValue","o","v","c","_","i","_setStructVectorValue","_setStructMapValue","name","_setStructObjectValue","setStruct","childSetters","map","forEach","setUnion","mode","Dense","setDenseUnion","setSparseUnion","childIndex","typeIdToChildIndex","typeIds","child","visit","setDictionary","_a","dictionary","setIntervalValue","DAY_TIME","setIntervalDayTime","setIntervalYearMonth","_ref19","_ref20","setFixedSizeList","prototype","visitBool","visitInt","visitInt8","visitInt16","visitInt32","visitInt64","visitUint8","visitUint16","visitUint32","visitUint64","visitFloat","visitFloat16","visitFloat32","visitFloat64","visitUtf8","visitBinary","visitFixedSizeBinary","visitDate","visitDateDay","visitDateMillisecond","visitTimestamp","visitTimestampSecond","visitTimestampMillisecond","visitTimestampMicrosecond","visitTimestampNanosecond","visitTime","visitTimeSecond","visitTimeMillisecond","visitTimeMicrosecond","visitTimeNanosecond","visitDecimal","visitList","visitStruct","visitUnion","visitDenseUnion","visitSparseUnion","visitDictionary","visitInterval","visitIntervalDayTime","visitIntervalYearMonth","visitFixedSizeList","visitMap"],"sources":["C:\\Users\\erden\\OneDrive\\Documents\\GitHub\\techclubsite\\streamlit_calendar\\frontend\\node_modules\\apache-arrow\\src\\visitor\\set.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data } from '../data.js';\nimport { Field } from '../schema.js';\nimport { Vector } from '../vector.js';\nimport { Visitor } from '../visitor.js';\nimport { encodeUtf8 } from '../util/utf8.js';\nimport { TypeToDataType } from '../interfaces.js';\nimport { float64ToUint16 } from '../util/math.js';\nimport { Type, UnionMode, Precision, DateUnit, TimeUnit, IntervalUnit } from '../enum.js';\nimport {\n    DataType, Dictionary,\n    Bool, Null, Utf8, Binary, Decimal, FixedSizeBinary, List, FixedSizeList, Map_, Struct,\n    Float, Float16, Float32, Float64,\n    Int, Uint8, Uint16, Uint32, Uint64, Int8, Int16, Int32, Int64,\n    Date_, DateDay, DateMillisecond,\n    Interval, IntervalDayTime, IntervalYearMonth,\n    Time, TimeSecond, TimeMillisecond, TimeMicrosecond, TimeNanosecond,\n    Timestamp, TimestampSecond, TimestampMillisecond, TimestampMicrosecond, TimestampNanosecond,\n    Union, DenseUnion, SparseUnion,\n} from '../type.js';\n\n/** @ignore */\nexport interface SetVisitor extends Visitor {\n    visit<T extends DataType>(node: Data<T>, index: number, value: T['TValue']): void;\n    visitMany<T extends DataType>(nodes: Data<T>[], indices: number[], values: T['TValue'][]): void[];\n    getVisitFn<T extends DataType>(node: Data<T> | T): (data: Data<T>, index: number, value: Data<T>['TValue']) => void;\n    getVisitFn<T extends Type>(node: T): (data: Data<TypeToDataType<T>>, index: number, value: TypeToDataType<T>['TValue']) => void;\n    visitNull<T extends Null>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitBool<T extends Bool>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitInt<T extends Int>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitInt8<T extends Int8>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitInt16<T extends Int16>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitInt32<T extends Int32>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitInt64<T extends Int64>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitUint8<T extends Uint8>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitUint16<T extends Uint16>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitUint32<T extends Uint32>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitUint64<T extends Uint64>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitFloat<T extends Float>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitFloat16<T extends Float16>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitFloat32<T extends Float32>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitFloat64<T extends Float64>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitUtf8<T extends Utf8>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitBinary<T extends Binary>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitFixedSizeBinary<T extends FixedSizeBinary>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitDate<T extends Date_>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitDateDay<T extends DateDay>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitDateMillisecond<T extends DateMillisecond>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitTimestamp<T extends Timestamp>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitTimestampSecond<T extends TimestampSecond>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitTimestampMillisecond<T extends TimestampMillisecond>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitTimestampMicrosecond<T extends TimestampMicrosecond>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitTimestampNanosecond<T extends TimestampNanosecond>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitTime<T extends Time>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitTimeSecond<T extends TimeSecond>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitTimeMillisecond<T extends TimeMillisecond>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitTimeMicrosecond<T extends TimeMicrosecond>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitTimeNanosecond<T extends TimeNanosecond>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitDecimal<T extends Decimal>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitList<T extends List>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitStruct<T extends Struct>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitUnion<T extends Union>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitDenseUnion<T extends DenseUnion>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitSparseUnion<T extends SparseUnion>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitDictionary<T extends Dictionary>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitInterval<T extends Interval>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitIntervalDayTime<T extends IntervalDayTime>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitIntervalYearMonth<T extends IntervalYearMonth>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitFixedSizeList<T extends FixedSizeList>(data: Data<T>, index: number, value: T['TValue']): void;\n    visitMap<T extends Map_>(data: Data<T>, index: number, value: T['TValue']): void;\n}\n\n/** @ignore */\nexport class SetVisitor extends Visitor { }\n\n/** @ignore */\nfunction wrapSet<T extends DataType>(fn: (data: Data<T>, _1: any, _2: any) => void) {\n    return (data: Data<T>, _1: any, _2: any) => {\n        if (data.setValid(_1, _2 != null)) {\n            return fn(data, _1, _2);\n        }\n    };\n}\n\n/** @ignore */\nexport const setEpochMsToDays = (data: Int32Array, index: number, epochMs: number) => { data[index] = Math.trunc(epochMs / 86400000); };\n/** @ignore */\nexport const setEpochMsToMillisecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = Math.trunc(epochMs % 4294967296);\n    data[index + 1] = Math.trunc(epochMs / 4294967296);\n};\n/** @ignore */\nexport const setEpochMsToMicrosecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = Math.trunc((epochMs * 1000) % 4294967296);\n    data[index + 1] = Math.trunc((epochMs * 1000) / 4294967296);\n};\n/** @ignore */\nexport const setEpochMsToNanosecondsLong = (data: Int32Array, index: number, epochMs: number) => {\n    data[index] = Math.trunc((epochMs * 1000000) % 4294967296);\n    data[index + 1] = Math.trunc((epochMs * 1000000) / 4294967296);\n};\n\n/** @ignore */\nexport const setVariableWidthBytes = (values: Uint8Array, valueOffsets: Int32Array, index: number, value: Uint8Array) => {\n    if (index + 1 < valueOffsets.length) {\n        const { [index]: x, [index + 1]: y } = valueOffsets;\n        values.set(value.subarray(0, y - x), x);\n    }\n};\n\n/** @ignore */\nconst setBool = <T extends Bool>({ offset, values }: Data<T>, index: number, val: boolean) => {\n    const idx = offset + index;\n    val ? (values[idx >> 3] |= (1 << (idx % 8)))  // true\n        : (values[idx >> 3] &= ~(1 << (idx % 8))); // false\n\n};\n/** @ignore */\nexport const setInt = <T extends Int>({ values }: Data<T>, index: number, value: T['TValue']): void => { values[index] = value; };\n/** @ignore */\nexport const setFloat = <T extends Float32 | Float64>({ values }: Data<T>, index: number, value: T['TValue']): void => { values[index] = value; };\n/** @ignore */\nexport const setFloat16 = <T extends Float16>({ values }: Data<T>, index: number, value: T['TValue']): void => { values[index] = float64ToUint16(value); };\n/* istanbul ignore next */\n/** @ignore */\nexport const setAnyFloat = <T extends Float>(data: Data<T>, index: number, value: T['TValue']): void => {\n    switch (data.type.precision) {\n        case Precision.HALF:\n            return setFloat16(data as Data<Float16>, index, value);\n        case Precision.SINGLE:\n        case Precision.DOUBLE:\n            return setFloat(data as Data<Float32 | Float64>, index, value);\n    }\n};\n/** @ignore */\nexport const setDateDay = <T extends DateDay>({ values }: Data<T>, index: number, value: T['TValue']): void => { setEpochMsToDays(values, index, value.valueOf()); };\n/** @ignore */\nexport const setDateMillisecond = <T extends DateMillisecond>({ values }: Data<T>, index: number, value: T['TValue']): void => { setEpochMsToMillisecondsLong(values, index * 2, value.valueOf()); };\n/** @ignore */\nexport const setFixedSizeBinary = <T extends FixedSizeBinary>({ stride, values }: Data<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, stride), stride * index); };\n\n/** @ignore */\nconst setBinary = <T extends Binary>({ values, valueOffsets }: Data<T>, index: number, value: T['TValue']) => setVariableWidthBytes(values, valueOffsets, index, value);\n/** @ignore */\nconst setUtf8 = <T extends Utf8>({ values, valueOffsets }: Data<T>, index: number, value: T['TValue']) => {\n    setVariableWidthBytes(values, valueOffsets, index, encodeUtf8(value));\n};\n\n/* istanbul ignore next */\nexport const setDate = <T extends Date_>(data: Data<T>, index: number, value: T['TValue']): void => {\n    data.type.unit === DateUnit.DAY\n        ? setDateDay(data as Data<DateDay>, index, value)\n        : setDateMillisecond(data as Data<DateMillisecond>, index, value);\n};\n\n/** @ignore */\nexport const setTimestampSecond = <T extends TimestampSecond>({ values }: Data<T>, index: number, value: T['TValue']): void => setEpochMsToMillisecondsLong(values, index * 2, value / 1000);\n/** @ignore */\nexport const setTimestampMillisecond = <T extends TimestampMillisecond>({ values }: Data<T>, index: number, value: T['TValue']): void => setEpochMsToMillisecondsLong(values, index * 2, value);\n/** @ignore */\nexport const setTimestampMicrosecond = <T extends TimestampMicrosecond>({ values }: Data<T>, index: number, value: T['TValue']): void => setEpochMsToMicrosecondsLong(values, index * 2, value);\n/** @ignore */\nexport const setTimestampNanosecond = <T extends TimestampNanosecond>({ values }: Data<T>, index: number, value: T['TValue']): void => setEpochMsToNanosecondsLong(values, index * 2, value);\n/* istanbul ignore next */\n/** @ignore */\nexport const setTimestamp = <T extends Timestamp>(data: Data<T>, index: number, value: T['TValue']): void => {\n    switch (data.type.unit) {\n        case TimeUnit.SECOND: return setTimestampSecond(data as Data<TimestampSecond>, index, value);\n        case TimeUnit.MILLISECOND: return setTimestampMillisecond(data as Data<TimestampMillisecond>, index, value);\n        case TimeUnit.MICROSECOND: return setTimestampMicrosecond(data as Data<TimestampMicrosecond>, index, value);\n        case TimeUnit.NANOSECOND: return setTimestampNanosecond(data as Data<TimestampNanosecond>, index, value);\n    }\n};\n\n/** @ignore */\nexport const setTimeSecond = <T extends TimeSecond>({ values }: Data<T>, index: number, value: T['TValue']): void => { values[index] = value; };\n/** @ignore */\nexport const setTimeMillisecond = <T extends TimeMillisecond>({ values }: Data<T>, index: number, value: T['TValue']): void => { values[index] = value; };\n/** @ignore */\nexport const setTimeMicrosecond = <T extends TimeMicrosecond>({ values }: Data<T>, index: number, value: T['TValue']): void => { values[index] = value; };\n/** @ignore */\nexport const setTimeNanosecond = <T extends TimeNanosecond>({ values }: Data<T>, index: number, value: T['TValue']): void => { values[index] = value; };\n/* istanbul ignore next */\n/** @ignore */\nexport const setTime = <T extends Time>(data: Data<T>, index: number, value: T['TValue']): void => {\n    switch (data.type.unit) {\n        case TimeUnit.SECOND: return setTimeSecond(data as Data<TimeSecond>, index, value as TimeSecond['TValue']);\n        case TimeUnit.MILLISECOND: return setTimeMillisecond(data as Data<TimeMillisecond>, index, value as TimeMillisecond['TValue']);\n        case TimeUnit.MICROSECOND: return setTimeMicrosecond(data as Data<TimeMicrosecond>, index, value as TimeMicrosecond['TValue']);\n        case TimeUnit.NANOSECOND: return setTimeNanosecond(data as Data<TimeNanosecond>, index, value as TimeNanosecond['TValue']);\n    }\n};\n\n/** @ignore */\nexport const setDecimal = <T extends Decimal>({ values, stride }: Data<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, stride), stride * index); };\n\n/** @ignore */\nconst setList = <T extends List>(data: Data<T>, index: number, value: T['TValue']): void => {\n    const values = data.children[0];\n    const valueOffsets = data.valueOffsets;\n    const set = instance.getVisitFn(values);\n    if (Array.isArray(value)) {\n        for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n            set(values, itr++, value[++idx]);\n        }\n    } else {\n        for (let idx = -1, itr = valueOffsets[index], end = valueOffsets[index + 1]; itr < end;) {\n            set(values, itr++, value.get(++idx));\n        }\n    }\n};\n\n/** @ignore */\nconst setMap = <T extends Map_>(data: Data<T>, index: number, value: T['TValue']) => {\n    const values = data.children[0];\n    const { valueOffsets } = data;\n    const set = instance.getVisitFn(values);\n    let { [index]: idx, [index + 1]: end } = valueOffsets;\n    const entries = value instanceof Map ? value.entries() : Object.entries(value);\n    for (const val of entries) {\n        set(values, idx, val);\n        if (++idx >= end) break;\n    }\n};\n\n/** @ignore */ type SetFunc<T extends DataType> = (data: Data<T>, i: number, v: T['TValue']) => void;\n\n/** @ignore */ const _setStructArrayValue = (o: number, v: any[]) =>\n    <T extends DataType>(set: SetFunc<T>, c: Data<T>, _: Field, i: number) => c && set(c, o, v[i]);\n\n/** @ignore */ const _setStructVectorValue = (o: number, v: Vector) =>\n    <T extends DataType>(set: SetFunc<T>, c: Data<T>, _: Field, i: number) => c && set(c, o, v.get(i));\n\n/** @ignore */ const _setStructMapValue = (o: number, v: Map<string, any>) =>\n    <T extends DataType>(set: SetFunc<T>, c: Data<T>, f: Field, _: number) => c && set(c, o, v.get(f.name));\n\n/** @ignore */ const _setStructObjectValue = (o: number, v: { [key: string]: any }) =>\n    <T extends DataType>(set: SetFunc<T>, c: Data<T>, f: Field, _: number) => c && set(c, o, v[f.name]);\n\n/** @ignore */\nconst setStruct = <T extends Struct>(data: Data<T>, index: number, value: T['TValue']) => {\n\n    const childSetters = data.type.children.map((f) => instance.getVisitFn(f.type));\n    const set = value instanceof Map ? _setStructMapValue(index, value) :\n        value instanceof Vector ? _setStructVectorValue(index, value) :\n            Array.isArray(value) ? _setStructArrayValue(index, value) :\n                _setStructObjectValue(index, value);\n\n    // eslint-disable-next-line unicorn/no-array-for-each\n    data.type.children.forEach((f: Field, i: number) => set(childSetters[i], data.children[i], f, i));\n};\n\n/* istanbul ignore next */\n/** @ignore */\nconst setUnion = <\n    V extends Data<Union> | Data<DenseUnion> | Data<SparseUnion>\n>(data: V, index: number, value: V['TValue']) => {\n    data.type.mode === UnionMode.Dense ?\n        setDenseUnion(data as Data<DenseUnion>, index, value) :\n        setSparseUnion(data as Data<SparseUnion>, index, value);\n};\n\n/** @ignore */\nconst setDenseUnion = <T extends DenseUnion>(data: Data<T>, index: number, value: T['TValue']): void => {\n    const childIndex = data.type.typeIdToChildIndex[data.typeIds[index]];\n    const child = data.children[childIndex];\n    instance.visit(child, data.valueOffsets[index], value);\n};\n\n/** @ignore */\nconst setSparseUnion = <T extends SparseUnion>(data: Data<T>, index: number, value: T['TValue']): void => {\n    const childIndex = data.type.typeIdToChildIndex[data.typeIds[index]];\n    const child = data.children[childIndex];\n    instance.visit(child, index, value);\n};\n\n/** @ignore */\nconst setDictionary = <T extends Dictionary>(data: Data<T>, index: number, value: T['TValue']): void => {\n    data.dictionary?.set(data.values[index], value);\n};\n\n/* istanbul ignore next */\n/** @ignore */\nexport const setIntervalValue = <T extends Interval>(data: Data<T>, index: number, value: T['TValue']): void => {\n    (data.type.unit === IntervalUnit.DAY_TIME)\n        ? setIntervalDayTime(data as Data<IntervalDayTime>, index, value)\n        : setIntervalYearMonth(data as Data<IntervalYearMonth>, index, value);\n};\n\n/** @ignore */\nexport const setIntervalDayTime = <T extends IntervalDayTime>({ values }: Data<T>, index: number, value: T['TValue']): void => { values.set(value.subarray(0, 2), 2 * index); };\n/** @ignore */\nexport const setIntervalYearMonth = <T extends IntervalYearMonth>({ values }: Data<T>, index: number, value: T['TValue']): void => { values[index] = (value[0] * 12) + (value[1] % 12); };\n\n/** @ignore */\nconst setFixedSizeList = <T extends FixedSizeList>(data: Data<T>, index: number, value: T['TValue']): void => {\n    const { stride } = data;\n    const child = data.children[0];\n    const set = instance.getVisitFn(child);\n    if (Array.isArray(value)) {\n        for (let idx = -1, offset = index * stride; ++idx < stride;) {\n            set(child, offset + idx, value[idx]);\n        }\n    } else {\n        for (let idx = -1, offset = index * stride; ++idx < stride;) {\n            set(child, offset + idx, value.get(idx));\n        }\n    }\n};\n\nSetVisitor.prototype.visitBool = wrapSet(setBool);\nSetVisitor.prototype.visitInt = wrapSet(setInt);\nSetVisitor.prototype.visitInt8 = wrapSet(setInt);\nSetVisitor.prototype.visitInt16 = wrapSet(setInt);\nSetVisitor.prototype.visitInt32 = wrapSet(setInt);\nSetVisitor.prototype.visitInt64 = wrapSet(setInt);\nSetVisitor.prototype.visitUint8 = wrapSet(setInt);\nSetVisitor.prototype.visitUint16 = wrapSet(setInt);\nSetVisitor.prototype.visitUint32 = wrapSet(setInt);\nSetVisitor.prototype.visitUint64 = wrapSet(setInt);\nSetVisitor.prototype.visitFloat = wrapSet(setAnyFloat);\nSetVisitor.prototype.visitFloat16 = wrapSet(setFloat16);\nSetVisitor.prototype.visitFloat32 = wrapSet(setFloat);\nSetVisitor.prototype.visitFloat64 = wrapSet(setFloat);\nSetVisitor.prototype.visitUtf8 = wrapSet(setUtf8);\nSetVisitor.prototype.visitBinary = wrapSet(setBinary);\nSetVisitor.prototype.visitFixedSizeBinary = wrapSet(setFixedSizeBinary);\nSetVisitor.prototype.visitDate = wrapSet(setDate);\nSetVisitor.prototype.visitDateDay = wrapSet(setDateDay);\nSetVisitor.prototype.visitDateMillisecond = wrapSet(setDateMillisecond);\nSetVisitor.prototype.visitTimestamp = wrapSet(setTimestamp);\nSetVisitor.prototype.visitTimestampSecond = wrapSet(setTimestampSecond);\nSetVisitor.prototype.visitTimestampMillisecond = wrapSet(setTimestampMillisecond);\nSetVisitor.prototype.visitTimestampMicrosecond = wrapSet(setTimestampMicrosecond);\nSetVisitor.prototype.visitTimestampNanosecond = wrapSet(setTimestampNanosecond);\nSetVisitor.prototype.visitTime = wrapSet(setTime);\nSetVisitor.prototype.visitTimeSecond = wrapSet(setTimeSecond);\nSetVisitor.prototype.visitTimeMillisecond = wrapSet(setTimeMillisecond);\nSetVisitor.prototype.visitTimeMicrosecond = wrapSet(setTimeMicrosecond);\nSetVisitor.prototype.visitTimeNanosecond = wrapSet(setTimeNanosecond);\nSetVisitor.prototype.visitDecimal = wrapSet(setDecimal);\nSetVisitor.prototype.visitList = wrapSet(setList);\nSetVisitor.prototype.visitStruct = wrapSet(setStruct);\nSetVisitor.prototype.visitUnion = wrapSet(setUnion);\nSetVisitor.prototype.visitDenseUnion = wrapSet(setDenseUnion);\nSetVisitor.prototype.visitSparseUnion = wrapSet(setSparseUnion);\nSetVisitor.prototype.visitDictionary = wrapSet(setDictionary);\nSetVisitor.prototype.visitInterval = wrapSet(setIntervalValue);\nSetVisitor.prototype.visitIntervalDayTime = wrapSet(setIntervalDayTime);\nSetVisitor.prototype.visitIntervalYearMonth = wrapSet(setIntervalYearMonth);\nSetVisitor.prototype.visitFixedSizeList = wrapSet(setFixedSizeList);\nSetVisitor.prototype.visitMap = wrapSet(setMap);\n\n/** @ignore */\nexport const instance = new SetVisitor();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}