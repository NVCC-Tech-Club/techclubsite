{"ast":null,"code":"import _classCallCheck from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n// automatically generated by the FlatBuffers compiler, do not modify\n/**\n * ----------------------------------------------------------------------\n * A Buffer represents a single contiguous memory segment\n */\nexport var Buffer = /*#__PURE__*/function () {\n  function Buffer() {\n    _classCallCheck(this, Buffer);\n    this.bb = null;\n    this.bb_pos = 0;\n  }\n  _createClass(Buffer, [{\n    key: \"__init\",\n    value: function __init(i, bb) {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n    /**\n     * The relative offset into the shared memory page where the bytes for this\n     * buffer starts\n     */\n  }, {\n    key: \"offset\",\n    value: function offset() {\n      return this.bb.readInt64(this.bb_pos);\n    }\n    /**\n     * The absolute length (in bytes) of the memory buffer. The memory is found\n     * from offset (inclusive) to offset + length (non-inclusive). When building\n     * messages using the encapsulated IPC message, padding bytes may be written\n     * after a buffer, but such padding bytes do not need to be accounted for in\n     * the size here.\n     */\n  }, {\n    key: \"length\",\n    value: function length() {\n      return this.bb.readInt64(this.bb_pos + 8);\n    }\n  }], [{\n    key: \"sizeOf\",\n    value: function sizeOf() {\n      return 16;\n    }\n  }, {\n    key: \"createBuffer\",\n    value: function createBuffer(builder, offset, length) {\n      builder.prep(8, 16);\n      builder.writeInt64(length);\n      builder.writeInt64(offset);\n      return builder.offset();\n    }\n  }]);\n  return Buffer;\n}();","map":{"version":3,"names":["Buffer","_classCallCheck","bb","bb_pos","_createClass","key","value","__init","i","offset","readInt64","length","sizeOf","createBuffer","builder","prep","writeInt64"],"sources":["C:\\Users\\erden\\OneDrive\\Documents\\GitHub\\techclubsite\\streamlit_calendar\\frontend\\node_modules\\apache-arrow\\src\\fb\\buffer.ts"],"sourcesContent":["// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\n/**\n * ----------------------------------------------------------------------\n * A Buffer represents a single contiguous memory segment\n */\nexport class Buffer {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):Buffer {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\n/**\n * The relative offset into the shared memory page where the bytes for this\n * buffer starts\n */\noffset():flatbuffers.Long {\n  return this.bb!.readInt64(this.bb_pos);\n}\n\n/**\n * The absolute length (in bytes) of the memory buffer. The memory is found\n * from offset (inclusive) to offset + length (non-inclusive). When building\n * messages using the encapsulated IPC message, padding bytes may be written\n * after a buffer, but such padding bytes do not need to be accounted for in\n * the size here.\n */\nlength():flatbuffers.Long {\n  return this.bb!.readInt64(this.bb_pos + 8);\n}\n\nstatic sizeOf():number {\n  return 16;\n}\n\nstatic createBuffer(builder:flatbuffers.Builder, offset: flatbuffers.Long, length: flatbuffers.Long):flatbuffers.Offset {\n  builder.prep(8, 16);\n  builder.writeInt64(length);\n  builder.writeInt64(offset);\n  return builder.offset();\n}\n\n}\n"],"mappings":";;AAAA;AAIA;;;;AAIA,WAAaA,MAAM;EAAnB,SAAAA,OAAA;IAAAC,eAAA,OAAAD,MAAA;IACE,KAAAE,EAAE,GAAgC,IAAI;IACtC,KAAAC,MAAM,GAAG,CAAC;EAqCZ;EAACC,YAAA,CAAAJ,MAAA;IAAAK,GAAA;IAAAC,KAAA,EApCD,SAAAC,OAAOC,CAAQ,EAAEN,EAAyB;MACxC,IAAI,CAACC,MAAM,GAAGK,CAAC;MACf,IAAI,CAACN,EAAE,GAAGA,EAAE;MACZ,OAAO,IAAI;IACb;IAEA;;;;EAAA;IAAAG,GAAA;IAAAC,KAAA,EAIA,SAAAG,OAAA,EAAM;MACJ,OAAO,IAAI,CAACP,EAAG,CAACQ,SAAS,CAAC,IAAI,CAACP,MAAM,CAAC;IACxC;IAEA;;;;;;;EAAA;IAAAE,GAAA;IAAAC,KAAA,EAOA,SAAAK,OAAA,EAAM;MACJ,OAAO,IAAI,CAACT,EAAG,CAACQ,SAAS,CAAC,IAAI,CAACP,MAAM,GAAG,CAAC,CAAC;IAC5C;EAAC;IAAAE,GAAA;IAAAC,KAAA,EAED,SAAAM,OAAA,EAAa;MACX,OAAO,EAAE;IACX;EAAC;IAAAP,GAAA;IAAAC,KAAA,EAED,SAAAO,aAAoBC,OAA2B,EAAEL,MAAwB,EAAEE,MAAwB;MACjGG,OAAO,CAACC,IAAI,CAAC,CAAC,EAAE,EAAE,CAAC;MACnBD,OAAO,CAACE,UAAU,CAACL,MAAM,CAAC;MAC1BG,OAAO,CAACE,UAAU,CAACP,MAAM,CAAC;MAC1B,OAAOK,OAAO,CAACL,MAAM,EAAE;IACzB;EAAC;EAAA,OAAAT,MAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}