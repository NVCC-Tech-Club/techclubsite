{"ast":null,"code":"import _slicedToArray from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _createForOfIteratorHelper from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { createPlugin } from '@fullcalendar/core/index.js';\nimport premiumCommonPlugin from '@fullcalendar/premium-common/index.js';\nimport { memoize, filterHash, rangesIntersect, isPropsEqual, mapHash, combineEventUis, refineProps, guid, identity, rangesEqual, CalendarImpl, mergeEventStores, isPropsValid, parseFieldSpecs, EventImpl, unpromisify, requestJson } from '@fullcalendar/core/internal.js';\nimport { p as parseResource, R as ResourceApi, a as ResourceSplitter, h as handleResourceStore } from './internal-common.js';\nexport { R as ResourceApi } from './internal-common.js';\nimport '@fullcalendar/core/preact.js';\nfunction massageEventDragMutation(eventMutation, hit0, hit1) {\n  var resource0 = hit0.dateSpan.resourceId;\n  var resource1 = hit1.dateSpan.resourceId;\n  if (resource0 && resource1 && resource0 !== resource1) {\n    eventMutation.resourceMutation = {\n      matchResourceId: resource0,\n      setResourceId: resource1\n    };\n  }\n}\n/*\nTODO: all this would be much easier if we were using a hash!\n*/\nfunction applyEventDefMutation(eventDef, mutation, context) {\n  var resourceMutation = mutation.resourceMutation;\n  if (resourceMutation && computeResourceEditable(eventDef, context)) {\n    var _index = eventDef.resourceIds.indexOf(resourceMutation.matchResourceId);\n    if (_index !== -1) {\n      var resourceIds = eventDef.resourceIds.slice(); // copy\n      resourceIds.splice(_index, 1); // remove\n      if (resourceIds.indexOf(resourceMutation.setResourceId) === -1) {\n        // not already in there\n        resourceIds.push(resourceMutation.setResourceId); // add\n      }\n\n      eventDef.resourceIds = resourceIds;\n    }\n  }\n}\n/*\nHACK\nTODO: use EventUi system instead of this\n*/\nfunction computeResourceEditable(eventDef, context) {\n  var resourceEditable = eventDef.resourceEditable;\n  if (resourceEditable == null) {\n    var source = eventDef.sourceId && context.getCurrentData().eventSources[eventDef.sourceId];\n    if (source) {\n      resourceEditable = source.extendedProps.resourceEditable; // used the Source::extendedProps hack\n    }\n\n    if (resourceEditable == null) {\n      resourceEditable = context.options.eventResourceEditable;\n      if (resourceEditable == null) {\n        resourceEditable = context.options.editable; // TODO: use defaults system instead\n      }\n    }\n  }\n\n  return resourceEditable;\n}\nfunction transformEventDrop(mutation, context) {\n  var resourceMutation = mutation.resourceMutation;\n  if (resourceMutation) {\n    var calendarApi = context.calendarApi;\n    return {\n      oldResource: calendarApi.getResourceById(resourceMutation.matchResourceId),\n      newResource: calendarApi.getResourceById(resourceMutation.setResourceId)\n    };\n  }\n  return {\n    oldResource: null,\n    newResource: null\n  };\n}\nvar ResourceDataAdder = /*#__PURE__*/function () {\n  function ResourceDataAdder() {\n    _classCallCheck(this, ResourceDataAdder);\n    this.filterResources = memoize(filterResources);\n  }\n  _createClass(ResourceDataAdder, [{\n    key: \"transform\",\n    value: function transform(viewProps, calendarProps) {\n      if (calendarProps.viewSpec.optionDefaults.needsResourceData) {\n        return {\n          resourceStore: this.filterResources(calendarProps.resourceStore, calendarProps.options.filterResourcesWithEvents, calendarProps.eventStore, calendarProps.dateProfile.activeRange),\n          resourceEntityExpansions: calendarProps.resourceEntityExpansions\n        };\n      }\n      return null;\n    }\n  }]);\n  return ResourceDataAdder;\n}();\nfunction filterResources(resourceStore, doFilterResourcesWithEvents, eventStore, activeRange) {\n  if (doFilterResourcesWithEvents) {\n    var instancesInRange = filterEventInstancesInRange(eventStore.instances, activeRange);\n    var hasEvents = computeHasEvents(instancesInRange, eventStore.defs);\n    Object.assign(hasEvents, computeAncestorHasEvents(hasEvents, resourceStore));\n    return filterHash(resourceStore, function (resource, resourceId) {\n      return hasEvents[resourceId];\n    });\n  }\n  return resourceStore;\n}\nfunction filterEventInstancesInRange(eventInstances, activeRange) {\n  return filterHash(eventInstances, function (eventInstance) {\n    return rangesIntersect(eventInstance.range, activeRange);\n  });\n}\nfunction computeHasEvents(eventInstances, eventDefs) {\n  var hasEvents = {};\n  for (var instanceId in eventInstances) {\n    var instance = eventInstances[instanceId];\n    var _iterator = _createForOfIteratorHelper(eventDefs[instance.defId].resourceIds),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var resourceId = _step.value;\n        hasEvents[resourceId] = true;\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return hasEvents;\n}\n/*\nmark resources as having events if any of their ancestors have them\nNOTE: resourceStore might not have all the resources that hasEvents{} has keyed\n*/\nfunction computeAncestorHasEvents(hasEvents, resourceStore) {\n  var res = {};\n  for (var resourceId in hasEvents) {\n    var resource = void 0;\n    while (resource = resourceStore[resourceId]) {\n      resourceId = resource.parentId; // now functioning as the parentId\n      if (resourceId) {\n        res[resourceId] = true;\n      } else {\n        break;\n      }\n    }\n  }\n  return res;\n}\n/*\nfor making sure events that have editable resources are always draggable in resource views\n*/\nfunction transformIsDraggable(val, eventDef, eventUi, context) {\n  if (!val) {\n    var state = context.getCurrentData();\n    var viewSpec = state.viewSpecs[state.currentViewType];\n    if (viewSpec.optionDefaults.needsResourceData) {\n      if (computeResourceEditable(eventDef, context)) {\n        return true;\n      }\n    }\n  }\n  return val;\n}\n\n// for when non-resource view should be given EventUi info (for event coloring/constraints based off of resource data)\nvar ResourceEventConfigAdder = /*#__PURE__*/function () {\n  function ResourceEventConfigAdder() {\n    _classCallCheck(this, ResourceEventConfigAdder);\n    this.buildResourceEventUis = memoize(buildResourceEventUis, isPropsEqual);\n    this.injectResourceEventUis = memoize(injectResourceEventUis);\n  }\n  _createClass(ResourceEventConfigAdder, [{\n    key: \"transform\",\n    value: function transform(viewProps, calendarProps) {\n      if (!calendarProps.viewSpec.optionDefaults.needsResourceData) {\n        return {\n          eventUiBases: this.injectResourceEventUis(viewProps.eventUiBases, viewProps.eventStore.defs, this.buildResourceEventUis(calendarProps.resourceStore))\n        };\n      }\n      return null;\n    }\n  }]);\n  return ResourceEventConfigAdder;\n}();\nfunction buildResourceEventUis(resourceStore) {\n  return mapHash(resourceStore, function (resource) {\n    return resource.ui;\n  });\n}\nfunction injectResourceEventUis(eventUiBases, eventDefs, resourceEventUis) {\n  return mapHash(eventUiBases, function (eventUi, defId) {\n    if (defId) {\n      // not the '' key\n      return injectResourceEventUi(eventUi, eventDefs[defId], resourceEventUis);\n    }\n    return eventUi;\n  });\n}\nfunction injectResourceEventUi(origEventUi, eventDef, resourceEventUis) {\n  var parts = [];\n  // first resource takes precedence, which fights with the ordering of combineEventUis, thus the unshifts\n  var _iterator2 = _createForOfIteratorHelper(eventDef.resourceIds),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var resourceId = _step2.value;\n      if (resourceEventUis[resourceId]) {\n        parts.unshift(resourceEventUis[resourceId]);\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  parts.unshift(origEventUi);\n  return combineEventUis(parts);\n}\nvar defs = []; // TODO: use plugin system\nfunction registerResourceSourceDef(def) {\n  defs.push(def);\n}\nfunction getResourceSourceDef(id) {\n  return defs[id];\n}\nfunction getResourceSourceDefs() {\n  return defs;\n}\n\n// TODO: make this a plugin-able parser\n// TODO: success/failure\nvar RESOURCE_SOURCE_REFINERS = {\n  id: String,\n  // for array. TODO: move to resource-array\n  resources: identity,\n  // for json feed. TODO: move to resource-json-feed\n  url: String,\n  method: String,\n  startParam: String,\n  endParam: String,\n  timeZoneParam: String,\n  extraParams: identity\n};\nfunction parseResourceSource(input) {\n  var inputObj;\n  if (typeof input === 'string') {\n    inputObj = {\n      url: input\n    };\n  } else if (typeof input === 'function' || Array.isArray(input)) {\n    inputObj = {\n      resources: input\n    };\n  } else if (typeof input === 'object' && input) {\n    // non-null object\n    inputObj = input;\n  }\n  if (inputObj) {\n    var _refineProps = refineProps(inputObj, RESOURCE_SOURCE_REFINERS),\n      refined = _refineProps.refined,\n      extra = _refineProps.extra;\n    warnUnknownProps(extra);\n    var metaRes = buildResourceSourceMeta(refined);\n    if (metaRes) {\n      return {\n        _raw: input,\n        sourceId: guid(),\n        sourceDefId: metaRes.sourceDefId,\n        meta: metaRes.meta,\n        publicId: refined.id || '',\n        isFetching: false,\n        latestFetchId: '',\n        fetchRange: null\n      };\n    }\n  }\n  return null;\n}\nfunction buildResourceSourceMeta(refined) {\n  var defs = getResourceSourceDefs();\n  for (var i = defs.length - 1; i >= 0; i -= 1) {\n    // later-added plugins take precedence\n    var def = defs[i];\n    var meta = def.parseMeta(refined);\n    if (meta) {\n      return {\n        meta: meta,\n        sourceDefId: i\n      };\n    }\n  }\n  return null;\n}\nfunction warnUnknownProps(props) {\n  for (var propName in props) {\n    console.warn(\"Unknown resource prop '\".concat(propName, \"'\"));\n  }\n}\nfunction reduceResourceSource(source, action, context) {\n  var options = context.options,\n    dateProfile = context.dateProfile;\n  if (!source || !action) {\n    return createSource(options.initialResources || options.resources, dateProfile.activeRange, options.refetchResourcesOnNavigate, context);\n  }\n  switch (action.type) {\n    case 'RESET_RESOURCE_SOURCE':\n      return createSource(action.resourceSourceInput, dateProfile.activeRange, options.refetchResourcesOnNavigate, context);\n    case 'PREV': // TODO: how do we track all actions that affect dateProfile :(\n    case 'NEXT':\n    case 'CHANGE_DATE':\n    case 'CHANGE_VIEW_TYPE':\n      return handleRangeChange(source, dateProfile.activeRange, options.refetchResourcesOnNavigate, context);\n    case 'RECEIVE_RESOURCES':\n    case 'RECEIVE_RESOURCE_ERROR':\n      return receiveResponse(source, action.fetchId, action.fetchRange);\n    case 'REFETCH_RESOURCES':\n      return fetchSource(source, dateProfile.activeRange, context);\n    default:\n      return source;\n  }\n}\nfunction createSource(input, activeRange, refetchResourcesOnNavigate, context) {\n  if (input) {\n    var source = parseResourceSource(input);\n    source = fetchSource(source, refetchResourcesOnNavigate ? activeRange : null, context);\n    return source;\n  }\n  return null;\n}\nfunction handleRangeChange(source, activeRange, refetchResourcesOnNavigate, context) {\n  if (refetchResourcesOnNavigate && !doesSourceIgnoreRange(source) && (!source.fetchRange || !rangesEqual(source.fetchRange, activeRange))) {\n    return fetchSource(source, activeRange, context);\n  }\n  return source;\n}\nfunction doesSourceIgnoreRange(source) {\n  return Boolean(getResourceSourceDef(source.sourceDefId).ignoreRange);\n}\nfunction fetchSource(source, fetchRange, context) {\n  var sourceDef = getResourceSourceDef(source.sourceDefId);\n  var fetchId = guid();\n  sourceDef.fetch({\n    resourceSource: source,\n    range: fetchRange,\n    context: context\n  }, function (res) {\n    context.dispatch({\n      type: 'RECEIVE_RESOURCES',\n      fetchId: fetchId,\n      fetchRange: fetchRange,\n      rawResources: res.rawResources\n    });\n  }, function (error) {\n    context.dispatch({\n      type: 'RECEIVE_RESOURCE_ERROR',\n      fetchId: fetchId,\n      fetchRange: fetchRange,\n      error: error\n    });\n  });\n  return Object.assign(Object.assign({}, source), {\n    isFetching: true,\n    latestFetchId: fetchId\n  });\n}\nfunction receiveResponse(source, fetchId, fetchRange) {\n  if (fetchId === source.latestFetchId) {\n    return Object.assign(Object.assign({}, source), {\n      isFetching: false,\n      fetchRange: fetchRange\n    });\n  }\n  return source;\n}\nfunction reduceResourceStore(store, action, source, context) {\n  if (!store || !action) {\n    return {};\n  }\n  switch (action.type) {\n    case 'RECEIVE_RESOURCES':\n      return receiveRawResources(store, action.rawResources, action.fetchId, source, context);\n    case 'ADD_RESOURCE':\n      return addResource(store, action.resourceHash);\n    case 'REMOVE_RESOURCE':\n      return removeResource(store, action.resourceId);\n    case 'SET_RESOURCE_PROP':\n      return setResourceProp(store, action.resourceId, action.propName, action.propValue);\n    case 'SET_RESOURCE_EXTENDED_PROP':\n      return setResourceExtendedProp(store, action.resourceId, action.propName, action.propValue);\n    default:\n      return store;\n  }\n}\nfunction receiveRawResources(existingStore, inputs, fetchId, source, context) {\n  if (source.latestFetchId === fetchId) {\n    var nextStore = {};\n    var _iterator3 = _createForOfIteratorHelper(inputs),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var input = _step3.value;\n        parseResource(input, '', nextStore, context);\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    return nextStore;\n  }\n  return existingStore;\n}\nfunction addResource(existingStore, additions) {\n  // TODO: warn about duplicate IDs\n  return Object.assign(Object.assign({}, existingStore), additions);\n}\nfunction removeResource(existingStore, resourceId) {\n  var newStore = Object.assign({}, existingStore);\n  delete newStore[resourceId];\n  // promote children\n  for (var childResourceId in newStore) {\n    // a child, *maybe* but probably not\n    if (newStore[childResourceId].parentId === resourceId) {\n      newStore[childResourceId] = Object.assign(Object.assign({}, newStore[childResourceId]), {\n        parentId: ''\n      });\n    }\n  }\n  return newStore;\n}\nfunction setResourceProp(existingStore, resourceId, name, value) {\n  var existingResource = existingStore[resourceId];\n  // TODO: sanitization\n  if (existingResource) {\n    return Object.assign(Object.assign({}, existingStore), _defineProperty({}, resourceId, Object.assign(Object.assign({}, existingResource), _defineProperty({}, name, value))));\n  }\n  return existingStore;\n}\nfunction setResourceExtendedProp(existingStore, resourceId, name, value) {\n  var existingResource = existingStore[resourceId];\n  if (existingResource) {\n    return Object.assign(Object.assign({}, existingStore), _defineProperty({}, resourceId, Object.assign(Object.assign({}, existingResource), {\n      extendedProps: Object.assign(Object.assign({}, existingResource.extendedProps), _defineProperty({}, name, value))\n    })));\n  }\n  return existingStore;\n}\nfunction reduceResourceEntityExpansions(expansions, action) {\n  if (!expansions || !action) {\n    return {};\n  }\n  switch (action.type) {\n    case 'SET_RESOURCE_ENTITY_EXPANDED':\n      return Object.assign(Object.assign({}, expansions), _defineProperty({}, action.id, action.isExpanded));\n    default:\n      return expansions;\n  }\n}\nfunction reduceResources(state, action, context) {\n  var resourceSource = reduceResourceSource(state && state.resourceSource, action, context);\n  var resourceStore = reduceResourceStore(state && state.resourceStore, action, resourceSource, context);\n  var resourceEntityExpansions = reduceResourceEntityExpansions(state && state.resourceEntityExpansions, action);\n  return {\n    resourceSource: resourceSource,\n    resourceStore: resourceStore,\n    resourceEntityExpansions: resourceEntityExpansions\n  };\n}\nvar EVENT_REFINERS = {\n  resourceId: String,\n  resourceIds: identity,\n  resourceEditable: Boolean\n};\nfunction generateEventDefResourceMembers(refined) {\n  return {\n    resourceIds: ensureStringArray(refined.resourceIds).concat(refined.resourceId ? [refined.resourceId] : []),\n    resourceEditable: refined.resourceEditable\n  };\n}\nfunction ensureStringArray(items) {\n  return (items || []).map(function (item) {\n    return String(item);\n  });\n}\nfunction transformDateSelectionJoin(hit0, hit1) {\n  var resourceId0 = hit0.dateSpan.resourceId;\n  var resourceId1 = hit1.dateSpan.resourceId;\n  if (resourceId0 && resourceId1) {\n    return {\n      resourceId: resourceId0\n    };\n  }\n  return null;\n}\nCalendarImpl.prototype.addResource = function (input) {\n  var _this = this;\n  var scrollTo = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var currentState = this.getCurrentData();\n  var resourceHash;\n  var resource;\n  if (input instanceof ResourceApi) {\n    resource = input._resource;\n    resourceHash = _defineProperty({}, resource.id, resource);\n  } else {\n    resourceHash = {};\n    resource = parseResource(input, '', resourceHash, currentState);\n  }\n  this.dispatch({\n    type: 'ADD_RESOURCE',\n    resourceHash: resourceHash\n  });\n  if (scrollTo) {\n    // TODO: wait til dispatch completes somehow\n    this.trigger('_scrollRequest', {\n      resourceId: resource.id\n    });\n  }\n  var resourceApi = new ResourceApi(currentState, resource);\n  currentState.emitter.trigger('resourceAdd', {\n    resource: resourceApi,\n    revert: function revert() {\n      _this.dispatch({\n        type: 'REMOVE_RESOURCE',\n        resourceId: resource.id\n      });\n    }\n  });\n  return resourceApi;\n};\nCalendarImpl.prototype.getResourceById = function (id) {\n  id = String(id);\n  var currentState = this.getCurrentData(); // eslint-disable-line react/no-this-in-sfc\n  if (currentState.resourceStore) {\n    // guard against calendar with no resource functionality\n    var rawResource = currentState.resourceStore[id];\n    if (rawResource) {\n      return new ResourceApi(currentState, rawResource);\n    }\n  }\n  return null;\n};\nCalendarImpl.prototype.getResources = function () {\n  var currentState = this.getCurrentData();\n  var resourceStore = currentState.resourceStore;\n  var resourceApis = [];\n  if (resourceStore) {\n    // guard against calendar with no resource functionality\n    for (var resourceId in resourceStore) {\n      resourceApis.push(new ResourceApi(currentState, resourceStore[resourceId]));\n    }\n  }\n  return resourceApis;\n};\nCalendarImpl.prototype.getTopLevelResources = function () {\n  var currentState = this.getCurrentData();\n  var resourceStore = currentState.resourceStore;\n  var resourceApis = [];\n  if (resourceStore) {\n    // guard against calendar with no resource functionality\n    for (var resourceId in resourceStore) {\n      if (!resourceStore[resourceId].parentId) {\n        resourceApis.push(new ResourceApi(currentState, resourceStore[resourceId]));\n      }\n    }\n  }\n  return resourceApis;\n};\nCalendarImpl.prototype.refetchResources = function () {\n  this.dispatch({\n    type: 'REFETCH_RESOURCES'\n  });\n};\nfunction transformDatePoint(dateSpan, context) {\n  return dateSpan.resourceId ? {\n    resource: context.calendarApi.getResourceById(dateSpan.resourceId)\n  } : {};\n}\nfunction transformDateSpan(dateSpan, context) {\n  return dateSpan.resourceId ? {\n    resource: context.calendarApi.getResourceById(dateSpan.resourceId)\n  } : {};\n}\nfunction isPropsValidWithResources(combinedProps, context) {\n  var splitter = new ResourceSplitter();\n  var sets = splitter.splitProps(Object.assign(Object.assign({}, combinedProps), {\n    resourceStore: context.getCurrentData().resourceStore\n  }));\n  for (var resourceId in sets) {\n    var props = sets[resourceId];\n    // merge in event data from the non-resource segment\n    if (resourceId && sets['']) {\n      // current segment is not the non-resource one, and there IS a non-resource one\n      props = Object.assign(Object.assign({}, props), {\n        eventStore: mergeEventStores(sets[''].eventStore, props.eventStore),\n        eventUiBases: Object.assign(Object.assign({}, sets[''].eventUiBases), props.eventUiBases)\n      });\n    }\n    if (!isPropsValid(props, context, {\n      resourceId: resourceId\n    }, filterConfig.bind(null, resourceId))) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction filterConfig(resourceId, config) {\n  return Object.assign(Object.assign({}, config), {\n    constraints: filterConstraints(resourceId, config.constraints)\n  });\n}\nfunction filterConstraints(resourceId, constraints) {\n  return constraints.map(function (constraint) {\n    var defs = constraint.defs;\n    if (defs) {\n      // we are dealing with an EventStore\n      // if any of the events define constraints to resources that are NOT this resource,\n      // then this resource is unconditionally prohibited, which is what a `false` value does.\n      for (var defId in defs) {\n        var resourceIds = defs[defId].resourceIds;\n        if (resourceIds.length && resourceIds.indexOf(resourceId) === -1) {\n          // TODO: use a hash?!!! (for other reasons too)\n          return false;\n        }\n      }\n    }\n    return constraint;\n  });\n}\nfunction transformExternalDef(dateSpan) {\n  return dateSpan.resourceId ? {\n    resourceId: dateSpan.resourceId\n  } : {};\n}\nvar optionChangeHandlers = {\n  resources: handleResources\n};\nfunction handleResources(newSourceInput, context) {\n  var oldSourceInput = context.getCurrentData().resourceSource._raw;\n  if (oldSourceInput !== newSourceInput) {\n    context.dispatch({\n      type: 'RESET_RESOURCE_SOURCE',\n      resourceSourceInput: newSourceInput\n    });\n  }\n}\nvar OPTION_REFINERS = {\n  initialResources: identity,\n  resources: identity,\n  eventResourceEditable: Boolean,\n  refetchResourcesOnNavigate: Boolean,\n  resourceOrder: parseFieldSpecs,\n  filterResourcesWithEvents: Boolean,\n  resourceGroupField: String,\n  resourceAreaWidth: identity,\n  resourceAreaColumns: identity,\n  resourcesInitiallyExpanded: Boolean,\n  datesAboveResources: Boolean,\n  needsResourceData: Boolean,\n  resourceAreaHeaderClassNames: identity,\n  resourceAreaHeaderContent: identity,\n  resourceAreaHeaderDidMount: identity,\n  resourceAreaHeaderWillUnmount: identity,\n  resourceGroupLabelClassNames: identity,\n  resourceGroupLabelContent: identity,\n  resourceGroupLabelDidMount: identity,\n  resourceGroupLabelWillUnmount: identity,\n  resourceLabelClassNames: identity,\n  resourceLabelContent: identity,\n  resourceLabelDidMount: identity,\n  resourceLabelWillUnmount: identity,\n  resourceLaneClassNames: identity,\n  resourceLaneContent: identity,\n  resourceLaneDidMount: identity,\n  resourceLaneWillUnmount: identity,\n  resourceGroupLaneClassNames: identity,\n  resourceGroupLaneContent: identity,\n  resourceGroupLaneDidMount: identity,\n  resourceGroupLaneWillUnmount: identity\n};\nvar LISTENER_REFINERS = {\n  resourcesSet: identity,\n  resourceAdd: identity,\n  resourceChange: identity,\n  resourceRemove: identity\n};\nEventImpl.prototype.getResources = function () {\n  var calendarApi = this._context.calendarApi;\n  return this._def.resourceIds.map(function (resourceId) {\n    return calendarApi.getResourceById(resourceId);\n  });\n};\nEventImpl.prototype.setResources = function (resources) {\n  var resourceIds = [];\n  // massage resources -> resourceIds\n  var _iterator4 = _createForOfIteratorHelper(resources),\n    _step4;\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var resource = _step4.value;\n      var resourceId = null;\n      if (typeof resource === 'string') {\n        resourceId = resource;\n      } else if (typeof resource === 'number') {\n        resourceId = String(resource);\n      } else if (resource instanceof ResourceApi) {\n        resourceId = resource.id; // guaranteed to always have an ID. hmmm\n      } else {\n        console.warn('unknown resource type: ' + resource);\n      }\n      if (resourceId) {\n        resourceIds.push(resourceId);\n      }\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n  this.mutate({\n    standardProps: {\n      resourceIds: resourceIds\n    }\n  });\n};\nregisterResourceSourceDef({\n  ignoreRange: true,\n  parseMeta: function parseMeta(refined) {\n    if (Array.isArray(refined.resources)) {\n      return refined.resources;\n    }\n    return null;\n  },\n  fetch: function fetch(arg, successCallback) {\n    successCallback({\n      rawResources: arg.resourceSource.meta\n    });\n  }\n});\nregisterResourceSourceDef({\n  parseMeta: function parseMeta(refined) {\n    if (typeof refined.resources === 'function') {\n      return refined.resources;\n    }\n    return null;\n  },\n  fetch: function fetch(arg, successCallback, errorCallback) {\n    var dateEnv = arg.context.dateEnv;\n    var func = arg.resourceSource.meta;\n    var publicArg = arg.range ? {\n      start: dateEnv.toDate(arg.range.start),\n      end: dateEnv.toDate(arg.range.end),\n      startStr: dateEnv.formatIso(arg.range.start),\n      endStr: dateEnv.formatIso(arg.range.end),\n      timeZone: dateEnv.timeZone\n    } : {};\n    unpromisify(func.bind(null, publicArg), function (rawResources) {\n      return successCallback({\n        rawResources: rawResources\n      });\n    }, errorCallback);\n  }\n});\nregisterResourceSourceDef({\n  parseMeta: function parseMeta(refined) {\n    if (refined.url) {\n      return {\n        url: refined.url,\n        method: (refined.method || 'GET').toUpperCase(),\n        extraParams: refined.extraParams\n      };\n    }\n    return null;\n  },\n  fetch: function fetch(arg, successCallback, errorCallback) {\n    var meta = arg.resourceSource.meta;\n    var requestParams = buildRequestParams(meta, arg.range, arg.context);\n    requestJson(meta.method, meta.url, requestParams).then(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n        rawResources = _ref2[0],\n        response = _ref2[1];\n      successCallback({\n        rawResources: rawResources,\n        response: response\n      });\n    }, errorCallback);\n  }\n});\n// TODO: somehow consolidate with event json feed\nfunction buildRequestParams(meta, range, context) {\n  var dateEnv = context.dateEnv,\n    options = context.options;\n  var startParam;\n  var endParam;\n  var timeZoneParam;\n  var customRequestParams;\n  var params = {};\n  if (range) {\n    startParam = meta.startParam;\n    if (startParam == null) {\n      startParam = options.startParam;\n    }\n    endParam = meta.endParam;\n    if (endParam == null) {\n      endParam = options.endParam;\n    }\n    timeZoneParam = meta.timeZoneParam;\n    if (timeZoneParam == null) {\n      timeZoneParam = options.timeZoneParam;\n    }\n    params[startParam] = dateEnv.formatIso(range.start);\n    params[endParam] = dateEnv.formatIso(range.end);\n    if (dateEnv.timeZone !== 'local') {\n      params[timeZoneParam] = dateEnv.timeZone;\n    }\n  }\n  // retrieve any outbound GET/POST data from the options\n  if (typeof meta.extraParams === 'function') {\n    // supplied as a function that returns a key/value object\n    customRequestParams = meta.extraParams();\n  } else {\n    // probably supplied as a straight key/value object\n    customRequestParams = meta.extraParams || {};\n  }\n  Object.assign(params, customRequestParams);\n  return params;\n}\nvar index = createPlugin({\n  name: '@fullcalendar/resource',\n  premiumReleaseDate: '2024-07-12',\n  deps: [premiumCommonPlugin],\n  reducers: [reduceResources],\n  isLoadingFuncs: [function (state) {\n    return state.resourceSource && state.resourceSource.isFetching;\n  }],\n  eventRefiners: EVENT_REFINERS,\n  eventDefMemberAdders: [generateEventDefResourceMembers],\n  isDraggableTransformers: [transformIsDraggable],\n  eventDragMutationMassagers: [massageEventDragMutation],\n  eventDefMutationAppliers: [applyEventDefMutation],\n  dateSelectionTransformers: [transformDateSelectionJoin],\n  datePointTransforms: [transformDatePoint],\n  dateSpanTransforms: [transformDateSpan],\n  viewPropsTransformers: [ResourceDataAdder, ResourceEventConfigAdder],\n  isPropsValid: isPropsValidWithResources,\n  externalDefTransforms: [transformExternalDef],\n  eventDropTransformers: [transformEventDrop],\n  optionChangeHandlers: optionChangeHandlers,\n  optionRefiners: OPTION_REFINERS,\n  listenerRefiners: LISTENER_REFINERS,\n  propSetHandlers: {\n    resourceStore: handleResourceStore\n  }\n});\nexport { index as default };","map":{"version":3,"names":["createPlugin","premiumCommonPlugin","memoize","filterHash","rangesIntersect","isPropsEqual","mapHash","combineEventUis","refineProps","guid","identity","rangesEqual","CalendarImpl","mergeEventStores","isPropsValid","parseFieldSpecs","EventImpl","unpromisify","requestJson","p","parseResource","R","ResourceApi","a","ResourceSplitter","h","handleResourceStore","massageEventDragMutation","eventMutation","hit0","hit1","resource0","dateSpan","resourceId","resource1","resourceMutation","matchResourceId","setResourceId","applyEventDefMutation","eventDef","mutation","context","computeResourceEditable","index","resourceIds","indexOf","slice","splice","push","resourceEditable","source","sourceId","getCurrentData","eventSources","extendedProps","options","eventResourceEditable","editable","transformEventDrop","calendarApi","oldResource","getResourceById","newResource","ResourceDataAdder","_classCallCheck","filterResources","_createClass","key","value","transform","viewProps","calendarProps","viewSpec","optionDefaults","needsResourceData","resourceStore","filterResourcesWithEvents","eventStore","dateProfile","activeRange","resourceEntityExpansions","doFilterResourcesWithEvents","instancesInRange","filterEventInstancesInRange","instances","hasEvents","computeHasEvents","defs","Object","assign","computeAncestorHasEvents","resource","eventInstances","eventInstance","range","eventDefs","instanceId","instance","_iterator","_createForOfIteratorHelper","defId","_step","s","n","done","err","e","f","res","parentId","transformIsDraggable","val","eventUi","state","viewSpecs","currentViewType","ResourceEventConfigAdder","buildResourceEventUis","injectResourceEventUis","eventUiBases","ui","resourceEventUis","injectResourceEventUi","origEventUi","parts","_iterator2","_step2","unshift","registerResourceSourceDef","def","getResourceSourceDef","id","getResourceSourceDefs","RESOURCE_SOURCE_REFINERS","String","resources","url","method","startParam","endParam","timeZoneParam","extraParams","parseResourceSource","input","inputObj","Array","isArray","_refineProps","refined","extra","warnUnknownProps","metaRes","buildResourceSourceMeta","_raw","sourceDefId","meta","publicId","isFetching","latestFetchId","fetchRange","i","length","parseMeta","props","propName","console","warn","concat","reduceResourceSource","action","createSource","initialResources","refetchResourcesOnNavigate","type","resourceSourceInput","handleRangeChange","receiveResponse","fetchId","fetchSource","doesSourceIgnoreRange","Boolean","ignoreRange","sourceDef","fetch","resourceSource","dispatch","rawResources","error","reduceResourceStore","store","receiveRawResources","addResource","resourceHash","removeResource","setResourceProp","propValue","setResourceExtendedProp","existingStore","inputs","nextStore","_iterator3","_step3","additions","newStore","childResourceId","name","existingResource","_defineProperty","reduceResourceEntityExpansions","expansions","isExpanded","reduceResources","EVENT_REFINERS","generateEventDefResourceMembers","ensureStringArray","items","map","item","transformDateSelectionJoin","resourceId0","resourceId1","prototype","_this","scrollTo","arguments","undefined","currentState","_resource","trigger","resourceApi","emitter","revert","rawResource","getResources","resourceApis","getTopLevelResources","refetchResources","transformDatePoint","transformDateSpan","isPropsValidWithResources","combinedProps","splitter","sets","splitProps","filterConfig","bind","config","constraints","filterConstraints","constraint","transformExternalDef","optionChangeHandlers","handleResources","newSourceInput","oldSourceInput","OPTION_REFINERS","resourceOrder","resourceGroupField","resourceAreaWidth","resourceAreaColumns","resourcesInitiallyExpanded","datesAboveResources","resourceAreaHeaderClassNames","resourceAreaHeaderContent","resourceAreaHeaderDidMount","resourceAreaHeaderWillUnmount","resourceGroupLabelClassNames","resourceGroupLabelContent","resourceGroupLabelDidMount","resourceGroupLabelWillUnmount","resourceLabelClassNames","resourceLabelContent","resourceLabelDidMount","resourceLabelWillUnmount","resourceLaneClassNames","resourceLaneContent","resourceLaneDidMount","resourceLaneWillUnmount","resourceGroupLaneClassNames","resourceGroupLaneContent","resourceGroupLaneDidMount","resourceGroupLaneWillUnmount","LISTENER_REFINERS","resourcesSet","resourceAdd","resourceChange","resourceRemove","_context","_def","setResources","_iterator4","_step4","mutate","standardProps","arg","successCallback","errorCallback","dateEnv","func","publicArg","start","toDate","end","startStr","formatIso","endStr","timeZone","toUpperCase","requestParams","buildRequestParams","then","_ref","_ref2","_slicedToArray","response","customRequestParams","params","premiumReleaseDate","deps","reducers","isLoadingFuncs","eventRefiners","eventDefMemberAdders","isDraggableTransformers","eventDragMutationMassagers","eventDefMutationAppliers","dateSelectionTransformers","datePointTransforms","dateSpanTransforms","viewPropsTransformers","externalDefTransforms","eventDropTransformers","optionRefiners","listenerRefiners","propSetHandlers","default"],"sources":["C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@fullcalendar/resource/index.js"],"sourcesContent":["import { createPlugin } from '@fullcalendar/core/index.js';\nimport premiumCommonPlugin from '@fullcalendar/premium-common/index.js';\nimport { memoize, filterHash, rangesIntersect, isPropsEqual, mapHash, combineEventUis, refineProps, guid, identity, rangesEqual, CalendarImpl, mergeEventStores, isPropsValid, parseFieldSpecs, EventImpl, unpromisify, requestJson } from '@fullcalendar/core/internal.js';\nimport { p as parseResource, R as ResourceApi, a as ResourceSplitter, h as handleResourceStore } from './internal-common.js';\nexport { R as ResourceApi } from './internal-common.js';\nimport '@fullcalendar/core/preact.js';\n\nfunction massageEventDragMutation(eventMutation, hit0, hit1) {\n    let resource0 = hit0.dateSpan.resourceId;\n    let resource1 = hit1.dateSpan.resourceId;\n    if (resource0 && resource1 &&\n        resource0 !== resource1) {\n        eventMutation.resourceMutation = {\n            matchResourceId: resource0,\n            setResourceId: resource1,\n        };\n    }\n}\n/*\nTODO: all this would be much easier if we were using a hash!\n*/\nfunction applyEventDefMutation(eventDef, mutation, context) {\n    let resourceMutation = mutation.resourceMutation;\n    if (resourceMutation && computeResourceEditable(eventDef, context)) {\n        let index = eventDef.resourceIds.indexOf(resourceMutation.matchResourceId);\n        if (index !== -1) {\n            let resourceIds = eventDef.resourceIds.slice(); // copy\n            resourceIds.splice(index, 1); // remove\n            if (resourceIds.indexOf(resourceMutation.setResourceId) === -1) { // not already in there\n                resourceIds.push(resourceMutation.setResourceId); // add\n            }\n            eventDef.resourceIds = resourceIds;\n        }\n    }\n}\n/*\nHACK\nTODO: use EventUi system instead of this\n*/\nfunction computeResourceEditable(eventDef, context) {\n    let { resourceEditable } = eventDef;\n    if (resourceEditable == null) {\n        let source = eventDef.sourceId && context.getCurrentData().eventSources[eventDef.sourceId];\n        if (source) {\n            resourceEditable = source.extendedProps.resourceEditable; // used the Source::extendedProps hack\n        }\n        if (resourceEditable == null) {\n            resourceEditable = context.options.eventResourceEditable;\n            if (resourceEditable == null) {\n                resourceEditable = context.options.editable; // TODO: use defaults system instead\n            }\n        }\n    }\n    return resourceEditable;\n}\nfunction transformEventDrop(mutation, context) {\n    let { resourceMutation } = mutation;\n    if (resourceMutation) {\n        let { calendarApi } = context;\n        return {\n            oldResource: calendarApi.getResourceById(resourceMutation.matchResourceId),\n            newResource: calendarApi.getResourceById(resourceMutation.setResourceId),\n        };\n    }\n    return {\n        oldResource: null,\n        newResource: null,\n    };\n}\n\nclass ResourceDataAdder {\n    constructor() {\n        this.filterResources = memoize(filterResources);\n    }\n    transform(viewProps, calendarProps) {\n        if (calendarProps.viewSpec.optionDefaults.needsResourceData) {\n            return {\n                resourceStore: this.filterResources(calendarProps.resourceStore, calendarProps.options.filterResourcesWithEvents, calendarProps.eventStore, calendarProps.dateProfile.activeRange),\n                resourceEntityExpansions: calendarProps.resourceEntityExpansions,\n            };\n        }\n        return null;\n    }\n}\nfunction filterResources(resourceStore, doFilterResourcesWithEvents, eventStore, activeRange) {\n    if (doFilterResourcesWithEvents) {\n        let instancesInRange = filterEventInstancesInRange(eventStore.instances, activeRange);\n        let hasEvents = computeHasEvents(instancesInRange, eventStore.defs);\n        Object.assign(hasEvents, computeAncestorHasEvents(hasEvents, resourceStore));\n        return filterHash(resourceStore, (resource, resourceId) => hasEvents[resourceId]);\n    }\n    return resourceStore;\n}\nfunction filterEventInstancesInRange(eventInstances, activeRange) {\n    return filterHash(eventInstances, (eventInstance) => rangesIntersect(eventInstance.range, activeRange));\n}\nfunction computeHasEvents(eventInstances, eventDefs) {\n    let hasEvents = {};\n    for (let instanceId in eventInstances) {\n        let instance = eventInstances[instanceId];\n        for (let resourceId of eventDefs[instance.defId].resourceIds) {\n            hasEvents[resourceId] = true;\n        }\n    }\n    return hasEvents;\n}\n/*\nmark resources as having events if any of their ancestors have them\nNOTE: resourceStore might not have all the resources that hasEvents{} has keyed\n*/\nfunction computeAncestorHasEvents(hasEvents, resourceStore) {\n    let res = {};\n    for (let resourceId in hasEvents) {\n        let resource;\n        while ((resource = resourceStore[resourceId])) {\n            resourceId = resource.parentId; // now functioning as the parentId\n            if (resourceId) {\n                res[resourceId] = true;\n            }\n            else {\n                break;\n            }\n        }\n    }\n    return res;\n}\n/*\nfor making sure events that have editable resources are always draggable in resource views\n*/\nfunction transformIsDraggable(val, eventDef, eventUi, context) {\n    if (!val) {\n        let state = context.getCurrentData();\n        let viewSpec = state.viewSpecs[state.currentViewType];\n        if (viewSpec.optionDefaults.needsResourceData) {\n            if (computeResourceEditable(eventDef, context)) {\n                return true;\n            }\n        }\n    }\n    return val;\n}\n\n// for when non-resource view should be given EventUi info (for event coloring/constraints based off of resource data)\nclass ResourceEventConfigAdder {\n    constructor() {\n        this.buildResourceEventUis = memoize(buildResourceEventUis, isPropsEqual);\n        this.injectResourceEventUis = memoize(injectResourceEventUis);\n    }\n    transform(viewProps, calendarProps) {\n        if (!calendarProps.viewSpec.optionDefaults.needsResourceData) {\n            return {\n                eventUiBases: this.injectResourceEventUis(viewProps.eventUiBases, viewProps.eventStore.defs, this.buildResourceEventUis(calendarProps.resourceStore)),\n            };\n        }\n        return null;\n    }\n}\nfunction buildResourceEventUis(resourceStore) {\n    return mapHash(resourceStore, (resource) => resource.ui);\n}\nfunction injectResourceEventUis(eventUiBases, eventDefs, resourceEventUis) {\n    return mapHash(eventUiBases, (eventUi, defId) => {\n        if (defId) { // not the '' key\n            return injectResourceEventUi(eventUi, eventDefs[defId], resourceEventUis);\n        }\n        return eventUi;\n    });\n}\nfunction injectResourceEventUi(origEventUi, eventDef, resourceEventUis) {\n    let parts = [];\n    // first resource takes precedence, which fights with the ordering of combineEventUis, thus the unshifts\n    for (let resourceId of eventDef.resourceIds) {\n        if (resourceEventUis[resourceId]) {\n            parts.unshift(resourceEventUis[resourceId]);\n        }\n    }\n    parts.unshift(origEventUi);\n    return combineEventUis(parts);\n}\n\nlet defs = []; // TODO: use plugin system\nfunction registerResourceSourceDef(def) {\n    defs.push(def);\n}\nfunction getResourceSourceDef(id) {\n    return defs[id];\n}\nfunction getResourceSourceDefs() {\n    return defs;\n}\n\n// TODO: make this a plugin-able parser\n// TODO: success/failure\nconst RESOURCE_SOURCE_REFINERS = {\n    id: String,\n    // for array. TODO: move to resource-array\n    resources: identity,\n    // for json feed. TODO: move to resource-json-feed\n    url: String,\n    method: String,\n    startParam: String,\n    endParam: String,\n    timeZoneParam: String,\n    extraParams: identity,\n};\nfunction parseResourceSource(input) {\n    let inputObj;\n    if (typeof input === 'string') {\n        inputObj = { url: input };\n    }\n    else if (typeof input === 'function' || Array.isArray(input)) {\n        inputObj = { resources: input };\n    }\n    else if (typeof input === 'object' && input) { // non-null object\n        inputObj = input;\n    }\n    if (inputObj) {\n        let { refined, extra } = refineProps(inputObj, RESOURCE_SOURCE_REFINERS);\n        warnUnknownProps(extra);\n        let metaRes = buildResourceSourceMeta(refined);\n        if (metaRes) {\n            return {\n                _raw: input,\n                sourceId: guid(),\n                sourceDefId: metaRes.sourceDefId,\n                meta: metaRes.meta,\n                publicId: refined.id || '',\n                isFetching: false,\n                latestFetchId: '',\n                fetchRange: null,\n            };\n        }\n    }\n    return null;\n}\nfunction buildResourceSourceMeta(refined) {\n    let defs = getResourceSourceDefs();\n    for (let i = defs.length - 1; i >= 0; i -= 1) { // later-added plugins take precedence\n        let def = defs[i];\n        let meta = def.parseMeta(refined);\n        if (meta) {\n            return { meta, sourceDefId: i };\n        }\n    }\n    return null;\n}\nfunction warnUnknownProps(props) {\n    for (let propName in props) {\n        console.warn(`Unknown resource prop '${propName}'`);\n    }\n}\n\nfunction reduceResourceSource(source, action, context) {\n    let { options, dateProfile } = context;\n    if (!source || !action) {\n        return createSource(options.initialResources || options.resources, dateProfile.activeRange, options.refetchResourcesOnNavigate, context);\n    }\n    switch (action.type) {\n        case 'RESET_RESOURCE_SOURCE':\n            return createSource(action.resourceSourceInput, dateProfile.activeRange, options.refetchResourcesOnNavigate, context);\n        case 'PREV': // TODO: how do we track all actions that affect dateProfile :(\n        case 'NEXT':\n        case 'CHANGE_DATE':\n        case 'CHANGE_VIEW_TYPE':\n            return handleRangeChange(source, dateProfile.activeRange, options.refetchResourcesOnNavigate, context);\n        case 'RECEIVE_RESOURCES':\n        case 'RECEIVE_RESOURCE_ERROR':\n            return receiveResponse(source, action.fetchId, action.fetchRange);\n        case 'REFETCH_RESOURCES':\n            return fetchSource(source, dateProfile.activeRange, context);\n        default:\n            return source;\n    }\n}\nfunction createSource(input, activeRange, refetchResourcesOnNavigate, context) {\n    if (input) {\n        let source = parseResourceSource(input);\n        source = fetchSource(source, refetchResourcesOnNavigate ? activeRange : null, context);\n        return source;\n    }\n    return null;\n}\nfunction handleRangeChange(source, activeRange, refetchResourcesOnNavigate, context) {\n    if (refetchResourcesOnNavigate &&\n        !doesSourceIgnoreRange(source) &&\n        (!source.fetchRange || !rangesEqual(source.fetchRange, activeRange))) {\n        return fetchSource(source, activeRange, context);\n    }\n    return source;\n}\nfunction doesSourceIgnoreRange(source) {\n    return Boolean(getResourceSourceDef(source.sourceDefId).ignoreRange);\n}\nfunction fetchSource(source, fetchRange, context) {\n    let sourceDef = getResourceSourceDef(source.sourceDefId);\n    let fetchId = guid();\n    sourceDef.fetch({\n        resourceSource: source,\n        range: fetchRange,\n        context,\n    }, (res) => {\n        context.dispatch({\n            type: 'RECEIVE_RESOURCES',\n            fetchId,\n            fetchRange,\n            rawResources: res.rawResources,\n        });\n    }, (error) => {\n        context.dispatch({\n            type: 'RECEIVE_RESOURCE_ERROR',\n            fetchId,\n            fetchRange,\n            error,\n        });\n    });\n    return Object.assign(Object.assign({}, source), { isFetching: true, latestFetchId: fetchId });\n}\nfunction receiveResponse(source, fetchId, fetchRange) {\n    if (fetchId === source.latestFetchId) {\n        return Object.assign(Object.assign({}, source), { isFetching: false, fetchRange });\n    }\n    return source;\n}\n\nfunction reduceResourceStore(store, action, source, context) {\n    if (!store || !action) {\n        return {};\n    }\n    switch (action.type) {\n        case 'RECEIVE_RESOURCES':\n            return receiveRawResources(store, action.rawResources, action.fetchId, source, context);\n        case 'ADD_RESOURCE':\n            return addResource(store, action.resourceHash);\n        case 'REMOVE_RESOURCE':\n            return removeResource(store, action.resourceId);\n        case 'SET_RESOURCE_PROP':\n            return setResourceProp(store, action.resourceId, action.propName, action.propValue);\n        case 'SET_RESOURCE_EXTENDED_PROP':\n            return setResourceExtendedProp(store, action.resourceId, action.propName, action.propValue);\n        default:\n            return store;\n    }\n}\nfunction receiveRawResources(existingStore, inputs, fetchId, source, context) {\n    if (source.latestFetchId === fetchId) {\n        let nextStore = {};\n        for (let input of inputs) {\n            parseResource(input, '', nextStore, context);\n        }\n        return nextStore;\n    }\n    return existingStore;\n}\nfunction addResource(existingStore, additions) {\n    // TODO: warn about duplicate IDs\n    return Object.assign(Object.assign({}, existingStore), additions);\n}\nfunction removeResource(existingStore, resourceId) {\n    let newStore = Object.assign({}, existingStore);\n    delete newStore[resourceId];\n    // promote children\n    for (let childResourceId in newStore) { // a child, *maybe* but probably not\n        if (newStore[childResourceId].parentId === resourceId) {\n            newStore[childResourceId] = Object.assign(Object.assign({}, newStore[childResourceId]), { parentId: '' });\n        }\n    }\n    return newStore;\n}\nfunction setResourceProp(existingStore, resourceId, name, value) {\n    let existingResource = existingStore[resourceId];\n    // TODO: sanitization\n    if (existingResource) {\n        return Object.assign(Object.assign({}, existingStore), { [resourceId]: Object.assign(Object.assign({}, existingResource), { [name]: value }) });\n    }\n    return existingStore;\n}\nfunction setResourceExtendedProp(existingStore, resourceId, name, value) {\n    let existingResource = existingStore[resourceId];\n    if (existingResource) {\n        return Object.assign(Object.assign({}, existingStore), { [resourceId]: Object.assign(Object.assign({}, existingResource), { extendedProps: Object.assign(Object.assign({}, existingResource.extendedProps), { [name]: value }) }) });\n    }\n    return existingStore;\n}\n\nfunction reduceResourceEntityExpansions(expansions, action) {\n    if (!expansions || !action) {\n        return {};\n    }\n    switch (action.type) {\n        case 'SET_RESOURCE_ENTITY_EXPANDED':\n            return Object.assign(Object.assign({}, expansions), { [action.id]: action.isExpanded });\n        default:\n            return expansions;\n    }\n}\n\nfunction reduceResources(state, action, context) {\n    let resourceSource = reduceResourceSource(state && state.resourceSource, action, context);\n    let resourceStore = reduceResourceStore(state && state.resourceStore, action, resourceSource, context);\n    let resourceEntityExpansions = reduceResourceEntityExpansions(state && state.resourceEntityExpansions, action);\n    return {\n        resourceSource,\n        resourceStore,\n        resourceEntityExpansions,\n    };\n}\n\nconst EVENT_REFINERS = {\n    resourceId: String,\n    resourceIds: identity,\n    resourceEditable: Boolean,\n};\nfunction generateEventDefResourceMembers(refined) {\n    return {\n        resourceIds: ensureStringArray(refined.resourceIds)\n            .concat(refined.resourceId ? [refined.resourceId] : []),\n        resourceEditable: refined.resourceEditable,\n    };\n}\nfunction ensureStringArray(items) {\n    return (items || []).map((item) => String(item));\n}\n\nfunction transformDateSelectionJoin(hit0, hit1) {\n    let resourceId0 = hit0.dateSpan.resourceId;\n    let resourceId1 = hit1.dateSpan.resourceId;\n    if (resourceId0 && resourceId1) {\n        return { resourceId: resourceId0 };\n    }\n    return null;\n}\n\nCalendarImpl.prototype.addResource = function (input, scrollTo = true) {\n    let currentState = this.getCurrentData();\n    let resourceHash;\n    let resource;\n    if (input instanceof ResourceApi) {\n        resource = input._resource;\n        resourceHash = { [resource.id]: resource };\n    }\n    else {\n        resourceHash = {};\n        resource = parseResource(input, '', resourceHash, currentState);\n    }\n    this.dispatch({\n        type: 'ADD_RESOURCE',\n        resourceHash,\n    });\n    if (scrollTo) {\n        // TODO: wait til dispatch completes somehow\n        this.trigger('_scrollRequest', { resourceId: resource.id });\n    }\n    let resourceApi = new ResourceApi(currentState, resource);\n    currentState.emitter.trigger('resourceAdd', {\n        resource: resourceApi,\n        revert: () => {\n            this.dispatch({\n                type: 'REMOVE_RESOURCE',\n                resourceId: resource.id,\n            });\n        },\n    });\n    return resourceApi;\n};\nCalendarImpl.prototype.getResourceById = function (id) {\n    id = String(id);\n    let currentState = this.getCurrentData(); // eslint-disable-line react/no-this-in-sfc\n    if (currentState.resourceStore) { // guard against calendar with no resource functionality\n        let rawResource = currentState.resourceStore[id];\n        if (rawResource) {\n            return new ResourceApi(currentState, rawResource);\n        }\n    }\n    return null;\n};\nCalendarImpl.prototype.getResources = function () {\n    let currentState = this.getCurrentData();\n    let { resourceStore } = currentState;\n    let resourceApis = [];\n    if (resourceStore) { // guard against calendar with no resource functionality\n        for (let resourceId in resourceStore) {\n            resourceApis.push(new ResourceApi(currentState, resourceStore[resourceId]));\n        }\n    }\n    return resourceApis;\n};\nCalendarImpl.prototype.getTopLevelResources = function () {\n    let currentState = this.getCurrentData();\n    let { resourceStore } = currentState;\n    let resourceApis = [];\n    if (resourceStore) { // guard against calendar with no resource functionality\n        for (let resourceId in resourceStore) {\n            if (!resourceStore[resourceId].parentId) {\n                resourceApis.push(new ResourceApi(currentState, resourceStore[resourceId]));\n            }\n        }\n    }\n    return resourceApis;\n};\nCalendarImpl.prototype.refetchResources = function () {\n    this.dispatch({\n        type: 'REFETCH_RESOURCES',\n    });\n};\nfunction transformDatePoint(dateSpan, context) {\n    return dateSpan.resourceId ?\n        { resource: context.calendarApi.getResourceById(dateSpan.resourceId) } :\n        {};\n}\nfunction transformDateSpan(dateSpan, context) {\n    return dateSpan.resourceId ?\n        { resource: context.calendarApi.getResourceById(dateSpan.resourceId) } :\n        {};\n}\n\nfunction isPropsValidWithResources(combinedProps, context) {\n    let splitter = new ResourceSplitter();\n    let sets = splitter.splitProps(Object.assign(Object.assign({}, combinedProps), { resourceStore: context.getCurrentData().resourceStore }));\n    for (let resourceId in sets) {\n        let props = sets[resourceId];\n        // merge in event data from the non-resource segment\n        if (resourceId && sets['']) { // current segment is not the non-resource one, and there IS a non-resource one\n            props = Object.assign(Object.assign({}, props), { eventStore: mergeEventStores(sets[''].eventStore, props.eventStore), eventUiBases: Object.assign(Object.assign({}, sets[''].eventUiBases), props.eventUiBases) });\n        }\n        if (!isPropsValid(props, context, { resourceId }, filterConfig.bind(null, resourceId))) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction filterConfig(resourceId, config) {\n    return Object.assign(Object.assign({}, config), { constraints: filterConstraints(resourceId, config.constraints) });\n}\nfunction filterConstraints(resourceId, constraints) {\n    return constraints.map((constraint) => {\n        let defs = constraint.defs;\n        if (defs) { // we are dealing with an EventStore\n            // if any of the events define constraints to resources that are NOT this resource,\n            // then this resource is unconditionally prohibited, which is what a `false` value does.\n            for (let defId in defs) {\n                let resourceIds = defs[defId].resourceIds;\n                if (resourceIds.length && resourceIds.indexOf(resourceId) === -1) { // TODO: use a hash?!!! (for other reasons too)\n                    return false;\n                }\n            }\n        }\n        return constraint;\n    });\n}\n\nfunction transformExternalDef(dateSpan) {\n    return dateSpan.resourceId ?\n        { resourceId: dateSpan.resourceId } :\n        {};\n}\n\nconst optionChangeHandlers = {\n    resources: handleResources,\n};\nfunction handleResources(newSourceInput, context) {\n    let oldSourceInput = context.getCurrentData().resourceSource._raw;\n    if (oldSourceInput !== newSourceInput) {\n        context.dispatch({\n            type: 'RESET_RESOURCE_SOURCE',\n            resourceSourceInput: newSourceInput,\n        });\n    }\n}\n\nconst OPTION_REFINERS = {\n    initialResources: identity,\n    resources: identity,\n    eventResourceEditable: Boolean,\n    refetchResourcesOnNavigate: Boolean,\n    resourceOrder: parseFieldSpecs,\n    filterResourcesWithEvents: Boolean,\n    resourceGroupField: String,\n    resourceAreaWidth: identity,\n    resourceAreaColumns: identity,\n    resourcesInitiallyExpanded: Boolean,\n    datesAboveResources: Boolean,\n    needsResourceData: Boolean,\n    resourceAreaHeaderClassNames: identity,\n    resourceAreaHeaderContent: identity,\n    resourceAreaHeaderDidMount: identity,\n    resourceAreaHeaderWillUnmount: identity,\n    resourceGroupLabelClassNames: identity,\n    resourceGroupLabelContent: identity,\n    resourceGroupLabelDidMount: identity,\n    resourceGroupLabelWillUnmount: identity,\n    resourceLabelClassNames: identity,\n    resourceLabelContent: identity,\n    resourceLabelDidMount: identity,\n    resourceLabelWillUnmount: identity,\n    resourceLaneClassNames: identity,\n    resourceLaneContent: identity,\n    resourceLaneDidMount: identity,\n    resourceLaneWillUnmount: identity,\n    resourceGroupLaneClassNames: identity,\n    resourceGroupLaneContent: identity,\n    resourceGroupLaneDidMount: identity,\n    resourceGroupLaneWillUnmount: identity,\n};\nconst LISTENER_REFINERS = {\n    resourcesSet: identity,\n    resourceAdd: identity,\n    resourceChange: identity,\n    resourceRemove: identity,\n};\n\nEventImpl.prototype.getResources = function () {\n    let { calendarApi } = this._context;\n    return this._def.resourceIds.map((resourceId) => calendarApi.getResourceById(resourceId));\n};\nEventImpl.prototype.setResources = function (resources) {\n    let resourceIds = [];\n    // massage resources -> resourceIds\n    for (let resource of resources) {\n        let resourceId = null;\n        if (typeof resource === 'string') {\n            resourceId = resource;\n        }\n        else if (typeof resource === 'number') {\n            resourceId = String(resource);\n        }\n        else if (resource instanceof ResourceApi) {\n            resourceId = resource.id; // guaranteed to always have an ID. hmmm\n        }\n        else {\n            console.warn('unknown resource type: ' + resource);\n        }\n        if (resourceId) {\n            resourceIds.push(resourceId);\n        }\n    }\n    this.mutate({\n        standardProps: {\n            resourceIds,\n        },\n    });\n};\n\nregisterResourceSourceDef({\n    ignoreRange: true,\n    parseMeta(refined) {\n        if (Array.isArray(refined.resources)) {\n            return refined.resources;\n        }\n        return null;\n    },\n    fetch(arg, successCallback) {\n        successCallback({\n            rawResources: arg.resourceSource.meta,\n        });\n    },\n});\n\nregisterResourceSourceDef({\n    parseMeta(refined) {\n        if (typeof refined.resources === 'function') {\n            return refined.resources;\n        }\n        return null;\n    },\n    fetch(arg, successCallback, errorCallback) {\n        const dateEnv = arg.context.dateEnv;\n        const func = arg.resourceSource.meta;\n        const publicArg = arg.range ? {\n            start: dateEnv.toDate(arg.range.start),\n            end: dateEnv.toDate(arg.range.end),\n            startStr: dateEnv.formatIso(arg.range.start),\n            endStr: dateEnv.formatIso(arg.range.end),\n            timeZone: dateEnv.timeZone,\n        } : {};\n        unpromisify(func.bind(null, publicArg), (rawResources) => successCallback({ rawResources }), errorCallback);\n    },\n});\n\nregisterResourceSourceDef({\n    parseMeta(refined) {\n        if (refined.url) {\n            return {\n                url: refined.url,\n                method: (refined.method || 'GET').toUpperCase(),\n                extraParams: refined.extraParams,\n            };\n        }\n        return null;\n    },\n    fetch(arg, successCallback, errorCallback) {\n        const meta = arg.resourceSource.meta;\n        const requestParams = buildRequestParams(meta, arg.range, arg.context);\n        requestJson(meta.method, meta.url, requestParams).then(([rawResources, response]) => {\n            successCallback({ rawResources, response });\n        }, errorCallback);\n    },\n});\n// TODO: somehow consolidate with event json feed\nfunction buildRequestParams(meta, range, context) {\n    let { dateEnv, options } = context;\n    let startParam;\n    let endParam;\n    let timeZoneParam;\n    let customRequestParams;\n    let params = {};\n    if (range) {\n        startParam = meta.startParam;\n        if (startParam == null) {\n            startParam = options.startParam;\n        }\n        endParam = meta.endParam;\n        if (endParam == null) {\n            endParam = options.endParam;\n        }\n        timeZoneParam = meta.timeZoneParam;\n        if (timeZoneParam == null) {\n            timeZoneParam = options.timeZoneParam;\n        }\n        params[startParam] = dateEnv.formatIso(range.start);\n        params[endParam] = dateEnv.formatIso(range.end);\n        if (dateEnv.timeZone !== 'local') {\n            params[timeZoneParam] = dateEnv.timeZone;\n        }\n    }\n    // retrieve any outbound GET/POST data from the options\n    if (typeof meta.extraParams === 'function') {\n        // supplied as a function that returns a key/value object\n        customRequestParams = meta.extraParams();\n    }\n    else {\n        // probably supplied as a straight key/value object\n        customRequestParams = meta.extraParams || {};\n    }\n    Object.assign(params, customRequestParams);\n    return params;\n}\n\nvar index = createPlugin({\n    name: '@fullcalendar/resource',\n    premiumReleaseDate: '2024-07-12',\n    deps: [premiumCommonPlugin],\n    reducers: [reduceResources],\n    isLoadingFuncs: [\n        (state) => state.resourceSource && state.resourceSource.isFetching,\n    ],\n    eventRefiners: EVENT_REFINERS,\n    eventDefMemberAdders: [generateEventDefResourceMembers],\n    isDraggableTransformers: [transformIsDraggable],\n    eventDragMutationMassagers: [massageEventDragMutation],\n    eventDefMutationAppliers: [applyEventDefMutation],\n    dateSelectionTransformers: [transformDateSelectionJoin],\n    datePointTransforms: [transformDatePoint],\n    dateSpanTransforms: [transformDateSpan],\n    viewPropsTransformers: [ResourceDataAdder, ResourceEventConfigAdder],\n    isPropsValid: isPropsValidWithResources,\n    externalDefTransforms: [transformExternalDef],\n    eventDropTransformers: [transformEventDrop],\n    optionChangeHandlers,\n    optionRefiners: OPTION_REFINERS,\n    listenerRefiners: LISTENER_REFINERS,\n    propSetHandlers: { resourceStore: handleResourceStore },\n});\n\nexport { index as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}