{"ast":null,"code":"import _classCallCheck from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\n/**\n * ----------------------------------------------------------------------\n * user defined key value pairs to add custom metadata to arrow\n * key namespacing is the responsibility of the user\n */\nexport var KeyValue = /*#__PURE__*/function () {\n  function KeyValue() {\n    _classCallCheck(this, KeyValue);\n    this.bb = null;\n    this.bb_pos = 0;\n  }\n  _createClass(KeyValue, [{\n    key: \"__init\",\n    value: function __init(i, bb) {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n  }, {\n    key: \"key\",\n    value: function key(optionalEncoding) {\n      var offset = this.bb.__offset(this.bb_pos, 4);\n      return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n  }, {\n    key: \"value\",\n    value: function value(optionalEncoding) {\n      var offset = this.bb.__offset(this.bb_pos, 6);\n      return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n  }], [{\n    key: \"getRootAsKeyValue\",\n    value: function getRootAsKeyValue(bb, obj) {\n      return (obj || new KeyValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n  }, {\n    key: \"getSizePrefixedRootAsKeyValue\",\n    value: function getSizePrefixedRootAsKeyValue(bb, obj) {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new KeyValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n  }, {\n    key: \"startKeyValue\",\n    value: function startKeyValue(builder) {\n      builder.startObject(2);\n    }\n  }, {\n    key: \"addKey\",\n    value: function addKey(builder, keyOffset) {\n      builder.addFieldOffset(0, keyOffset, 0);\n    }\n  }, {\n    key: \"addValue\",\n    value: function addValue(builder, valueOffset) {\n      builder.addFieldOffset(1, valueOffset, 0);\n    }\n  }, {\n    key: \"endKeyValue\",\n    value: function endKeyValue(builder) {\n      var offset = builder.endObject();\n      return offset;\n    }\n  }, {\n    key: \"createKeyValue\",\n    value: function createKeyValue(builder, keyOffset, valueOffset) {\n      KeyValue.startKeyValue(builder);\n      KeyValue.addKey(builder, keyOffset);\n      KeyValue.addValue(builder, valueOffset);\n      return KeyValue.endKeyValue(builder);\n    }\n  }]);\n  return KeyValue;\n}();","map":{"version":3,"names":["flatbuffers","KeyValue","_classCallCheck","bb","bb_pos","_createClass","key","value","__init","i","optionalEncoding","offset","__offset","__string","getRootAsKeyValue","obj","readInt32","position","getSizePrefixedRootAsKeyValue","setPosition","SIZE_PREFIX_LENGTH","startKeyValue","builder","startObject","addKey","keyOffset","addFieldOffset","addValue","valueOffset","endKeyValue","endObject","createKeyValue"],"sources":["C:\\Users\\erden\\OneDrive\\Documents\\GitHub\\techclubsite\\streamlit_calendar\\frontend\\node_modules\\apache-arrow\\src\\fb\\key-value.ts"],"sourcesContent":["// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\n/**\n * ----------------------------------------------------------------------\n * user defined key value pairs to add custom metadata to arrow\n * key namespacing is the responsibility of the user\n */\nexport class KeyValue {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):KeyValue {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsKeyValue(bb:flatbuffers.ByteBuffer, obj?:KeyValue):KeyValue {\n  return (obj || new KeyValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsKeyValue(bb:flatbuffers.ByteBuffer, obj?:KeyValue):KeyValue {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new KeyValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nkey():string|null\nkey(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nkey(optionalEncoding?:any):string|Uint8Array|null {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n}\n\nvalue():string|null\nvalue(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\nvalue(optionalEncoding?:any):string|Uint8Array|null {\n  const offset = this.bb!.__offset(this.bb_pos, 6);\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n}\n\nstatic startKeyValue(builder:flatbuffers.Builder) {\n  builder.startObject(2);\n}\n\nstatic addKey(builder:flatbuffers.Builder, keyOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(0, keyOffset, 0);\n}\n\nstatic addValue(builder:flatbuffers.Builder, valueOffset:flatbuffers.Offset) {\n  builder.addFieldOffset(1, valueOffset, 0);\n}\n\nstatic endKeyValue(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\nstatic createKeyValue(builder:flatbuffers.Builder, keyOffset:flatbuffers.Offset, valueOffset:flatbuffers.Offset):flatbuffers.Offset {\n  KeyValue.startKeyValue(builder);\n  KeyValue.addKey(builder, keyOffset);\n  KeyValue.addValue(builder, valueOffset);\n  return KeyValue.endKeyValue(builder);\n}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}