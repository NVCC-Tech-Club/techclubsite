{"ast":null,"code":"import _get from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _toConsumableArray from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { DateComponent, getStickyHeaderDates, ViewContainer, SimpleScrollGrid, getStickyFooterScrollbar, renderScrollShim, createFormatter, BaseComponent, StandardEvent, buildSegTimeText, EventContainer, getSegAnchorAttrs, memoize, MoreLinkContainer, getSegMeta, getUniqueDomId, setRef, DayCellContainer, WeekNumberContainer, buildNavLinkAttrs, hasCustomDayCellContent, addMs, intersectRanges, addDays, SegHierarchy, buildEntryKey, intersectSpans, RefMap, sortEventSegs, isPropsEqual, buildEventRangeKey, BgEvent, renderFill, PositionCache, NowTimer, formatIsoMonthStr, formatDayString, Slicer, DayHeader, DaySeriesModel, DayTableModel, DateProfileGenerator, addWeeks, diffWeeks, injectStyles } from '@fullcalendar/core/internal.js';\nimport { createRef, createElement, Fragment } from '@fullcalendar/core/preact.js';\n\n/* An abstract class for the daygrid views, as well as month view. Renders one or more rows of day cells.\n----------------------------------------------------------------------------------------------------------------------*/\n// It is a manager for a Table subcomponent, which does most of the heavy lifting.\n// It is responsible for managing width/height.\nvar TableView = /*#__PURE__*/function (_DateComponent) {\n  _inherits(TableView, _DateComponent);\n  var _super = _createSuper(TableView);\n  function TableView() {\n    var _this;\n    _classCallCheck(this, TableView);\n    _this = _super.apply(this, arguments);\n    _this.headerElRef = createRef();\n    return _this;\n  }\n  _createClass(TableView, [{\n    key: \"renderSimpleLayout\",\n    value: function renderSimpleLayout(headerRowContent, bodyContent) {\n      var props = this.props,\n        context = this.context;\n      var sections = [];\n      var stickyHeaderDates = getStickyHeaderDates(context.options);\n      if (headerRowContent) {\n        sections.push({\n          type: 'header',\n          key: 'header',\n          isSticky: stickyHeaderDates,\n          chunk: {\n            elRef: this.headerElRef,\n            tableClassName: 'fc-col-header',\n            rowContent: headerRowContent\n          }\n        });\n      }\n      sections.push({\n        type: 'body',\n        key: 'body',\n        liquid: true,\n        chunk: {\n          content: bodyContent\n        }\n      });\n      return createElement(ViewContainer, {\n        elClasses: ['fc-daygrid'],\n        viewSpec: context.viewSpec\n      }, createElement(SimpleScrollGrid, {\n        liquid: !props.isHeightAuto && !props.forPrint,\n        collapsibleWidth: props.forPrint,\n        cols: [] /* TODO: make optional? */,\n        sections: sections\n      }));\n    }\n  }, {\n    key: \"renderHScrollLayout\",\n    value: function renderHScrollLayout(headerRowContent, bodyContent, colCnt, dayMinWidth) {\n      var ScrollGrid = this.context.pluginHooks.scrollGridImpl;\n      if (!ScrollGrid) {\n        throw new Error('No ScrollGrid implementation');\n      }\n      var props = this.props,\n        context = this.context;\n      var stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options);\n      var stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options);\n      var sections = [];\n      if (headerRowContent) {\n        sections.push({\n          type: 'header',\n          key: 'header',\n          isSticky: stickyHeaderDates,\n          chunks: [{\n            key: 'main',\n            elRef: this.headerElRef,\n            tableClassName: 'fc-col-header',\n            rowContent: headerRowContent\n          }]\n        });\n      }\n      sections.push({\n        type: 'body',\n        key: 'body',\n        liquid: true,\n        chunks: [{\n          key: 'main',\n          content: bodyContent\n        }]\n      });\n      if (stickyFooterScrollbar) {\n        sections.push({\n          type: 'footer',\n          key: 'footer',\n          isSticky: true,\n          chunks: [{\n            key: 'main',\n            content: renderScrollShim\n          }]\n        });\n      }\n      return createElement(ViewContainer, {\n        elClasses: ['fc-daygrid'],\n        viewSpec: context.viewSpec\n      }, createElement(ScrollGrid, {\n        liquid: !props.isHeightAuto && !props.forPrint,\n        forPrint: props.forPrint,\n        collapsibleWidth: props.forPrint,\n        colGroups: [{\n          cols: [{\n            span: colCnt,\n            minWidth: dayMinWidth\n          }]\n        }],\n        sections: sections\n      }));\n    }\n  }]);\n  return TableView;\n}(DateComponent);\nfunction splitSegsByRow(segs, rowCnt) {\n  var byRow = [];\n  for (var i = 0; i < rowCnt; i += 1) {\n    byRow[i] = [];\n  }\n  var _iterator = _createForOfIteratorHelper(segs),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var seg = _step.value;\n      byRow[seg.row].push(seg);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return byRow;\n}\nfunction splitSegsByFirstCol(segs, colCnt) {\n  var byCol = [];\n  for (var i = 0; i < colCnt; i += 1) {\n    byCol[i] = [];\n  }\n  var _iterator2 = _createForOfIteratorHelper(segs),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var seg = _step2.value;\n      byCol[seg.firstCol].push(seg);\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return byCol;\n}\nfunction splitInteractionByRow(ui, rowCnt) {\n  var byRow = [];\n  if (!ui) {\n    for (var i = 0; i < rowCnt; i += 1) {\n      byRow[i] = null;\n    }\n  } else {\n    for (var _i = 0; _i < rowCnt; _i += 1) {\n      byRow[_i] = {\n        affectedInstances: ui.affectedInstances,\n        isEvent: ui.isEvent,\n        segs: []\n      };\n    }\n    var _iterator3 = _createForOfIteratorHelper(ui.segs),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var seg = _step3.value;\n        byRow[seg.row].segs.push(seg);\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n  }\n  return byRow;\n}\nvar DEFAULT_TABLE_EVENT_TIME_FORMAT = createFormatter({\n  hour: 'numeric',\n  minute: '2-digit',\n  omitZeroMinute: true,\n  meridiem: 'narrow'\n});\nfunction hasListItemDisplay(seg) {\n  var display = seg.eventRange.ui.display;\n  return display === 'list-item' || display === 'auto' && !seg.eventRange.def.allDay && seg.firstCol === seg.lastCol &&\n  // can't be multi-day\n  seg.isStart &&\n  // \"\n  seg.isEnd // \"\n  ;\n}\nvar TableBlockEvent = /*#__PURE__*/function (_BaseComponent) {\n  _inherits(TableBlockEvent, _BaseComponent);\n  var _super2 = _createSuper(TableBlockEvent);\n  function TableBlockEvent() {\n    _classCallCheck(this, TableBlockEvent);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(TableBlockEvent, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      return createElement(StandardEvent, Object.assign({}, props, {\n        elClasses: ['fc-daygrid-event', 'fc-daygrid-block-event', 'fc-h-event'],\n        defaultTimeFormat: DEFAULT_TABLE_EVENT_TIME_FORMAT,\n        defaultDisplayEventEnd: props.defaultDisplayEventEnd,\n        disableResizing: !props.seg.eventRange.def.allDay\n      }));\n    }\n  }]);\n  return TableBlockEvent;\n}(BaseComponent);\nvar TableListItemEvent = /*#__PURE__*/function (_BaseComponent2) {\n  _inherits(TableListItemEvent, _BaseComponent2);\n  var _super3 = _createSuper(TableListItemEvent);\n  function TableListItemEvent() {\n    _classCallCheck(this, TableListItemEvent);\n    return _super3.apply(this, arguments);\n  }\n  _createClass(TableListItemEvent, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props,\n        context = this.context;\n      var options = context.options;\n      var seg = props.seg;\n      var timeFormat = options.eventTimeFormat || DEFAULT_TABLE_EVENT_TIME_FORMAT;\n      var timeText = buildSegTimeText(seg, timeFormat, context, true, props.defaultDisplayEventEnd);\n      return createElement(EventContainer, Object.assign({}, props, {\n        elTag: \"a\",\n        elClasses: ['fc-daygrid-event', 'fc-daygrid-dot-event'],\n        elAttrs: getSegAnchorAttrs(props.seg, context),\n        defaultGenerator: renderInnerContent,\n        timeText: timeText,\n        isResizing: false,\n        isDateSelecting: false\n      }));\n    }\n  }]);\n  return TableListItemEvent;\n}(BaseComponent);\nfunction renderInnerContent(renderProps) {\n  return createElement(Fragment, null, createElement(\"div\", {\n    className: \"fc-daygrid-event-dot\",\n    style: {\n      borderColor: renderProps.borderColor || renderProps.backgroundColor\n    }\n  }), renderProps.timeText && createElement(\"div\", {\n    className: \"fc-event-time\"\n  }, renderProps.timeText), createElement(\"div\", {\n    className: \"fc-event-title\"\n  }, renderProps.event.title || createElement(Fragment, null, \"\\xA0\")));\n}\nvar TableCellMoreLink = /*#__PURE__*/function (_BaseComponent3) {\n  _inherits(TableCellMoreLink, _BaseComponent3);\n  var _super4 = _createSuper(TableCellMoreLink);\n  function TableCellMoreLink() {\n    var _this2;\n    _classCallCheck(this, TableCellMoreLink);\n    _this2 = _super4.apply(this, arguments);\n    _this2.compileSegs = memoize(compileSegs);\n    return _this2;\n  }\n  _createClass(TableCellMoreLink, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      var _this$compileSegs = this.compileSegs(props.singlePlacements),\n        allSegs = _this$compileSegs.allSegs,\n        invisibleSegs = _this$compileSegs.invisibleSegs;\n      return createElement(MoreLinkContainer, {\n        elClasses: ['fc-daygrid-more-link'],\n        dateProfile: props.dateProfile,\n        todayRange: props.todayRange,\n        allDayDate: props.allDayDate,\n        moreCnt: props.moreCnt,\n        allSegs: allSegs,\n        hiddenSegs: invisibleSegs,\n        alignmentElRef: props.alignmentElRef,\n        alignGridTop: props.alignGridTop,\n        extraDateSpan: props.extraDateSpan,\n        popoverContent: function popoverContent() {\n          var isForcedInvisible = (props.eventDrag ? props.eventDrag.affectedInstances : null) || (props.eventResize ? props.eventResize.affectedInstances : null) || {};\n          return createElement(Fragment, null, allSegs.map(function (seg) {\n            var instanceId = seg.eventRange.instance.instanceId;\n            return createElement(\"div\", {\n              className: \"fc-daygrid-event-harness\",\n              key: instanceId,\n              style: {\n                visibility: isForcedInvisible[instanceId] ? 'hidden' : ''\n              }\n            }, hasListItemDisplay(seg) ? createElement(TableListItemEvent, Object.assign({\n              seg: seg,\n              isDragging: false,\n              isSelected: instanceId === props.eventSelection,\n              defaultDisplayEventEnd: false\n            }, getSegMeta(seg, props.todayRange))) : createElement(TableBlockEvent, Object.assign({\n              seg: seg,\n              isDragging: false,\n              isResizing: false,\n              isDateSelecting: false,\n              isSelected: instanceId === props.eventSelection,\n              defaultDisplayEventEnd: false\n            }, getSegMeta(seg, props.todayRange))));\n          }));\n        }\n      });\n    }\n  }]);\n  return TableCellMoreLink;\n}(BaseComponent);\nfunction compileSegs(singlePlacements) {\n  var allSegs = [];\n  var invisibleSegs = [];\n  var _iterator4 = _createForOfIteratorHelper(singlePlacements),\n    _step4;\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var placement = _step4.value;\n      allSegs.push(placement.seg);\n      if (!placement.isVisible) {\n        invisibleSegs.push(placement.seg);\n      }\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n  return {\n    allSegs: allSegs,\n    invisibleSegs: invisibleSegs\n  };\n}\nvar DEFAULT_WEEK_NUM_FORMAT = createFormatter({\n  week: 'narrow'\n});\nvar TableCell = /*#__PURE__*/function (_DateComponent2) {\n  _inherits(TableCell, _DateComponent2);\n  var _super5 = _createSuper(TableCell);\n  function TableCell() {\n    var _this3;\n    _classCallCheck(this, TableCell);\n    _this3 = _super5.apply(this, arguments);\n    _this3.rootElRef = createRef();\n    _this3.state = {\n      dayNumberId: getUniqueDomId()\n    };\n    _this3.handleRootEl = function (el) {\n      setRef(_this3.rootElRef, el);\n      setRef(_this3.props.elRef, el);\n    };\n    return _this3;\n  }\n  _createClass(TableCell, [{\n    key: \"render\",\n    value: function render() {\n      var context = this.context,\n        props = this.props,\n        state = this.state,\n        rootElRef = this.rootElRef;\n      var options = context.options,\n        dateEnv = context.dateEnv;\n      var date = props.date,\n        dateProfile = props.dateProfile;\n      // TODO: memoize this?\n      var isMonthStart = props.showDayNumber && shouldDisplayMonthStart(date, dateProfile.currentRange, dateEnv);\n      return createElement(DayCellContainer, {\n        elTag: \"td\",\n        elRef: this.handleRootEl,\n        elClasses: ['fc-daygrid-day'].concat(_toConsumableArray(props.extraClassNames || [])),\n        elAttrs: Object.assign(Object.assign(Object.assign({}, props.extraDataAttrs), props.showDayNumber ? {\n          'aria-labelledby': state.dayNumberId\n        } : {}), {\n          role: 'gridcell'\n        }),\n        defaultGenerator: renderTopInner,\n        date: date,\n        dateProfile: dateProfile,\n        todayRange: props.todayRange,\n        showDayNumber: props.showDayNumber,\n        isMonthStart: isMonthStart,\n        extraRenderProps: props.extraRenderProps\n      }, function (InnerContent, renderProps) {\n        return createElement(\"div\", {\n          ref: props.innerElRef,\n          className: \"fc-daygrid-day-frame fc-scrollgrid-sync-inner\",\n          style: {\n            minHeight: props.minHeight\n          }\n        }, props.showWeekNumber && createElement(WeekNumberContainer, {\n          elTag: \"a\",\n          elClasses: ['fc-daygrid-week-number'],\n          elAttrs: buildNavLinkAttrs(context, date, 'week'),\n          date: date,\n          defaultFormat: DEFAULT_WEEK_NUM_FORMAT\n        }), !renderProps.isDisabled && (props.showDayNumber || hasCustomDayCellContent(options) || props.forceDayTop) ? createElement(\"div\", {\n          className: \"fc-daygrid-day-top\"\n        }, createElement(InnerContent, {\n          elTag: \"a\",\n          elClasses: ['fc-daygrid-day-number', isMonthStart && 'fc-daygrid-month-start'],\n          elAttrs: Object.assign(Object.assign({}, buildNavLinkAttrs(context, date)), {\n            id: state.dayNumberId\n          })\n        })) : props.showDayNumber ?\n        // for creating correct amount of space (see issue #7162)\n        createElement(\"div\", {\n          className: \"fc-daygrid-day-top\",\n          style: {\n            visibility: 'hidden'\n          }\n        }, createElement(\"a\", {\n          className: \"fc-daygrid-day-number\"\n        }, \"\\xA0\")) : undefined, createElement(\"div\", {\n          className: \"fc-daygrid-day-events\",\n          ref: props.fgContentElRef\n        }, props.fgContent, createElement(\"div\", {\n          className: \"fc-daygrid-day-bottom\",\n          style: {\n            marginTop: props.moreMarginTop\n          }\n        }, createElement(TableCellMoreLink, {\n          allDayDate: date,\n          singlePlacements: props.singlePlacements,\n          moreCnt: props.moreCnt,\n          alignmentElRef: rootElRef,\n          alignGridTop: !props.showDayNumber,\n          extraDateSpan: props.extraDateSpan,\n          dateProfile: props.dateProfile,\n          eventSelection: props.eventSelection,\n          eventDrag: props.eventDrag,\n          eventResize: props.eventResize,\n          todayRange: props.todayRange\n        }))), createElement(\"div\", {\n          className: \"fc-daygrid-day-bg\"\n        }, props.bgContent));\n      });\n    }\n  }]);\n  return TableCell;\n}(DateComponent);\nfunction renderTopInner(props) {\n  return props.dayNumberText || createElement(Fragment, null, \"\\xA0\");\n}\nfunction shouldDisplayMonthStart(date, currentRange, dateEnv) {\n  var currentStart = currentRange.start,\n    currentEnd = currentRange.end;\n  var currentEndIncl = addMs(currentEnd, -1);\n  var currentFirstYear = dateEnv.getYear(currentStart);\n  var currentFirstMonth = dateEnv.getMonth(currentStart);\n  var currentLastYear = dateEnv.getYear(currentEndIncl);\n  var currentLastMonth = dateEnv.getMonth(currentEndIncl);\n  // spans more than one month?\n  return !(currentFirstYear === currentLastYear && currentFirstMonth === currentLastMonth) && Boolean(\n  // first date in current view?\n  date.valueOf() === currentStart.valueOf() ||\n  // a month-start that's within the current range?\n  dateEnv.getDay(date) === 1 && date.valueOf() < currentEnd.valueOf());\n}\nfunction generateSegKey(seg) {\n  return seg.eventRange.instance.instanceId + ':' + seg.firstCol;\n}\nfunction generateSegUid(seg) {\n  return generateSegKey(seg) + ':' + seg.lastCol;\n}\nfunction computeFgSegPlacement(segs,\n// assumed already sorted\ndayMaxEvents, dayMaxEventRows, strictOrder, segHeights, maxContentHeight, cells) {\n  var hierarchy = new DayGridSegHierarchy(function (segEntry) {\n    // TODO: more DRY with generateSegUid\n    var segUid = segs[segEntry.index].eventRange.instance.instanceId + ':' + segEntry.span.start + ':' + (segEntry.span.end - 1);\n    // if no thickness known, assume 1 (if 0, so small it always fits)\n    return segHeights[segUid] || 1;\n  });\n  hierarchy.allowReslicing = true;\n  hierarchy.strictOrder = strictOrder;\n  if (dayMaxEvents === true || dayMaxEventRows === true) {\n    hierarchy.maxCoord = maxContentHeight;\n    hierarchy.hiddenConsumes = true;\n  } else if (typeof dayMaxEvents === 'number') {\n    hierarchy.maxStackCnt = dayMaxEvents;\n  } else if (typeof dayMaxEventRows === 'number') {\n    hierarchy.maxStackCnt = dayMaxEventRows;\n    hierarchy.hiddenConsumes = true;\n  }\n  // create segInputs only for segs with known heights\n  var segInputs = [];\n  var unknownHeightSegs = [];\n  for (var i = 0; i < segs.length; i += 1) {\n    var seg = segs[i];\n    var segUid = generateSegUid(seg);\n    var eventHeight = segHeights[segUid];\n    if (eventHeight != null) {\n      segInputs.push({\n        index: i,\n        span: {\n          start: seg.firstCol,\n          end: seg.lastCol + 1\n        }\n      });\n    } else {\n      unknownHeightSegs.push(seg);\n    }\n  }\n  var hiddenEntries = hierarchy.addSegs(segInputs);\n  var segRects = hierarchy.toRects();\n  var _placeRects = placeRects(segRects, segs, cells),\n    singleColPlacements = _placeRects.singleColPlacements,\n    multiColPlacements = _placeRects.multiColPlacements,\n    leftoverMargins = _placeRects.leftoverMargins;\n  var moreCnts = [];\n  var moreMarginTops = [];\n  // add segs with unknown heights\n  for (var _i2 = 0, _unknownHeightSegs = unknownHeightSegs; _i2 < _unknownHeightSegs.length; _i2++) {\n    var _seg = _unknownHeightSegs[_i2];\n    multiColPlacements[_seg.firstCol].push({\n      seg: _seg,\n      isVisible: false,\n      isAbsolute: true,\n      absoluteTop: 0,\n      marginTop: 0\n    });\n    for (var col = _seg.firstCol; col <= _seg.lastCol; col += 1) {\n      singleColPlacements[col].push({\n        seg: resliceSeg(_seg, col, col + 1, cells),\n        isVisible: false,\n        isAbsolute: false,\n        absoluteTop: 0,\n        marginTop: 0\n      });\n    }\n  }\n  // add the hidden entries\n  for (var _col = 0; _col < cells.length; _col += 1) {\n    moreCnts.push(0);\n  }\n  var _iterator5 = _createForOfIteratorHelper(hiddenEntries),\n    _step5;\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var hiddenEntry = _step5.value;\n      var _seg2 = segs[hiddenEntry.index];\n      var hiddenSpan = hiddenEntry.span;\n      multiColPlacements[hiddenSpan.start].push({\n        seg: resliceSeg(_seg2, hiddenSpan.start, hiddenSpan.end, cells),\n        isVisible: false,\n        isAbsolute: true,\n        absoluteTop: 0,\n        marginTop: 0\n      });\n      for (var _col3 = hiddenSpan.start; _col3 < hiddenSpan.end; _col3 += 1) {\n        moreCnts[_col3] += 1;\n        singleColPlacements[_col3].push({\n          seg: resliceSeg(_seg2, _col3, _col3 + 1, cells),\n          isVisible: false,\n          isAbsolute: false,\n          absoluteTop: 0,\n          marginTop: 0\n        });\n      }\n    }\n    // deal with leftover margins\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n  for (var _col2 = 0; _col2 < cells.length; _col2 += 1) {\n    moreMarginTops.push(leftoverMargins[_col2]);\n  }\n  return {\n    singleColPlacements: singleColPlacements,\n    multiColPlacements: multiColPlacements,\n    moreCnts: moreCnts,\n    moreMarginTops: moreMarginTops\n  };\n}\n// rects ordered by top coord, then left\nfunction placeRects(allRects, segs, cells) {\n  var rectsByEachCol = groupRectsByEachCol(allRects, cells.length);\n  var singleColPlacements = [];\n  var multiColPlacements = [];\n  var leftoverMargins = [];\n  for (var col = 0; col < cells.length; col += 1) {\n    var rects = rectsByEachCol[col];\n    // compute all static segs in singlePlacements\n    var singlePlacements = [];\n    var currentHeight = 0;\n    var currentMarginTop = 0;\n    var _iterator6 = _createForOfIteratorHelper(rects),\n      _step6;\n    try {\n      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n        var rect = _step6.value;\n        var seg = segs[rect.index];\n        singlePlacements.push({\n          seg: resliceSeg(seg, col, col + 1, cells),\n          isVisible: true,\n          isAbsolute: false,\n          absoluteTop: rect.levelCoord,\n          marginTop: rect.levelCoord - currentHeight\n        });\n        currentHeight = rect.levelCoord + rect.thickness;\n      }\n      // compute mixed static/absolute segs in multiPlacements\n    } catch (err) {\n      _iterator6.e(err);\n    } finally {\n      _iterator6.f();\n    }\n    var multiPlacements = [];\n    currentHeight = 0;\n    currentMarginTop = 0;\n    var _iterator7 = _createForOfIteratorHelper(rects),\n      _step7;\n    try {\n      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n        var _rect = _step7.value;\n        var _seg3 = segs[_rect.index];\n        var isAbsolute = _rect.span.end - _rect.span.start > 1; // multi-column?\n        var isFirstCol = _rect.span.start === col;\n        currentMarginTop += _rect.levelCoord - currentHeight; // amount of space since bottom of previous seg\n        currentHeight = _rect.levelCoord + _rect.thickness; // height will now be bottom of current seg\n        if (isAbsolute) {\n          currentMarginTop += _rect.thickness;\n          if (isFirstCol) {\n            multiPlacements.push({\n              seg: resliceSeg(_seg3, _rect.span.start, _rect.span.end, cells),\n              isVisible: true,\n              isAbsolute: true,\n              absoluteTop: _rect.levelCoord,\n              marginTop: 0\n            });\n          }\n        } else if (isFirstCol) {\n          multiPlacements.push({\n            seg: resliceSeg(_seg3, _rect.span.start, _rect.span.end, cells),\n            isVisible: true,\n            isAbsolute: false,\n            absoluteTop: _rect.levelCoord,\n            marginTop: currentMarginTop // claim the margin\n          });\n\n          currentMarginTop = 0;\n        }\n      }\n    } catch (err) {\n      _iterator7.e(err);\n    } finally {\n      _iterator7.f();\n    }\n    singleColPlacements.push(singlePlacements);\n    multiColPlacements.push(multiPlacements);\n    leftoverMargins.push(currentMarginTop);\n  }\n  return {\n    singleColPlacements: singleColPlacements,\n    multiColPlacements: multiColPlacements,\n    leftoverMargins: leftoverMargins\n  };\n}\nfunction groupRectsByEachCol(rects, colCnt) {\n  var rectsByEachCol = [];\n  for (var col = 0; col < colCnt; col += 1) {\n    rectsByEachCol.push([]);\n  }\n  var _iterator8 = _createForOfIteratorHelper(rects),\n    _step8;\n  try {\n    for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n      var rect = _step8.value;\n      for (var _col4 = rect.span.start; _col4 < rect.span.end; _col4 += 1) {\n        rectsByEachCol[_col4].push(rect);\n      }\n    }\n  } catch (err) {\n    _iterator8.e(err);\n  } finally {\n    _iterator8.f();\n  }\n  return rectsByEachCol;\n}\nfunction resliceSeg(seg, spanStart, spanEnd, cells) {\n  if (seg.firstCol === spanStart && seg.lastCol === spanEnd - 1) {\n    return seg;\n  }\n  var eventRange = seg.eventRange;\n  var origRange = eventRange.range;\n  var slicedRange = intersectRanges(origRange, {\n    start: cells[spanStart].date,\n    end: addDays(cells[spanEnd - 1].date, 1)\n  });\n  return Object.assign(Object.assign({}, seg), {\n    firstCol: spanStart,\n    lastCol: spanEnd - 1,\n    eventRange: {\n      def: eventRange.def,\n      ui: Object.assign(Object.assign({}, eventRange.ui), {\n        durationEditable: false\n      }),\n      instance: eventRange.instance,\n      range: slicedRange\n    },\n    isStart: seg.isStart && slicedRange.start.valueOf() === origRange.start.valueOf(),\n    isEnd: seg.isEnd && slicedRange.end.valueOf() === origRange.end.valueOf()\n  });\n}\nvar DayGridSegHierarchy = /*#__PURE__*/function (_SegHierarchy) {\n  _inherits(DayGridSegHierarchy, _SegHierarchy);\n  var _super6 = _createSuper(DayGridSegHierarchy);\n  function DayGridSegHierarchy() {\n    var _this4;\n    _classCallCheck(this, DayGridSegHierarchy);\n    _this4 = _super6.apply(this, arguments);\n    // config\n    _this4.hiddenConsumes = false;\n    // allows us to keep hidden entries in the hierarchy so they take up space\n    _this4.forceHidden = {};\n    return _this4;\n  }\n  _createClass(DayGridSegHierarchy, [{\n    key: \"addSegs\",\n    value: function addSegs(segInputs) {\n      var _this5 = this;\n      var hiddenSegs = _get(_getPrototypeOf(DayGridSegHierarchy.prototype), \"addSegs\", this).call(this, segInputs);\n      var entriesByLevel = this.entriesByLevel;\n      var excludeHidden = function excludeHidden(entry) {\n        return !_this5.forceHidden[buildEntryKey(entry)];\n      };\n      // remove the forced-hidden segs\n      for (var level = 0; level < entriesByLevel.length; level += 1) {\n        entriesByLevel[level] = entriesByLevel[level].filter(excludeHidden);\n      }\n      return hiddenSegs;\n    }\n  }, {\n    key: \"handleInvalidInsertion\",\n    value: function handleInvalidInsertion(insertion, entry, hiddenEntries) {\n      var entriesByLevel = this.entriesByLevel,\n        forceHidden = this.forceHidden;\n      var touchingEntry = insertion.touchingEntry,\n        touchingLevel = insertion.touchingLevel,\n        touchingLateral = insertion.touchingLateral;\n      // the entry that the new insertion is touching must be hidden\n      if (this.hiddenConsumes && touchingEntry) {\n        var touchingEntryId = buildEntryKey(touchingEntry);\n        if (!forceHidden[touchingEntryId]) {\n          if (this.allowReslicing) {\n            // split up the touchingEntry, reinsert it\n            var hiddenEntry = Object.assign(Object.assign({}, touchingEntry), {\n              span: intersectSpans(touchingEntry.span, entry.span)\n            });\n            // reinsert the area that turned into a \"more\" link (so no other entries try to\n            // occupy the space) but mark it forced-hidden\n            var hiddenEntryId = buildEntryKey(hiddenEntry);\n            forceHidden[hiddenEntryId] = true;\n            entriesByLevel[touchingLevel][touchingLateral] = hiddenEntry;\n            hiddenEntries.push(hiddenEntry);\n            this.splitEntry(touchingEntry, entry, hiddenEntries);\n          } else {\n            forceHidden[touchingEntryId] = true;\n            hiddenEntries.push(touchingEntry);\n          }\n        }\n      }\n      // will try to reslice...\n      _get(_getPrototypeOf(DayGridSegHierarchy.prototype), \"handleInvalidInsertion\", this).call(this, insertion, entry, hiddenEntries);\n    }\n  }]);\n  return DayGridSegHierarchy;\n}(SegHierarchy);\nvar TableRow = /*#__PURE__*/function (_DateComponent3) {\n  _inherits(TableRow, _DateComponent3);\n  var _super7 = _createSuper(TableRow);\n  function TableRow() {\n    var _this6;\n    _classCallCheck(this, TableRow);\n    _this6 = _super7.apply(this, arguments);\n    _this6.cellElRefs = new RefMap(); // the <td>\n    _this6.frameElRefs = new RefMap(); // the fc-daygrid-day-frame\n    _this6.fgElRefs = new RefMap(); // the fc-daygrid-day-events\n    _this6.segHarnessRefs = new RefMap(); // indexed by \"instanceId:firstCol\"\n    _this6.rootElRef = createRef();\n    _this6.state = {\n      framePositions: null,\n      maxContentHeight: null,\n      segHeights: {}\n    };\n    _this6.handleResize = function (isForced) {\n      if (isForced) {\n        _this6.updateSizing(true); // isExternal=true\n      }\n    };\n    return _this6;\n  }\n  _createClass(TableRow, [{\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n      var props = this.props,\n        state = this.state,\n        context = this.context;\n      var options = context.options;\n      var colCnt = props.cells.length;\n      var businessHoursByCol = splitSegsByFirstCol(props.businessHourSegs, colCnt);\n      var bgEventSegsByCol = splitSegsByFirstCol(props.bgEventSegs, colCnt);\n      var highlightSegsByCol = splitSegsByFirstCol(this.getHighlightSegs(), colCnt);\n      var mirrorSegsByCol = splitSegsByFirstCol(this.getMirrorSegs(), colCnt);\n      var _computeFgSegPlacemen = computeFgSegPlacement(sortEventSegs(props.fgEventSegs, options.eventOrder), props.dayMaxEvents, props.dayMaxEventRows, options.eventOrderStrict, state.segHeights, state.maxContentHeight, props.cells),\n        singleColPlacements = _computeFgSegPlacemen.singleColPlacements,\n        multiColPlacements = _computeFgSegPlacemen.multiColPlacements,\n        moreCnts = _computeFgSegPlacemen.moreCnts,\n        moreMarginTops = _computeFgSegPlacemen.moreMarginTops;\n      var isForcedInvisible =\n      // TODO: messy way to compute this\n      props.eventDrag && props.eventDrag.affectedInstances || props.eventResize && props.eventResize.affectedInstances || {};\n      return createElement(\"tr\", {\n        ref: this.rootElRef,\n        role: \"row\"\n      }, props.renderIntro && props.renderIntro(), props.cells.map(function (cell, col) {\n        var normalFgNodes = _this7.renderFgSegs(col, props.forPrint ? singleColPlacements[col] : multiColPlacements[col], props.todayRange, isForcedInvisible);\n        var mirrorFgNodes = _this7.renderFgSegs(col, buildMirrorPlacements(mirrorSegsByCol[col], multiColPlacements), props.todayRange, {}, Boolean(props.eventDrag), Boolean(props.eventResize), false);\n        return createElement(TableCell, {\n          key: cell.key,\n          elRef: _this7.cellElRefs.createRef(cell.key),\n          innerElRef: _this7.frameElRefs.createRef(cell.key) /* FF <td> problem, but okay to use for left/right. TODO: rename prop */,\n          dateProfile: props.dateProfile,\n          date: cell.date,\n          showDayNumber: props.showDayNumbers,\n          showWeekNumber: props.showWeekNumbers && col === 0,\n          forceDayTop: props.showWeekNumbers /* even displaying weeknum for row, not necessarily day */,\n          todayRange: props.todayRange,\n          eventSelection: props.eventSelection,\n          eventDrag: props.eventDrag,\n          eventResize: props.eventResize,\n          extraRenderProps: cell.extraRenderProps,\n          extraDataAttrs: cell.extraDataAttrs,\n          extraClassNames: cell.extraClassNames,\n          extraDateSpan: cell.extraDateSpan,\n          moreCnt: moreCnts[col],\n          moreMarginTop: moreMarginTops[col],\n          singlePlacements: singleColPlacements[col],\n          fgContentElRef: _this7.fgElRefs.createRef(cell.key),\n          fgContent:\n          // Fragment scopes the keys\n          createElement(Fragment, null, createElement(Fragment, null, normalFgNodes), createElement(Fragment, null, mirrorFgNodes)),\n          bgContent:\n          // Fragment scopes the keys\n          createElement(Fragment, null, _this7.renderFillSegs(highlightSegsByCol[col], 'highlight'), _this7.renderFillSegs(businessHoursByCol[col], 'non-business'), _this7.renderFillSegs(bgEventSegsByCol[col], 'bg-event')),\n          minHeight: props.cellMinHeight\n        });\n      }));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateSizing(true);\n      this.context.addResizeHandler(this.handleResize);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var currentProps = this.props;\n      this.updateSizing(!isPropsEqual(prevProps, currentProps));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.context.removeResizeHandler(this.handleResize);\n    }\n  }, {\n    key: \"getHighlightSegs\",\n    value: function getHighlightSegs() {\n      var props = this.props;\n      if (props.eventDrag && props.eventDrag.segs.length) {\n        // messy check\n        return props.eventDrag.segs;\n      }\n      if (props.eventResize && props.eventResize.segs.length) {\n        // messy check\n        return props.eventResize.segs;\n      }\n      return props.dateSelectionSegs;\n    }\n  }, {\n    key: \"getMirrorSegs\",\n    value: function getMirrorSegs() {\n      var props = this.props;\n      if (props.eventResize && props.eventResize.segs.length) {\n        // messy check\n        return props.eventResize.segs;\n      }\n      return [];\n    }\n  }, {\n    key: \"renderFgSegs\",\n    value: function renderFgSegs(col, segPlacements, todayRange, isForcedInvisible, isDragging, isResizing, isDateSelecting) {\n      var context = this.context;\n      var eventSelection = this.props.eventSelection;\n      var framePositions = this.state.framePositions;\n      var defaultDisplayEventEnd = this.props.cells.length === 1; // colCnt === 1\n      var isMirror = isDragging || isResizing || isDateSelecting;\n      var nodes = [];\n      if (framePositions) {\n        var _iterator9 = _createForOfIteratorHelper(segPlacements),\n          _step9;\n        try {\n          for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n            var placement = _step9.value;\n            var seg = placement.seg;\n            var instanceId = seg.eventRange.instance.instanceId;\n            var isVisible = placement.isVisible && !isForcedInvisible[instanceId];\n            var isAbsolute = placement.isAbsolute;\n            var left = '';\n            var right = '';\n            if (isAbsolute) {\n              if (context.isRtl) {\n                right = 0;\n                left = framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol];\n              } else {\n                left = 0;\n                right = framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol];\n              }\n            }\n            /*\n            known bug: events that are force to be list-item but span multiple days still take up space in later columns\n            todo: in print view, for multi-day events, don't display title within non-start/end segs\n            */\n            nodes.push(createElement(\"div\", {\n              className: 'fc-daygrid-event-harness' + (isAbsolute ? ' fc-daygrid-event-harness-abs' : ''),\n              key: generateSegKey(seg),\n              ref: isMirror ? null : this.segHarnessRefs.createRef(generateSegUid(seg)),\n              style: {\n                visibility: isVisible ? '' : 'hidden',\n                marginTop: isAbsolute ? '' : placement.marginTop,\n                top: isAbsolute ? placement.absoluteTop : '',\n                left: left,\n                right: right\n              }\n            }, hasListItemDisplay(seg) ? createElement(TableListItemEvent, Object.assign({\n              seg: seg,\n              isDragging: isDragging,\n              isSelected: instanceId === eventSelection,\n              defaultDisplayEventEnd: defaultDisplayEventEnd\n            }, getSegMeta(seg, todayRange))) : createElement(TableBlockEvent, Object.assign({\n              seg: seg,\n              isDragging: isDragging,\n              isResizing: isResizing,\n              isDateSelecting: isDateSelecting,\n              isSelected: instanceId === eventSelection,\n              defaultDisplayEventEnd: defaultDisplayEventEnd\n            }, getSegMeta(seg, todayRange)))));\n          }\n        } catch (err) {\n          _iterator9.e(err);\n        } finally {\n          _iterator9.f();\n        }\n      }\n      return nodes;\n    }\n  }, {\n    key: \"renderFillSegs\",\n    value: function renderFillSegs(segs, fillType) {\n      var isRtl = this.context.isRtl;\n      var todayRange = this.props.todayRange;\n      var framePositions = this.state.framePositions;\n      var nodes = [];\n      if (framePositions) {\n        var _iterator10 = _createForOfIteratorHelper(segs),\n          _step10;\n        try {\n          for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n            var seg = _step10.value;\n            var leftRightCss = isRtl ? {\n              right: 0,\n              left: framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol]\n            } : {\n              left: 0,\n              right: framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol]\n            };\n            nodes.push(createElement(\"div\", {\n              key: buildEventRangeKey(seg.eventRange),\n              className: \"fc-daygrid-bg-harness\",\n              style: leftRightCss\n            }, fillType === 'bg-event' ? createElement(BgEvent, Object.assign({\n              seg: seg\n            }, getSegMeta(seg, todayRange))) : renderFill(fillType)));\n          }\n        } catch (err) {\n          _iterator10.e(err);\n        } finally {\n          _iterator10.f();\n        }\n      }\n      return createElement.apply(void 0, [Fragment, {}].concat(nodes));\n    }\n  }, {\n    key: \"updateSizing\",\n    value: function updateSizing(isExternalSizingChange) {\n      var props = this.props,\n        state = this.state,\n        frameElRefs = this.frameElRefs;\n      if (!props.forPrint && props.clientWidth !== null // positioning ready?\n      ) {\n        if (isExternalSizingChange) {\n          var frameEls = props.cells.map(function (cell) {\n            return frameElRefs.currentMap[cell.key];\n          });\n          if (frameEls.length) {\n            var originEl = this.rootElRef.current;\n            var newPositionCache = new PositionCache(originEl, frameEls, true,\n            // isHorizontal\n            false);\n            if (!state.framePositions || !state.framePositions.similarTo(newPositionCache)) {\n              this.setState({\n                framePositions: new PositionCache(originEl, frameEls, true,\n                // isHorizontal\n                false)\n              });\n            }\n          }\n        }\n        var oldSegHeights = this.state.segHeights;\n        var newSegHeights = this.querySegHeights();\n        var limitByContentHeight = props.dayMaxEvents === true || props.dayMaxEventRows === true;\n        this.safeSetState({\n          // HACK to prevent oscillations of events being shown/hidden from max-event-rows\n          // Essentially, once you compute an element's height, never null-out.\n          // TODO: always display all events, as visibility:hidden?\n          segHeights: Object.assign(Object.assign({}, oldSegHeights), newSegHeights),\n          maxContentHeight: limitByContentHeight ? this.computeMaxContentHeight() : null\n        });\n      }\n    }\n  }, {\n    key: \"querySegHeights\",\n    value: function querySegHeights() {\n      var segElMap = this.segHarnessRefs.currentMap;\n      var segHeights = {};\n      // get the max height amongst instance segs\n      for (var segUid in segElMap) {\n        var height = Math.round(segElMap[segUid].getBoundingClientRect().height);\n        segHeights[segUid] = Math.max(segHeights[segUid] || 0, height);\n      }\n      return segHeights;\n    }\n  }, {\n    key: \"computeMaxContentHeight\",\n    value: function computeMaxContentHeight() {\n      var firstKey = this.props.cells[0].key;\n      var cellEl = this.cellElRefs.currentMap[firstKey];\n      var fcContainerEl = this.fgElRefs.currentMap[firstKey];\n      return cellEl.getBoundingClientRect().bottom - fcContainerEl.getBoundingClientRect().top;\n    }\n  }, {\n    key: \"getCellEls\",\n    value: function getCellEls() {\n      var elMap = this.cellElRefs.currentMap;\n      return this.props.cells.map(function (cell) {\n        return elMap[cell.key];\n      });\n    }\n  }]);\n  return TableRow;\n}(DateComponent);\nTableRow.addStateEquality({\n  segHeights: isPropsEqual\n});\nfunction buildMirrorPlacements(mirrorSegs, colPlacements) {\n  if (!mirrorSegs.length) {\n    return [];\n  }\n  var topsByInstanceId = buildAbsoluteTopHash(colPlacements); // TODO: cache this at first render?\n  return mirrorSegs.map(function (seg) {\n    return {\n      seg: seg,\n      isVisible: true,\n      isAbsolute: true,\n      absoluteTop: topsByInstanceId[seg.eventRange.instance.instanceId],\n      marginTop: 0\n    };\n  });\n}\nfunction buildAbsoluteTopHash(colPlacements) {\n  var topsByInstanceId = {};\n  var _iterator11 = _createForOfIteratorHelper(colPlacements),\n    _step11;\n  try {\n    for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n      var placements = _step11.value;\n      var _iterator12 = _createForOfIteratorHelper(placements),\n        _step12;\n      try {\n        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n          var placement = _step12.value;\n          topsByInstanceId[placement.seg.eventRange.instance.instanceId] = placement.absoluteTop;\n        }\n      } catch (err) {\n        _iterator12.e(err);\n      } finally {\n        _iterator12.f();\n      }\n    }\n  } catch (err) {\n    _iterator11.e(err);\n  } finally {\n    _iterator11.f();\n  }\n  return topsByInstanceId;\n}\nvar TableRows = /*#__PURE__*/function (_DateComponent4) {\n  _inherits(TableRows, _DateComponent4);\n  var _super8 = _createSuper(TableRows);\n  function TableRows() {\n    var _this8;\n    _classCallCheck(this, TableRows);\n    _this8 = _super8.apply(this, arguments);\n    _this8.splitBusinessHourSegs = memoize(splitSegsByRow);\n    _this8.splitBgEventSegs = memoize(splitSegsByRow);\n    _this8.splitFgEventSegs = memoize(splitSegsByRow);\n    _this8.splitDateSelectionSegs = memoize(splitSegsByRow);\n    _this8.splitEventDrag = memoize(splitInteractionByRow);\n    _this8.splitEventResize = memoize(splitInteractionByRow);\n    _this8.rowRefs = new RefMap();\n    return _this8;\n  }\n  _createClass(TableRows, [{\n    key: \"render\",\n    value: function render() {\n      var _this9 = this;\n      var props = this.props,\n        context = this.context;\n      var rowCnt = props.cells.length;\n      var businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, rowCnt);\n      var bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, rowCnt);\n      var fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, rowCnt);\n      var dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, rowCnt);\n      var eventDragByRow = this.splitEventDrag(props.eventDrag, rowCnt);\n      var eventResizeByRow = this.splitEventResize(props.eventResize, rowCnt);\n      // for DayGrid view with many rows, force a min-height on cells so doesn't appear squished\n      // choose 7 because a month view will have max 6 rows\n      var cellMinHeight = rowCnt >= 7 && props.clientWidth ? props.clientWidth / context.options.aspectRatio / 6 : null;\n      return createElement(NowTimer, {\n        unit: \"day\"\n      }, function (nowDate, todayRange) {\n        return createElement(Fragment, null, props.cells.map(function (cells, row) {\n          return createElement(TableRow, {\n            ref: _this9.rowRefs.createRef(row),\n            key: cells.length ? cells[0].date.toISOString() /* best? or put key on cell? or use diff formatter? */ : row // in case there are no cells (like when resource view is loading)\n            ,\n            showDayNumbers: rowCnt > 1,\n            showWeekNumbers: props.showWeekNumbers,\n            todayRange: todayRange,\n            dateProfile: props.dateProfile,\n            cells: cells,\n            renderIntro: props.renderRowIntro,\n            businessHourSegs: businessHourSegsByRow[row],\n            eventSelection: props.eventSelection,\n            bgEventSegs: bgEventSegsByRow[row].filter(isSegAllDay) /* hack */,\n            fgEventSegs: fgEventSegsByRow[row],\n            dateSelectionSegs: dateSelectionSegsByRow[row],\n            eventDrag: eventDragByRow[row],\n            eventResize: eventResizeByRow[row],\n            dayMaxEvents: props.dayMaxEvents,\n            dayMaxEventRows: props.dayMaxEventRows,\n            clientWidth: props.clientWidth,\n            clientHeight: props.clientHeight,\n            cellMinHeight: cellMinHeight,\n            forPrint: props.forPrint\n          });\n        }));\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.registerInteractiveComponent();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      // for if started with zero cells\n      this.registerInteractiveComponent();\n    }\n  }, {\n    key: \"registerInteractiveComponent\",\n    value: function registerInteractiveComponent() {\n      if (!this.rootEl) {\n        // HACK: need a daygrid wrapper parent to do positioning\n        // NOTE: a daygrid resource view w/o resources can have zero cells\n        var firstCellEl = this.rowRefs.currentMap[0].getCellEls()[0];\n        var rootEl = firstCellEl ? firstCellEl.closest('.fc-daygrid-body') : null;\n        if (rootEl) {\n          this.rootEl = rootEl;\n          this.context.registerInteractiveComponent(this, {\n            el: rootEl,\n            isHitComboAllowed: this.props.isHitComboAllowed\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.rootEl) {\n        this.context.unregisterInteractiveComponent(this);\n        this.rootEl = null;\n      }\n    }\n    // Hit System\n    // ----------------------------------------------------------------------------------------------------\n  }, {\n    key: \"prepareHits\",\n    value: function prepareHits() {\n      this.rowPositions = new PositionCache(this.rootEl, this.rowRefs.collect().map(function (rowObj) {\n        return rowObj.getCellEls()[0];\n      }),\n      // first cell el in each row. TODO: not optimal\n      false, true);\n      this.colPositions = new PositionCache(this.rootEl, this.rowRefs.currentMap[0].getCellEls(),\n      // cell els in first row\n      true,\n      // horizontal\n      false);\n    }\n  }, {\n    key: \"queryHit\",\n    value: function queryHit(positionLeft, positionTop) {\n      var colPositions = this.colPositions,\n        rowPositions = this.rowPositions;\n      var col = colPositions.leftToIndex(positionLeft);\n      var row = rowPositions.topToIndex(positionTop);\n      if (row != null && col != null) {\n        var cell = this.props.cells[row][col];\n        return {\n          dateProfile: this.props.dateProfile,\n          dateSpan: Object.assign({\n            range: this.getCellRange(row, col),\n            allDay: true\n          }, cell.extraDateSpan),\n          dayEl: this.getCellEl(row, col),\n          rect: {\n            left: colPositions.lefts[col],\n            right: colPositions.rights[col],\n            top: rowPositions.tops[row],\n            bottom: rowPositions.bottoms[row]\n          },\n          layer: 0\n        };\n      }\n      return null;\n    }\n  }, {\n    key: \"getCellEl\",\n    value: function getCellEl(row, col) {\n      return this.rowRefs.currentMap[row].getCellEls()[col]; // TODO: not optimal\n    }\n  }, {\n    key: \"getCellRange\",\n    value: function getCellRange(row, col) {\n      var start = this.props.cells[row][col].date;\n      var end = addDays(start, 1);\n      return {\n        start: start,\n        end: end\n      };\n    }\n  }]);\n  return TableRows;\n}(DateComponent);\nfunction isSegAllDay(seg) {\n  return seg.eventRange.def.allDay;\n}\nvar Table = /*#__PURE__*/function (_DateComponent5) {\n  _inherits(Table, _DateComponent5);\n  var _super9 = _createSuper(Table);\n  function Table() {\n    var _this10;\n    _classCallCheck(this, Table);\n    _this10 = _super9.apply(this, arguments);\n    _this10.elRef = createRef();\n    _this10.needsScrollReset = false;\n    return _this10;\n  }\n  _createClass(Table, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      var dayMaxEventRows = props.dayMaxEventRows,\n        dayMaxEvents = props.dayMaxEvents,\n        expandRows = props.expandRows;\n      var limitViaBalanced = dayMaxEvents === true || dayMaxEventRows === true;\n      // if rows can't expand to fill fixed height, can't do balanced-height event limit\n      // TODO: best place to normalize these options?\n      if (limitViaBalanced && !expandRows) {\n        limitViaBalanced = false;\n        dayMaxEventRows = null;\n        dayMaxEvents = null;\n      }\n      var classNames = ['fc-daygrid-body', limitViaBalanced ? 'fc-daygrid-body-balanced' : 'fc-daygrid-body-unbalanced', expandRows ? '' : 'fc-daygrid-body-natural' // will height of one row depend on the others?\n      ];\n\n      return createElement(\"div\", {\n        ref: this.elRef,\n        className: classNames.join(' '),\n        style: {\n          // these props are important to give this wrapper correct dimensions for interactions\n          // TODO: if we set it here, can we avoid giving to inner tables?\n          width: props.clientWidth,\n          minWidth: props.tableMinWidth\n        }\n      }, createElement(\"table\", {\n        role: \"presentation\",\n        className: \"fc-scrollgrid-sync-table\",\n        style: {\n          width: props.clientWidth,\n          minWidth: props.tableMinWidth,\n          height: expandRows ? props.clientHeight : ''\n        }\n      }, props.colGroupNode, createElement(\"tbody\", {\n        role: \"presentation\"\n      }, createElement(TableRows, {\n        dateProfile: props.dateProfile,\n        cells: props.cells,\n        renderRowIntro: props.renderRowIntro,\n        showWeekNumbers: props.showWeekNumbers,\n        clientWidth: props.clientWidth,\n        clientHeight: props.clientHeight,\n        businessHourSegs: props.businessHourSegs,\n        bgEventSegs: props.bgEventSegs,\n        fgEventSegs: props.fgEventSegs,\n        dateSelectionSegs: props.dateSelectionSegs,\n        eventSelection: props.eventSelection,\n        eventDrag: props.eventDrag,\n        eventResize: props.eventResize,\n        dayMaxEvents: dayMaxEvents,\n        dayMaxEventRows: dayMaxEventRows,\n        forPrint: props.forPrint,\n        isHitComboAllowed: props.isHitComboAllowed\n      }))));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.requestScrollReset();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.dateProfile !== this.props.dateProfile) {\n        this.requestScrollReset();\n      } else {\n        this.flushScrollReset();\n      }\n    }\n  }, {\n    key: \"requestScrollReset\",\n    value: function requestScrollReset() {\n      this.needsScrollReset = true;\n      this.flushScrollReset();\n    }\n  }, {\n    key: \"flushScrollReset\",\n    value: function flushScrollReset() {\n      if (this.needsScrollReset && this.props.clientWidth // sizes computed?\n      ) {\n        var subjectEl = getScrollSubjectEl(this.elRef.current, this.props.dateProfile);\n        if (subjectEl) {\n          var originEl = subjectEl.closest('.fc-daygrid-body');\n          var scrollEl = originEl.closest('.fc-scroller');\n          var scrollTop = subjectEl.getBoundingClientRect().top - originEl.getBoundingClientRect().top;\n          scrollEl.scrollTop = scrollTop ? scrollTop + 1 : 0; // overcome border\n        }\n\n        this.needsScrollReset = false;\n      }\n    }\n  }]);\n  return Table;\n}(DateComponent);\nfunction getScrollSubjectEl(containerEl, dateProfile) {\n  var el;\n  if (dateProfile.currentRangeUnit.match(/year|month/)) {\n    el = containerEl.querySelector(\"[data-date=\\\"\".concat(formatIsoMonthStr(dateProfile.currentDate), \"-01\\\"]\"));\n    // even if view is month-based, first-of-month might be hidden...\n  }\n\n  if (!el) {\n    el = containerEl.querySelector(\"[data-date=\\\"\".concat(formatDayString(dateProfile.currentDate), \"\\\"]\"));\n    // could still be hidden if an interior-view hidden day\n  }\n\n  return el;\n}\nvar DayTableSlicer = /*#__PURE__*/function (_Slicer) {\n  _inherits(DayTableSlicer, _Slicer);\n  var _super10 = _createSuper(DayTableSlicer);\n  function DayTableSlicer() {\n    var _this11;\n    _classCallCheck(this, DayTableSlicer);\n    _this11 = _super10.apply(this, arguments);\n    _this11.forceDayIfListItem = true;\n    return _this11;\n  }\n  _createClass(DayTableSlicer, [{\n    key: \"sliceRange\",\n    value: function sliceRange(dateRange, dayTableModel) {\n      return dayTableModel.sliceRange(dateRange);\n    }\n  }]);\n  return DayTableSlicer;\n}(Slicer);\nvar DayTable = /*#__PURE__*/function (_DateComponent6) {\n  _inherits(DayTable, _DateComponent6);\n  var _super11 = _createSuper(DayTable);\n  function DayTable() {\n    var _this12;\n    _classCallCheck(this, DayTable);\n    _this12 = _super11.apply(this, arguments);\n    _this12.slicer = new DayTableSlicer();\n    _this12.tableRef = createRef();\n    return _this12;\n  }\n  _createClass(DayTable, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props,\n        context = this.context;\n      return createElement(Table, Object.assign({\n        ref: this.tableRef\n      }, this.slicer.sliceProps(props, props.dateProfile, props.nextDayThreshold, context, props.dayTableModel), {\n        dateProfile: props.dateProfile,\n        cells: props.dayTableModel.cells,\n        colGroupNode: props.colGroupNode,\n        tableMinWidth: props.tableMinWidth,\n        renderRowIntro: props.renderRowIntro,\n        dayMaxEvents: props.dayMaxEvents,\n        dayMaxEventRows: props.dayMaxEventRows,\n        showWeekNumbers: props.showWeekNumbers,\n        expandRows: props.expandRows,\n        headerAlignElRef: props.headerAlignElRef,\n        clientWidth: props.clientWidth,\n        clientHeight: props.clientHeight,\n        forPrint: props.forPrint\n      }));\n    }\n  }]);\n  return DayTable;\n}(DateComponent);\nvar DayTableView = /*#__PURE__*/function (_TableView) {\n  _inherits(DayTableView, _TableView);\n  var _super12 = _createSuper(DayTableView);\n  function DayTableView() {\n    var _this13;\n    _classCallCheck(this, DayTableView);\n    _this13 = _super12.apply(this, arguments);\n    _this13.buildDayTableModel = memoize(buildDayTableModel);\n    _this13.headerRef = createRef();\n    _this13.tableRef = createRef();\n    // can't override any lifecycle methods from parent\n    return _this13;\n  }\n  _createClass(DayTableView, [{\n    key: \"render\",\n    value: function render() {\n      var _this14 = this;\n      var _this$context = this.context,\n        options = _this$context.options,\n        dateProfileGenerator = _this$context.dateProfileGenerator;\n      var props = this.props;\n      var dayTableModel = this.buildDayTableModel(props.dateProfile, dateProfileGenerator);\n      var headerContent = options.dayHeaders && createElement(DayHeader, {\n        ref: this.headerRef,\n        dateProfile: props.dateProfile,\n        dates: dayTableModel.headerDates,\n        datesRepDistinctDays: dayTableModel.rowCnt === 1\n      });\n      var bodyContent = function bodyContent(contentArg) {\n        return createElement(DayTable, {\n          ref: _this14.tableRef,\n          dateProfile: props.dateProfile,\n          dayTableModel: dayTableModel,\n          businessHours: props.businessHours,\n          dateSelection: props.dateSelection,\n          eventStore: props.eventStore,\n          eventUiBases: props.eventUiBases,\n          eventSelection: props.eventSelection,\n          eventDrag: props.eventDrag,\n          eventResize: props.eventResize,\n          nextDayThreshold: options.nextDayThreshold,\n          colGroupNode: contentArg.tableColGroupNode,\n          tableMinWidth: contentArg.tableMinWidth,\n          dayMaxEvents: options.dayMaxEvents,\n          dayMaxEventRows: options.dayMaxEventRows,\n          showWeekNumbers: options.weekNumbers,\n          expandRows: !props.isHeightAuto,\n          headerAlignElRef: _this14.headerElRef,\n          clientWidth: contentArg.clientWidth,\n          clientHeight: contentArg.clientHeight,\n          forPrint: props.forPrint\n        });\n      };\n      return options.dayMinWidth ? this.renderHScrollLayout(headerContent, bodyContent, dayTableModel.colCnt, options.dayMinWidth) : this.renderSimpleLayout(headerContent, bodyContent);\n    }\n  }]);\n  return DayTableView;\n}(TableView);\nfunction buildDayTableModel(dateProfile, dateProfileGenerator) {\n  var daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator);\n  return new DayTableModel(daySeries, /year|month|week/.test(dateProfile.currentRangeUnit));\n}\nvar TableDateProfileGenerator = /*#__PURE__*/function (_DateProfileGenerator) {\n  _inherits(TableDateProfileGenerator, _DateProfileGenerator);\n  var _super13 = _createSuper(TableDateProfileGenerator);\n  function TableDateProfileGenerator() {\n    _classCallCheck(this, TableDateProfileGenerator);\n    return _super13.apply(this, arguments);\n  }\n  _createClass(TableDateProfileGenerator, [{\n    key: \"buildRenderRange\",\n    value:\n    // Computes the date range that will be rendered\n    function buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay) {\n      var renderRange = _get(_getPrototypeOf(TableDateProfileGenerator.prototype), \"buildRenderRange\", this).call(this, currentRange, currentRangeUnit, isRangeAllDay);\n      var props = this.props;\n      return buildDayTableRenderRange({\n        currentRange: renderRange,\n        snapToWeek: /^(year|month)$/.test(currentRangeUnit),\n        fixedWeekCount: props.fixedWeekCount,\n        dateEnv: props.dateEnv\n      });\n    }\n  }]);\n  return TableDateProfileGenerator;\n}(DateProfileGenerator);\nfunction buildDayTableRenderRange(props) {\n  var dateEnv = props.dateEnv,\n    currentRange = props.currentRange;\n  var start = currentRange.start,\n    end = currentRange.end;\n  var endOfWeek;\n  // year and month views should be aligned with weeks. this is already done for week\n  if (props.snapToWeek) {\n    start = dateEnv.startOfWeek(start);\n    // make end-of-week if not already\n    endOfWeek = dateEnv.startOfWeek(end);\n    if (endOfWeek.valueOf() !== end.valueOf()) {\n      end = addWeeks(endOfWeek, 1);\n    }\n  }\n  // ensure 6 weeks\n  if (props.fixedWeekCount) {\n    // TODO: instead of these date-math gymnastics (for multimonth view),\n    // compute dateprofiles of all months, then use start of first and end of last.\n    var lastMonthRenderStart = dateEnv.startOfWeek(dateEnv.startOfMonth(addDays(currentRange.end, -1)));\n    var rowCnt = Math.ceil(\n    // could be partial weeks due to hiddenDays\n    diffWeeks(lastMonthRenderStart, end));\n    end = addWeeks(end, 6 - rowCnt);\n  }\n  return {\n    start: start,\n    end: end\n  };\n}\nvar css_248z = \":root{--fc-daygrid-event-dot-width:8px}.fc-daygrid-day-events:after,.fc-daygrid-day-events:before,.fc-daygrid-day-frame:after,.fc-daygrid-day-frame:before,.fc-daygrid-event-harness:after,.fc-daygrid-event-harness:before{clear:both;content:\\\"\\\";display:table}.fc .fc-daygrid-body{position:relative;z-index:1}.fc .fc-daygrid-day.fc-day-today{background-color:var(--fc-today-bg-color)}.fc .fc-daygrid-day-frame{min-height:100%;position:relative}.fc .fc-daygrid-day-top{display:flex;flex-direction:row-reverse}.fc .fc-day-other .fc-daygrid-day-top{opacity:.3}.fc .fc-daygrid-day-number{padding:4px;position:relative;z-index:4}.fc .fc-daygrid-month-start{font-size:1.1em;font-weight:700}.fc .fc-daygrid-day-events{margin-top:1px}.fc .fc-daygrid-body-balanced .fc-daygrid-day-events{left:0;position:absolute;right:0}.fc .fc-daygrid-body-unbalanced .fc-daygrid-day-events{min-height:2em;position:relative}.fc .fc-daygrid-body-natural .fc-daygrid-day-events{margin-bottom:1em}.fc .fc-daygrid-event-harness{position:relative}.fc .fc-daygrid-event-harness-abs{left:0;position:absolute;right:0;top:0}.fc .fc-daygrid-bg-harness{bottom:0;position:absolute;top:0}.fc .fc-daygrid-day-bg .fc-non-business{z-index:1}.fc .fc-daygrid-day-bg .fc-bg-event{z-index:2}.fc .fc-daygrid-day-bg .fc-highlight{z-index:3}.fc .fc-daygrid-event{margin-top:1px;z-index:6}.fc .fc-daygrid-event.fc-event-mirror{z-index:7}.fc .fc-daygrid-day-bottom{font-size:.85em;margin:0 2px}.fc .fc-daygrid-day-bottom:after,.fc .fc-daygrid-day-bottom:before{clear:both;content:\\\"\\\";display:table}.fc .fc-daygrid-more-link{border-radius:3px;cursor:pointer;line-height:1;margin-top:1px;max-width:100%;overflow:hidden;padding:2px;position:relative;white-space:nowrap;z-index:4}.fc .fc-daygrid-more-link:hover{background-color:rgba(0,0,0,.1)}.fc .fc-daygrid-week-number{background-color:var(--fc-neutral-bg-color);color:var(--fc-neutral-text-color);min-width:1.5em;padding:2px;position:absolute;text-align:center;top:0;z-index:5}.fc .fc-more-popover .fc-popover-body{min-width:220px;padding:10px}.fc-direction-ltr .fc-daygrid-event.fc-event-start,.fc-direction-rtl .fc-daygrid-event.fc-event-end{margin-left:2px}.fc-direction-ltr .fc-daygrid-event.fc-event-end,.fc-direction-rtl .fc-daygrid-event.fc-event-start{margin-right:2px}.fc-direction-ltr .fc-daygrid-more-link{float:left}.fc-direction-ltr .fc-daygrid-week-number{border-radius:0 0 3px 0;left:0}.fc-direction-rtl .fc-daygrid-more-link{float:right}.fc-direction-rtl .fc-daygrid-week-number{border-radius:0 0 0 3px;right:0}.fc-liquid-hack .fc-daygrid-day-frame{position:static}.fc-daygrid-event{border-radius:3px;font-size:var(--fc-small-font-size);position:relative;white-space:nowrap}.fc-daygrid-block-event .fc-event-time{font-weight:700}.fc-daygrid-block-event .fc-event-time,.fc-daygrid-block-event .fc-event-title{padding:1px}.fc-daygrid-dot-event{align-items:center;display:flex;padding:2px 0}.fc-daygrid-dot-event .fc-event-title{flex-grow:1;flex-shrink:1;font-weight:700;min-width:0;overflow:hidden}.fc-daygrid-dot-event.fc-event-mirror,.fc-daygrid-dot-event:hover{background:rgba(0,0,0,.1)}.fc-daygrid-dot-event.fc-event-selected:before{bottom:-10px;top:-10px}.fc-daygrid-event-dot{border:calc(var(--fc-daygrid-event-dot-width)/2) solid var(--fc-event-border-color);border-radius:calc(var(--fc-daygrid-event-dot-width)/2);box-sizing:content-box;height:0;margin:0 4px;width:0}.fc-direction-ltr .fc-daygrid-event .fc-event-time{margin-right:3px}.fc-direction-rtl .fc-daygrid-event .fc-event-time{margin-left:3px}\";\ninjectStyles(css_248z);\nexport { DayTableView as DayGridView, DayTable, DayTableSlicer, Table, TableDateProfileGenerator, TableRows, TableView, buildDayTableModel, buildDayTableRenderRange };","map":{"version":3,"names":["DateComponent","getStickyHeaderDates","ViewContainer","SimpleScrollGrid","getStickyFooterScrollbar","renderScrollShim","createFormatter","BaseComponent","StandardEvent","buildSegTimeText","EventContainer","getSegAnchorAttrs","memoize","MoreLinkContainer","getSegMeta","getUniqueDomId","setRef","DayCellContainer","WeekNumberContainer","buildNavLinkAttrs","hasCustomDayCellContent","addMs","intersectRanges","addDays","SegHierarchy","buildEntryKey","intersectSpans","RefMap","sortEventSegs","isPropsEqual","buildEventRangeKey","BgEvent","renderFill","PositionCache","NowTimer","formatIsoMonthStr","formatDayString","Slicer","DayHeader","DaySeriesModel","DayTableModel","DateProfileGenerator","addWeeks","diffWeeks","injectStyles","createRef","createElement","Fragment","TableView","_DateComponent","_inherits","_super","_createSuper","_this","_classCallCheck","apply","arguments","headerElRef","_createClass","key","value","renderSimpleLayout","headerRowContent","bodyContent","props","context","sections","stickyHeaderDates","options","push","type","isSticky","chunk","elRef","tableClassName","rowContent","liquid","content","elClasses","viewSpec","isHeightAuto","forPrint","collapsibleWidth","cols","renderHScrollLayout","colCnt","dayMinWidth","ScrollGrid","pluginHooks","scrollGridImpl","Error","stickyFooterScrollbar","chunks","colGroups","span","minWidth","splitSegsByRow","segs","rowCnt","byRow","i","_iterator","_createForOfIteratorHelper","_step","s","n","done","seg","row","err","e","f","splitSegsByFirstCol","byCol","_iterator2","_step2","firstCol","splitInteractionByRow","ui","affectedInstances","isEvent","_iterator3","_step3","DEFAULT_TABLE_EVENT_TIME_FORMAT","hour","minute","omitZeroMinute","meridiem","hasListItemDisplay","display","eventRange","def","allDay","lastCol","isStart","isEnd","TableBlockEvent","_BaseComponent","_super2","render","Object","assign","defaultTimeFormat","defaultDisplayEventEnd","disableResizing","TableListItemEvent","_BaseComponent2","_super3","timeFormat","eventTimeFormat","timeText","elTag","elAttrs","defaultGenerator","renderInnerContent","isResizing","isDateSelecting","renderProps","className","style","borderColor","backgroundColor","event","title","TableCellMoreLink","_BaseComponent3","_super4","_this2","compileSegs","_this$compileSegs","singlePlacements","allSegs","invisibleSegs","dateProfile","todayRange","allDayDate","moreCnt","hiddenSegs","alignmentElRef","alignGridTop","extraDateSpan","popoverContent","isForcedInvisible","eventDrag","eventResize","map","instanceId","instance","visibility","isDragging","isSelected","eventSelection","_iterator4","_step4","placement","isVisible","DEFAULT_WEEK_NUM_FORMAT","week","TableCell","_DateComponent2","_super5","_this3","rootElRef","state","dayNumberId","handleRootEl","el","dateEnv","date","isMonthStart","showDayNumber","shouldDisplayMonthStart","currentRange","concat","_toConsumableArray","extraClassNames","extraDataAttrs","role","renderTopInner","extraRenderProps","InnerContent","ref","innerElRef","minHeight","showWeekNumber","defaultFormat","isDisabled","forceDayTop","id","undefined","fgContentElRef","fgContent","marginTop","moreMarginTop","bgContent","dayNumberText","currentStart","start","currentEnd","end","currentEndIncl","currentFirstYear","getYear","currentFirstMonth","getMonth","currentLastYear","currentLastMonth","Boolean","valueOf","getDay","generateSegKey","generateSegUid","computeFgSegPlacement","dayMaxEvents","dayMaxEventRows","strictOrder","segHeights","maxContentHeight","cells","hierarchy","DayGridSegHierarchy","segEntry","segUid","index","allowReslicing","maxCoord","hiddenConsumes","maxStackCnt","segInputs","unknownHeightSegs","length","eventHeight","hiddenEntries","addSegs","segRects","toRects","_placeRects","placeRects","singleColPlacements","multiColPlacements","leftoverMargins","moreCnts","moreMarginTops","_i2","_unknownHeightSegs","isAbsolute","absoluteTop","col","resliceSeg","_iterator5","_step5","hiddenEntry","hiddenSpan","allRects","rectsByEachCol","groupRectsByEachCol","rects","currentHeight","currentMarginTop","_iterator6","_step6","rect","levelCoord","thickness","multiPlacements","_iterator7","_step7","isFirstCol","_iterator8","_step8","spanStart","spanEnd","origRange","range","slicedRange","durationEditable","_SegHierarchy","_super6","_this4","forceHidden","_this5","_get","_getPrototypeOf","prototype","call","entriesByLevel","excludeHidden","entry","level","filter","handleInvalidInsertion","insertion","touchingEntry","touchingLevel","touchingLateral","touchingEntryId","hiddenEntryId","splitEntry","TableRow","_DateComponent3","_super7","_this6","cellElRefs","frameElRefs","fgElRefs","segHarnessRefs","framePositions","handleResize","isForced","updateSizing","_this7","businessHoursByCol","businessHourSegs","bgEventSegsByCol","bgEventSegs","highlightSegsByCol","getHighlightSegs","mirrorSegsByCol","getMirrorSegs","_computeFgSegPlacemen","fgEventSegs","eventOrder","eventOrderStrict","renderIntro","cell","normalFgNodes","renderFgSegs","mirrorFgNodes","buildMirrorPlacements","showDayNumbers","showWeekNumbers","renderFillSegs","cellMinHeight","componentDidMount","addResizeHandler","componentDidUpdate","prevProps","prevState","currentProps","componentWillUnmount","removeResizeHandler","dateSelectionSegs","segPlacements","isMirror","nodes","_iterator9","_step9","left","right","isRtl","lefts","rights","top","fillType","_iterator10","_step10","leftRightCss","isExternalSizingChange","clientWidth","frameEls","currentMap","originEl","current","newPositionCache","similarTo","setState","oldSegHeights","newSegHeights","querySegHeights","limitByContentHeight","safeSetState","computeMaxContentHeight","segElMap","height","Math","round","getBoundingClientRect","max","firstKey","cellEl","fcContainerEl","bottom","getCellEls","elMap","addStateEquality","mirrorSegs","colPlacements","topsByInstanceId","buildAbsoluteTopHash","_iterator11","_step11","placements","_iterator12","_step12","TableRows","_DateComponent4","_super8","_this8","splitBusinessHourSegs","splitBgEventSegs","splitFgEventSegs","splitDateSelectionSegs","splitEventDrag","splitEventResize","rowRefs","_this9","businessHourSegsByRow","bgEventSegsByRow","fgEventSegsByRow","dateSelectionSegsByRow","eventDragByRow","eventResizeByRow","aspectRatio","unit","nowDate","toISOString","renderRowIntro","isSegAllDay","clientHeight","registerInteractiveComponent","rootEl","firstCellEl","closest","isHitComboAllowed","unregisterInteractiveComponent","prepareHits","rowPositions","collect","rowObj","colPositions","queryHit","positionLeft","positionTop","leftToIndex","topToIndex","dateSpan","getCellRange","dayEl","getCellEl","tops","bottoms","layer","Table","_DateComponent5","_super9","_this10","needsScrollReset","expandRows","limitViaBalanced","classNames","join","width","tableMinWidth","colGroupNode","requestScrollReset","flushScrollReset","subjectEl","getScrollSubjectEl","scrollEl","scrollTop","containerEl","currentRangeUnit","match","querySelector","currentDate","DayTableSlicer","_Slicer","_super10","_this11","forceDayIfListItem","sliceRange","dateRange","dayTableModel","DayTable","_DateComponent6","_super11","_this12","slicer","tableRef","sliceProps","nextDayThreshold","headerAlignElRef","DayTableView","_TableView","_super12","_this13","buildDayTableModel","headerRef","_this14","_this$context","dateProfileGenerator","headerContent","dayHeaders","dates","headerDates","datesRepDistinctDays","contentArg","businessHours","dateSelection","eventStore","eventUiBases","tableColGroupNode","weekNumbers","daySeries","renderRange","test","TableDateProfileGenerator","_DateProfileGenerator","_super13","buildRenderRange","isRangeAllDay","buildDayTableRenderRange","snapToWeek","fixedWeekCount","endOfWeek","startOfWeek","lastMonthRenderStart","startOfMonth","ceil","css_248z","DayGridView"],"sources":["C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@fullcalendar/daygrid/internal.js"],"sourcesContent":["import { DateComponent, getStickyHeaderDates, ViewContainer, SimpleScrollGrid, getStickyFooterScrollbar, renderScrollShim, createFormatter, BaseComponent, StandardEvent, buildSegTimeText, EventContainer, getSegAnchorAttrs, memoize, MoreLinkContainer, getSegMeta, getUniqueDomId, setRef, DayCellContainer, WeekNumberContainer, buildNavLinkAttrs, hasCustomDayCellContent, addMs, intersectRanges, addDays, SegHierarchy, buildEntryKey, intersectSpans, RefMap, sortEventSegs, isPropsEqual, buildEventRangeKey, BgEvent, renderFill, PositionCache, NowTimer, formatIsoMonthStr, formatDayString, Slicer, DayHeader, DaySeriesModel, DayTableModel, DateProfileGenerator, addWeeks, diffWeeks, injectStyles } from '@fullcalendar/core/internal.js';\nimport { createRef, createElement, Fragment } from '@fullcalendar/core/preact.js';\n\n/* An abstract class for the daygrid views, as well as month view. Renders one or more rows of day cells.\n----------------------------------------------------------------------------------------------------------------------*/\n// It is a manager for a Table subcomponent, which does most of the heavy lifting.\n// It is responsible for managing width/height.\nclass TableView extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.headerElRef = createRef();\n    }\n    renderSimpleLayout(headerRowContent, bodyContent) {\n        let { props, context } = this;\n        let sections = [];\n        let stickyHeaderDates = getStickyHeaderDates(context.options);\n        if (headerRowContent) {\n            sections.push({\n                type: 'header',\n                key: 'header',\n                isSticky: stickyHeaderDates,\n                chunk: {\n                    elRef: this.headerElRef,\n                    tableClassName: 'fc-col-header',\n                    rowContent: headerRowContent,\n                },\n            });\n        }\n        sections.push({\n            type: 'body',\n            key: 'body',\n            liquid: true,\n            chunk: { content: bodyContent },\n        });\n        return (createElement(ViewContainer, { elClasses: ['fc-daygrid'], viewSpec: context.viewSpec },\n            createElement(SimpleScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, collapsibleWidth: props.forPrint, cols: [] /* TODO: make optional? */, sections: sections })));\n    }\n    renderHScrollLayout(headerRowContent, bodyContent, colCnt, dayMinWidth) {\n        let ScrollGrid = this.context.pluginHooks.scrollGridImpl;\n        if (!ScrollGrid) {\n            throw new Error('No ScrollGrid implementation');\n        }\n        let { props, context } = this;\n        let stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options);\n        let stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options);\n        let sections = [];\n        if (headerRowContent) {\n            sections.push({\n                type: 'header',\n                key: 'header',\n                isSticky: stickyHeaderDates,\n                chunks: [{\n                        key: 'main',\n                        elRef: this.headerElRef,\n                        tableClassName: 'fc-col-header',\n                        rowContent: headerRowContent,\n                    }],\n            });\n        }\n        sections.push({\n            type: 'body',\n            key: 'body',\n            liquid: true,\n            chunks: [{\n                    key: 'main',\n                    content: bodyContent,\n                }],\n        });\n        if (stickyFooterScrollbar) {\n            sections.push({\n                type: 'footer',\n                key: 'footer',\n                isSticky: true,\n                chunks: [{\n                        key: 'main',\n                        content: renderScrollShim,\n                    }],\n            });\n        }\n        return (createElement(ViewContainer, { elClasses: ['fc-daygrid'], viewSpec: context.viewSpec },\n            createElement(ScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, forPrint: props.forPrint, collapsibleWidth: props.forPrint, colGroups: [{ cols: [{ span: colCnt, minWidth: dayMinWidth }] }], sections: sections })));\n    }\n}\n\nfunction splitSegsByRow(segs, rowCnt) {\n    let byRow = [];\n    for (let i = 0; i < rowCnt; i += 1) {\n        byRow[i] = [];\n    }\n    for (let seg of segs) {\n        byRow[seg.row].push(seg);\n    }\n    return byRow;\n}\nfunction splitSegsByFirstCol(segs, colCnt) {\n    let byCol = [];\n    for (let i = 0; i < colCnt; i += 1) {\n        byCol[i] = [];\n    }\n    for (let seg of segs) {\n        byCol[seg.firstCol].push(seg);\n    }\n    return byCol;\n}\nfunction splitInteractionByRow(ui, rowCnt) {\n    let byRow = [];\n    if (!ui) {\n        for (let i = 0; i < rowCnt; i += 1) {\n            byRow[i] = null;\n        }\n    }\n    else {\n        for (let i = 0; i < rowCnt; i += 1) {\n            byRow[i] = {\n                affectedInstances: ui.affectedInstances,\n                isEvent: ui.isEvent,\n                segs: [],\n            };\n        }\n        for (let seg of ui.segs) {\n            byRow[seg.row].segs.push(seg);\n        }\n    }\n    return byRow;\n}\n\nconst DEFAULT_TABLE_EVENT_TIME_FORMAT = createFormatter({\n    hour: 'numeric',\n    minute: '2-digit',\n    omitZeroMinute: true,\n    meridiem: 'narrow',\n});\nfunction hasListItemDisplay(seg) {\n    let { display } = seg.eventRange.ui;\n    return display === 'list-item' || (display === 'auto' &&\n        !seg.eventRange.def.allDay &&\n        seg.firstCol === seg.lastCol && // can't be multi-day\n        seg.isStart && // \"\n        seg.isEnd // \"\n    );\n}\n\nclass TableBlockEvent extends BaseComponent {\n    render() {\n        let { props } = this;\n        return (createElement(StandardEvent, Object.assign({}, props, { elClasses: ['fc-daygrid-event', 'fc-daygrid-block-event', 'fc-h-event'], defaultTimeFormat: DEFAULT_TABLE_EVENT_TIME_FORMAT, defaultDisplayEventEnd: props.defaultDisplayEventEnd, disableResizing: !props.seg.eventRange.def.allDay })));\n    }\n}\n\nclass TableListItemEvent extends BaseComponent {\n    render() {\n        let { props, context } = this;\n        let { options } = context;\n        let { seg } = props;\n        let timeFormat = options.eventTimeFormat || DEFAULT_TABLE_EVENT_TIME_FORMAT;\n        let timeText = buildSegTimeText(seg, timeFormat, context, true, props.defaultDisplayEventEnd);\n        return (createElement(EventContainer, Object.assign({}, props, { elTag: \"a\", elClasses: ['fc-daygrid-event', 'fc-daygrid-dot-event'], elAttrs: getSegAnchorAttrs(props.seg, context), defaultGenerator: renderInnerContent, timeText: timeText, isResizing: false, isDateSelecting: false })));\n    }\n}\nfunction renderInnerContent(renderProps) {\n    return (createElement(Fragment, null,\n        createElement(\"div\", { className: \"fc-daygrid-event-dot\", style: { borderColor: renderProps.borderColor || renderProps.backgroundColor } }),\n        renderProps.timeText && (createElement(\"div\", { className: \"fc-event-time\" }, renderProps.timeText)),\n        createElement(\"div\", { className: \"fc-event-title\" }, renderProps.event.title || createElement(Fragment, null, \"\\u00A0\"))));\n}\n\nclass TableCellMoreLink extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.compileSegs = memoize(compileSegs);\n    }\n    render() {\n        let { props } = this;\n        let { allSegs, invisibleSegs } = this.compileSegs(props.singlePlacements);\n        return (createElement(MoreLinkContainer, { elClasses: ['fc-daygrid-more-link'], dateProfile: props.dateProfile, todayRange: props.todayRange, allDayDate: props.allDayDate, moreCnt: props.moreCnt, allSegs: allSegs, hiddenSegs: invisibleSegs, alignmentElRef: props.alignmentElRef, alignGridTop: props.alignGridTop, extraDateSpan: props.extraDateSpan, popoverContent: () => {\n                let isForcedInvisible = (props.eventDrag ? props.eventDrag.affectedInstances : null) ||\n                    (props.eventResize ? props.eventResize.affectedInstances : null) ||\n                    {};\n                return (createElement(Fragment, null, allSegs.map((seg) => {\n                    let instanceId = seg.eventRange.instance.instanceId;\n                    return (createElement(\"div\", { className: \"fc-daygrid-event-harness\", key: instanceId, style: {\n                            visibility: isForcedInvisible[instanceId] ? 'hidden' : '',\n                        } }, hasListItemDisplay(seg) ? (createElement(TableListItemEvent, Object.assign({ seg: seg, isDragging: false, isSelected: instanceId === props.eventSelection, defaultDisplayEventEnd: false }, getSegMeta(seg, props.todayRange)))) : (createElement(TableBlockEvent, Object.assign({ seg: seg, isDragging: false, isResizing: false, isDateSelecting: false, isSelected: instanceId === props.eventSelection, defaultDisplayEventEnd: false }, getSegMeta(seg, props.todayRange))))));\n                })));\n            } }));\n    }\n}\nfunction compileSegs(singlePlacements) {\n    let allSegs = [];\n    let invisibleSegs = [];\n    for (let placement of singlePlacements) {\n        allSegs.push(placement.seg);\n        if (!placement.isVisible) {\n            invisibleSegs.push(placement.seg);\n        }\n    }\n    return { allSegs, invisibleSegs };\n}\n\nconst DEFAULT_WEEK_NUM_FORMAT = createFormatter({ week: 'narrow' });\nclass TableCell extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.rootElRef = createRef();\n        this.state = {\n            dayNumberId: getUniqueDomId(),\n        };\n        this.handleRootEl = (el) => {\n            setRef(this.rootElRef, el);\n            setRef(this.props.elRef, el);\n        };\n    }\n    render() {\n        let { context, props, state, rootElRef } = this;\n        let { options, dateEnv } = context;\n        let { date, dateProfile } = props;\n        // TODO: memoize this?\n        const isMonthStart = props.showDayNumber &&\n            shouldDisplayMonthStart(date, dateProfile.currentRange, dateEnv);\n        return (createElement(DayCellContainer, { elTag: \"td\", elRef: this.handleRootEl, elClasses: [\n                'fc-daygrid-day',\n                ...(props.extraClassNames || []),\n            ], elAttrs: Object.assign(Object.assign(Object.assign({}, props.extraDataAttrs), (props.showDayNumber ? { 'aria-labelledby': state.dayNumberId } : {})), { role: 'gridcell' }), defaultGenerator: renderTopInner, date: date, dateProfile: dateProfile, todayRange: props.todayRange, showDayNumber: props.showDayNumber, isMonthStart: isMonthStart, extraRenderProps: props.extraRenderProps }, (InnerContent, renderProps) => (createElement(\"div\", { ref: props.innerElRef, className: \"fc-daygrid-day-frame fc-scrollgrid-sync-inner\", style: { minHeight: props.minHeight } },\n            props.showWeekNumber && (createElement(WeekNumberContainer, { elTag: \"a\", elClasses: ['fc-daygrid-week-number'], elAttrs: buildNavLinkAttrs(context, date, 'week'), date: date, defaultFormat: DEFAULT_WEEK_NUM_FORMAT })),\n            !renderProps.isDisabled &&\n                (props.showDayNumber || hasCustomDayCellContent(options) || props.forceDayTop) ? (createElement(\"div\", { className: \"fc-daygrid-day-top\" },\n                createElement(InnerContent, { elTag: \"a\", elClasses: [\n                        'fc-daygrid-day-number',\n                        isMonthStart && 'fc-daygrid-month-start',\n                    ], elAttrs: Object.assign(Object.assign({}, buildNavLinkAttrs(context, date)), { id: state.dayNumberId }) }))) : props.showDayNumber ? (\n            // for creating correct amount of space (see issue #7162)\n            createElement(\"div\", { className: \"fc-daygrid-day-top\", style: { visibility: 'hidden' } },\n                createElement(\"a\", { className: \"fc-daygrid-day-number\" }, \"\\u00A0\"))) : undefined,\n            createElement(\"div\", { className: \"fc-daygrid-day-events\", ref: props.fgContentElRef },\n                props.fgContent,\n                createElement(\"div\", { className: \"fc-daygrid-day-bottom\", style: { marginTop: props.moreMarginTop } },\n                    createElement(TableCellMoreLink, { allDayDate: date, singlePlacements: props.singlePlacements, moreCnt: props.moreCnt, alignmentElRef: rootElRef, alignGridTop: !props.showDayNumber, extraDateSpan: props.extraDateSpan, dateProfile: props.dateProfile, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, todayRange: props.todayRange }))),\n            createElement(\"div\", { className: \"fc-daygrid-day-bg\" }, props.bgContent)))));\n    }\n}\nfunction renderTopInner(props) {\n    return props.dayNumberText || createElement(Fragment, null, \"\\u00A0\");\n}\nfunction shouldDisplayMonthStart(date, currentRange, dateEnv) {\n    const { start: currentStart, end: currentEnd } = currentRange;\n    const currentEndIncl = addMs(currentEnd, -1);\n    const currentFirstYear = dateEnv.getYear(currentStart);\n    const currentFirstMonth = dateEnv.getMonth(currentStart);\n    const currentLastYear = dateEnv.getYear(currentEndIncl);\n    const currentLastMonth = dateEnv.getMonth(currentEndIncl);\n    // spans more than one month?\n    return !(currentFirstYear === currentLastYear && currentFirstMonth === currentLastMonth) &&\n        Boolean(\n        // first date in current view?\n        date.valueOf() === currentStart.valueOf() ||\n            // a month-start that's within the current range?\n            (dateEnv.getDay(date) === 1 && date.valueOf() < currentEnd.valueOf()));\n}\n\nfunction generateSegKey(seg) {\n    return seg.eventRange.instance.instanceId + ':' + seg.firstCol;\n}\nfunction generateSegUid(seg) {\n    return generateSegKey(seg) + ':' + seg.lastCol;\n}\nfunction computeFgSegPlacement(segs, // assumed already sorted\ndayMaxEvents, dayMaxEventRows, strictOrder, segHeights, maxContentHeight, cells) {\n    let hierarchy = new DayGridSegHierarchy((segEntry) => {\n        // TODO: more DRY with generateSegUid\n        let segUid = segs[segEntry.index].eventRange.instance.instanceId +\n            ':' + segEntry.span.start +\n            ':' + (segEntry.span.end - 1);\n        // if no thickness known, assume 1 (if 0, so small it always fits)\n        return segHeights[segUid] || 1;\n    });\n    hierarchy.allowReslicing = true;\n    hierarchy.strictOrder = strictOrder;\n    if (dayMaxEvents === true || dayMaxEventRows === true) {\n        hierarchy.maxCoord = maxContentHeight;\n        hierarchy.hiddenConsumes = true;\n    }\n    else if (typeof dayMaxEvents === 'number') {\n        hierarchy.maxStackCnt = dayMaxEvents;\n    }\n    else if (typeof dayMaxEventRows === 'number') {\n        hierarchy.maxStackCnt = dayMaxEventRows;\n        hierarchy.hiddenConsumes = true;\n    }\n    // create segInputs only for segs with known heights\n    let segInputs = [];\n    let unknownHeightSegs = [];\n    for (let i = 0; i < segs.length; i += 1) {\n        let seg = segs[i];\n        let segUid = generateSegUid(seg);\n        let eventHeight = segHeights[segUid];\n        if (eventHeight != null) {\n            segInputs.push({\n                index: i,\n                span: {\n                    start: seg.firstCol,\n                    end: seg.lastCol + 1,\n                },\n            });\n        }\n        else {\n            unknownHeightSegs.push(seg);\n        }\n    }\n    let hiddenEntries = hierarchy.addSegs(segInputs);\n    let segRects = hierarchy.toRects();\n    let { singleColPlacements, multiColPlacements, leftoverMargins } = placeRects(segRects, segs, cells);\n    let moreCnts = [];\n    let moreMarginTops = [];\n    // add segs with unknown heights\n    for (let seg of unknownHeightSegs) {\n        multiColPlacements[seg.firstCol].push({\n            seg,\n            isVisible: false,\n            isAbsolute: true,\n            absoluteTop: 0,\n            marginTop: 0,\n        });\n        for (let col = seg.firstCol; col <= seg.lastCol; col += 1) {\n            singleColPlacements[col].push({\n                seg: resliceSeg(seg, col, col + 1, cells),\n                isVisible: false,\n                isAbsolute: false,\n                absoluteTop: 0,\n                marginTop: 0,\n            });\n        }\n    }\n    // add the hidden entries\n    for (let col = 0; col < cells.length; col += 1) {\n        moreCnts.push(0);\n    }\n    for (let hiddenEntry of hiddenEntries) {\n        let seg = segs[hiddenEntry.index];\n        let hiddenSpan = hiddenEntry.span;\n        multiColPlacements[hiddenSpan.start].push({\n            seg: resliceSeg(seg, hiddenSpan.start, hiddenSpan.end, cells),\n            isVisible: false,\n            isAbsolute: true,\n            absoluteTop: 0,\n            marginTop: 0,\n        });\n        for (let col = hiddenSpan.start; col < hiddenSpan.end; col += 1) {\n            moreCnts[col] += 1;\n            singleColPlacements[col].push({\n                seg: resliceSeg(seg, col, col + 1, cells),\n                isVisible: false,\n                isAbsolute: false,\n                absoluteTop: 0,\n                marginTop: 0,\n            });\n        }\n    }\n    // deal with leftover margins\n    for (let col = 0; col < cells.length; col += 1) {\n        moreMarginTops.push(leftoverMargins[col]);\n    }\n    return { singleColPlacements, multiColPlacements, moreCnts, moreMarginTops };\n}\n// rects ordered by top coord, then left\nfunction placeRects(allRects, segs, cells) {\n    let rectsByEachCol = groupRectsByEachCol(allRects, cells.length);\n    let singleColPlacements = [];\n    let multiColPlacements = [];\n    let leftoverMargins = [];\n    for (let col = 0; col < cells.length; col += 1) {\n        let rects = rectsByEachCol[col];\n        // compute all static segs in singlePlacements\n        let singlePlacements = [];\n        let currentHeight = 0;\n        let currentMarginTop = 0;\n        for (let rect of rects) {\n            let seg = segs[rect.index];\n            singlePlacements.push({\n                seg: resliceSeg(seg, col, col + 1, cells),\n                isVisible: true,\n                isAbsolute: false,\n                absoluteTop: rect.levelCoord,\n                marginTop: rect.levelCoord - currentHeight,\n            });\n            currentHeight = rect.levelCoord + rect.thickness;\n        }\n        // compute mixed static/absolute segs in multiPlacements\n        let multiPlacements = [];\n        currentHeight = 0;\n        currentMarginTop = 0;\n        for (let rect of rects) {\n            let seg = segs[rect.index];\n            let isAbsolute = rect.span.end - rect.span.start > 1; // multi-column?\n            let isFirstCol = rect.span.start === col;\n            currentMarginTop += rect.levelCoord - currentHeight; // amount of space since bottom of previous seg\n            currentHeight = rect.levelCoord + rect.thickness; // height will now be bottom of current seg\n            if (isAbsolute) {\n                currentMarginTop += rect.thickness;\n                if (isFirstCol) {\n                    multiPlacements.push({\n                        seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n                        isVisible: true,\n                        isAbsolute: true,\n                        absoluteTop: rect.levelCoord,\n                        marginTop: 0,\n                    });\n                }\n            }\n            else if (isFirstCol) {\n                multiPlacements.push({\n                    seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),\n                    isVisible: true,\n                    isAbsolute: false,\n                    absoluteTop: rect.levelCoord,\n                    marginTop: currentMarginTop, // claim the margin\n                });\n                currentMarginTop = 0;\n            }\n        }\n        singleColPlacements.push(singlePlacements);\n        multiColPlacements.push(multiPlacements);\n        leftoverMargins.push(currentMarginTop);\n    }\n    return { singleColPlacements, multiColPlacements, leftoverMargins };\n}\nfunction groupRectsByEachCol(rects, colCnt) {\n    let rectsByEachCol = [];\n    for (let col = 0; col < colCnt; col += 1) {\n        rectsByEachCol.push([]);\n    }\n    for (let rect of rects) {\n        for (let col = rect.span.start; col < rect.span.end; col += 1) {\n            rectsByEachCol[col].push(rect);\n        }\n    }\n    return rectsByEachCol;\n}\nfunction resliceSeg(seg, spanStart, spanEnd, cells) {\n    if (seg.firstCol === spanStart && seg.lastCol === spanEnd - 1) {\n        return seg;\n    }\n    let eventRange = seg.eventRange;\n    let origRange = eventRange.range;\n    let slicedRange = intersectRanges(origRange, {\n        start: cells[spanStart].date,\n        end: addDays(cells[spanEnd - 1].date, 1),\n    });\n    return Object.assign(Object.assign({}, seg), { firstCol: spanStart, lastCol: spanEnd - 1, eventRange: {\n            def: eventRange.def,\n            ui: Object.assign(Object.assign({}, eventRange.ui), { durationEditable: false }),\n            instance: eventRange.instance,\n            range: slicedRange,\n        }, isStart: seg.isStart && slicedRange.start.valueOf() === origRange.start.valueOf(), isEnd: seg.isEnd && slicedRange.end.valueOf() === origRange.end.valueOf() });\n}\nclass DayGridSegHierarchy extends SegHierarchy {\n    constructor() {\n        super(...arguments);\n        // config\n        this.hiddenConsumes = false;\n        // allows us to keep hidden entries in the hierarchy so they take up space\n        this.forceHidden = {};\n    }\n    addSegs(segInputs) {\n        const hiddenSegs = super.addSegs(segInputs);\n        const { entriesByLevel } = this;\n        const excludeHidden = (entry) => !this.forceHidden[buildEntryKey(entry)];\n        // remove the forced-hidden segs\n        for (let level = 0; level < entriesByLevel.length; level += 1) {\n            entriesByLevel[level] = entriesByLevel[level].filter(excludeHidden);\n        }\n        return hiddenSegs;\n    }\n    handleInvalidInsertion(insertion, entry, hiddenEntries) {\n        const { entriesByLevel, forceHidden } = this;\n        const { touchingEntry, touchingLevel, touchingLateral } = insertion;\n        // the entry that the new insertion is touching must be hidden\n        if (this.hiddenConsumes && touchingEntry) {\n            const touchingEntryId = buildEntryKey(touchingEntry);\n            if (!forceHidden[touchingEntryId]) {\n                if (this.allowReslicing) {\n                    // split up the touchingEntry, reinsert it\n                    const hiddenEntry = Object.assign(Object.assign({}, touchingEntry), { span: intersectSpans(touchingEntry.span, entry.span) });\n                    // reinsert the area that turned into a \"more\" link (so no other entries try to\n                    // occupy the space) but mark it forced-hidden\n                    const hiddenEntryId = buildEntryKey(hiddenEntry);\n                    forceHidden[hiddenEntryId] = true;\n                    entriesByLevel[touchingLevel][touchingLateral] = hiddenEntry;\n                    hiddenEntries.push(hiddenEntry);\n                    this.splitEntry(touchingEntry, entry, hiddenEntries);\n                }\n                else {\n                    forceHidden[touchingEntryId] = true;\n                    hiddenEntries.push(touchingEntry);\n                }\n            }\n        }\n        // will try to reslice...\n        super.handleInvalidInsertion(insertion, entry, hiddenEntries);\n    }\n}\n\nclass TableRow extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.cellElRefs = new RefMap(); // the <td>\n        this.frameElRefs = new RefMap(); // the fc-daygrid-day-frame\n        this.fgElRefs = new RefMap(); // the fc-daygrid-day-events\n        this.segHarnessRefs = new RefMap(); // indexed by \"instanceId:firstCol\"\n        this.rootElRef = createRef();\n        this.state = {\n            framePositions: null,\n            maxContentHeight: null,\n            segHeights: {},\n        };\n        this.handleResize = (isForced) => {\n            if (isForced) {\n                this.updateSizing(true); // isExternal=true\n            }\n        };\n    }\n    render() {\n        let { props, state, context } = this;\n        let { options } = context;\n        let colCnt = props.cells.length;\n        let businessHoursByCol = splitSegsByFirstCol(props.businessHourSegs, colCnt);\n        let bgEventSegsByCol = splitSegsByFirstCol(props.bgEventSegs, colCnt);\n        let highlightSegsByCol = splitSegsByFirstCol(this.getHighlightSegs(), colCnt);\n        let mirrorSegsByCol = splitSegsByFirstCol(this.getMirrorSegs(), colCnt);\n        let { singleColPlacements, multiColPlacements, moreCnts, moreMarginTops } = computeFgSegPlacement(sortEventSegs(props.fgEventSegs, options.eventOrder), props.dayMaxEvents, props.dayMaxEventRows, options.eventOrderStrict, state.segHeights, state.maxContentHeight, props.cells);\n        let isForcedInvisible = // TODO: messy way to compute this\n         (props.eventDrag && props.eventDrag.affectedInstances) ||\n            (props.eventResize && props.eventResize.affectedInstances) ||\n            {};\n        return (createElement(\"tr\", { ref: this.rootElRef, role: \"row\" },\n            props.renderIntro && props.renderIntro(),\n            props.cells.map((cell, col) => {\n                let normalFgNodes = this.renderFgSegs(col, props.forPrint ? singleColPlacements[col] : multiColPlacements[col], props.todayRange, isForcedInvisible);\n                let mirrorFgNodes = this.renderFgSegs(col, buildMirrorPlacements(mirrorSegsByCol[col], multiColPlacements), props.todayRange, {}, Boolean(props.eventDrag), Boolean(props.eventResize), false);\n                return (createElement(TableCell, { key: cell.key, elRef: this.cellElRefs.createRef(cell.key), innerElRef: this.frameElRefs.createRef(cell.key) /* FF <td> problem, but okay to use for left/right. TODO: rename prop */, dateProfile: props.dateProfile, date: cell.date, showDayNumber: props.showDayNumbers, showWeekNumber: props.showWeekNumbers && col === 0, forceDayTop: props.showWeekNumbers /* even displaying weeknum for row, not necessarily day */, todayRange: props.todayRange, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, extraRenderProps: cell.extraRenderProps, extraDataAttrs: cell.extraDataAttrs, extraClassNames: cell.extraClassNames, extraDateSpan: cell.extraDateSpan, moreCnt: moreCnts[col], moreMarginTop: moreMarginTops[col], singlePlacements: singleColPlacements[col], fgContentElRef: this.fgElRefs.createRef(cell.key), fgContent: ( // Fragment scopes the keys\n                    createElement(Fragment, null,\n                        createElement(Fragment, null, normalFgNodes),\n                        createElement(Fragment, null, mirrorFgNodes))), bgContent: ( // Fragment scopes the keys\n                    createElement(Fragment, null,\n                        this.renderFillSegs(highlightSegsByCol[col], 'highlight'),\n                        this.renderFillSegs(businessHoursByCol[col], 'non-business'),\n                        this.renderFillSegs(bgEventSegsByCol[col], 'bg-event'))), minHeight: props.cellMinHeight }));\n            })));\n    }\n    componentDidMount() {\n        this.updateSizing(true);\n        this.context.addResizeHandler(this.handleResize);\n    }\n    componentDidUpdate(prevProps, prevState) {\n        let currentProps = this.props;\n        this.updateSizing(!isPropsEqual(prevProps, currentProps));\n    }\n    componentWillUnmount() {\n        this.context.removeResizeHandler(this.handleResize);\n    }\n    getHighlightSegs() {\n        let { props } = this;\n        if (props.eventDrag && props.eventDrag.segs.length) { // messy check\n            return props.eventDrag.segs;\n        }\n        if (props.eventResize && props.eventResize.segs.length) { // messy check\n            return props.eventResize.segs;\n        }\n        return props.dateSelectionSegs;\n    }\n    getMirrorSegs() {\n        let { props } = this;\n        if (props.eventResize && props.eventResize.segs.length) { // messy check\n            return props.eventResize.segs;\n        }\n        return [];\n    }\n    renderFgSegs(col, segPlacements, todayRange, isForcedInvisible, isDragging, isResizing, isDateSelecting) {\n        let { context } = this;\n        let { eventSelection } = this.props;\n        let { framePositions } = this.state;\n        let defaultDisplayEventEnd = this.props.cells.length === 1; // colCnt === 1\n        let isMirror = isDragging || isResizing || isDateSelecting;\n        let nodes = [];\n        if (framePositions) {\n            for (let placement of segPlacements) {\n                let { seg } = placement;\n                let { instanceId } = seg.eventRange.instance;\n                let isVisible = placement.isVisible && !isForcedInvisible[instanceId];\n                let isAbsolute = placement.isAbsolute;\n                let left = '';\n                let right = '';\n                if (isAbsolute) {\n                    if (context.isRtl) {\n                        right = 0;\n                        left = framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol];\n                    }\n                    else {\n                        left = 0;\n                        right = framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol];\n                    }\n                }\n                /*\n                known bug: events that are force to be list-item but span multiple days still take up space in later columns\n                todo: in print view, for multi-day events, don't display title within non-start/end segs\n                */\n                nodes.push(createElement(\"div\", { className: 'fc-daygrid-event-harness' + (isAbsolute ? ' fc-daygrid-event-harness-abs' : ''), key: generateSegKey(seg), ref: isMirror ? null : this.segHarnessRefs.createRef(generateSegUid(seg)), style: {\n                        visibility: isVisible ? '' : 'hidden',\n                        marginTop: isAbsolute ? '' : placement.marginTop,\n                        top: isAbsolute ? placement.absoluteTop : '',\n                        left,\n                        right,\n                    } }, hasListItemDisplay(seg) ? (createElement(TableListItemEvent, Object.assign({ seg: seg, isDragging: isDragging, isSelected: instanceId === eventSelection, defaultDisplayEventEnd: defaultDisplayEventEnd }, getSegMeta(seg, todayRange)))) : (createElement(TableBlockEvent, Object.assign({ seg: seg, isDragging: isDragging, isResizing: isResizing, isDateSelecting: isDateSelecting, isSelected: instanceId === eventSelection, defaultDisplayEventEnd: defaultDisplayEventEnd }, getSegMeta(seg, todayRange))))));\n            }\n        }\n        return nodes;\n    }\n    renderFillSegs(segs, fillType) {\n        let { isRtl } = this.context;\n        let { todayRange } = this.props;\n        let { framePositions } = this.state;\n        let nodes = [];\n        if (framePositions) {\n            for (let seg of segs) {\n                let leftRightCss = isRtl ? {\n                    right: 0,\n                    left: framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol],\n                } : {\n                    left: 0,\n                    right: framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol],\n                };\n                nodes.push(createElement(\"div\", { key: buildEventRangeKey(seg.eventRange), className: \"fc-daygrid-bg-harness\", style: leftRightCss }, fillType === 'bg-event' ?\n                    createElement(BgEvent, Object.assign({ seg: seg }, getSegMeta(seg, todayRange))) :\n                    renderFill(fillType)));\n            }\n        }\n        return createElement(Fragment, {}, ...nodes);\n    }\n    updateSizing(isExternalSizingChange) {\n        let { props, state, frameElRefs } = this;\n        if (!props.forPrint &&\n            props.clientWidth !== null // positioning ready?\n        ) {\n            if (isExternalSizingChange) {\n                let frameEls = props.cells.map((cell) => frameElRefs.currentMap[cell.key]);\n                if (frameEls.length) {\n                    let originEl = this.rootElRef.current;\n                    let newPositionCache = new PositionCache(originEl, frameEls, true, // isHorizontal\n                    false);\n                    if (!state.framePositions || !state.framePositions.similarTo(newPositionCache)) {\n                        this.setState({\n                            framePositions: new PositionCache(originEl, frameEls, true, // isHorizontal\n                            false),\n                        });\n                    }\n                }\n            }\n            const oldSegHeights = this.state.segHeights;\n            const newSegHeights = this.querySegHeights();\n            const limitByContentHeight = props.dayMaxEvents === true || props.dayMaxEventRows === true;\n            this.safeSetState({\n                // HACK to prevent oscillations of events being shown/hidden from max-event-rows\n                // Essentially, once you compute an element's height, never null-out.\n                // TODO: always display all events, as visibility:hidden?\n                segHeights: Object.assign(Object.assign({}, oldSegHeights), newSegHeights),\n                maxContentHeight: limitByContentHeight ? this.computeMaxContentHeight() : null,\n            });\n        }\n    }\n    querySegHeights() {\n        let segElMap = this.segHarnessRefs.currentMap;\n        let segHeights = {};\n        // get the max height amongst instance segs\n        for (let segUid in segElMap) {\n            let height = Math.round(segElMap[segUid].getBoundingClientRect().height);\n            segHeights[segUid] = Math.max(segHeights[segUid] || 0, height);\n        }\n        return segHeights;\n    }\n    computeMaxContentHeight() {\n        let firstKey = this.props.cells[0].key;\n        let cellEl = this.cellElRefs.currentMap[firstKey];\n        let fcContainerEl = this.fgElRefs.currentMap[firstKey];\n        return cellEl.getBoundingClientRect().bottom - fcContainerEl.getBoundingClientRect().top;\n    }\n    getCellEls() {\n        let elMap = this.cellElRefs.currentMap;\n        return this.props.cells.map((cell) => elMap[cell.key]);\n    }\n}\nTableRow.addStateEquality({\n    segHeights: isPropsEqual,\n});\nfunction buildMirrorPlacements(mirrorSegs, colPlacements) {\n    if (!mirrorSegs.length) {\n        return [];\n    }\n    let topsByInstanceId = buildAbsoluteTopHash(colPlacements); // TODO: cache this at first render?\n    return mirrorSegs.map((seg) => ({\n        seg,\n        isVisible: true,\n        isAbsolute: true,\n        absoluteTop: topsByInstanceId[seg.eventRange.instance.instanceId],\n        marginTop: 0,\n    }));\n}\nfunction buildAbsoluteTopHash(colPlacements) {\n    let topsByInstanceId = {};\n    for (let placements of colPlacements) {\n        for (let placement of placements) {\n            topsByInstanceId[placement.seg.eventRange.instance.instanceId] = placement.absoluteTop;\n        }\n    }\n    return topsByInstanceId;\n}\n\nclass TableRows extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.splitBusinessHourSegs = memoize(splitSegsByRow);\n        this.splitBgEventSegs = memoize(splitSegsByRow);\n        this.splitFgEventSegs = memoize(splitSegsByRow);\n        this.splitDateSelectionSegs = memoize(splitSegsByRow);\n        this.splitEventDrag = memoize(splitInteractionByRow);\n        this.splitEventResize = memoize(splitInteractionByRow);\n        this.rowRefs = new RefMap();\n    }\n    render() {\n        let { props, context } = this;\n        let rowCnt = props.cells.length;\n        let businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, rowCnt);\n        let bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, rowCnt);\n        let fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, rowCnt);\n        let dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, rowCnt);\n        let eventDragByRow = this.splitEventDrag(props.eventDrag, rowCnt);\n        let eventResizeByRow = this.splitEventResize(props.eventResize, rowCnt);\n        // for DayGrid view with many rows, force a min-height on cells so doesn't appear squished\n        // choose 7 because a month view will have max 6 rows\n        let cellMinHeight = (rowCnt >= 7 && props.clientWidth) ?\n            props.clientWidth / context.options.aspectRatio / 6 :\n            null;\n        return (createElement(NowTimer, { unit: \"day\" }, (nowDate, todayRange) => (createElement(Fragment, null, props.cells.map((cells, row) => (createElement(TableRow, { ref: this.rowRefs.createRef(row), key: cells.length\n                ? cells[0].date.toISOString() /* best? or put key on cell? or use diff formatter? */\n                : row // in case there are no cells (like when resource view is loading)\n            , showDayNumbers: rowCnt > 1, showWeekNumbers: props.showWeekNumbers, todayRange: todayRange, dateProfile: props.dateProfile, cells: cells, renderIntro: props.renderRowIntro, businessHourSegs: businessHourSegsByRow[row], eventSelection: props.eventSelection, bgEventSegs: bgEventSegsByRow[row].filter(isSegAllDay) /* hack */, fgEventSegs: fgEventSegsByRow[row], dateSelectionSegs: dateSelectionSegsByRow[row], eventDrag: eventDragByRow[row], eventResize: eventResizeByRow[row], dayMaxEvents: props.dayMaxEvents, dayMaxEventRows: props.dayMaxEventRows, clientWidth: props.clientWidth, clientHeight: props.clientHeight, cellMinHeight: cellMinHeight, forPrint: props.forPrint })))))));\n    }\n    componentDidMount() {\n        this.registerInteractiveComponent();\n    }\n    componentDidUpdate() {\n        // for if started with zero cells\n        this.registerInteractiveComponent();\n    }\n    registerInteractiveComponent() {\n        if (!this.rootEl) {\n            // HACK: need a daygrid wrapper parent to do positioning\n            // NOTE: a daygrid resource view w/o resources can have zero cells\n            const firstCellEl = this.rowRefs.currentMap[0].getCellEls()[0];\n            const rootEl = firstCellEl ? firstCellEl.closest('.fc-daygrid-body') : null;\n            if (rootEl) {\n                this.rootEl = rootEl;\n                this.context.registerInteractiveComponent(this, {\n                    el: rootEl,\n                    isHitComboAllowed: this.props.isHitComboAllowed,\n                });\n            }\n        }\n    }\n    componentWillUnmount() {\n        if (this.rootEl) {\n            this.context.unregisterInteractiveComponent(this);\n            this.rootEl = null;\n        }\n    }\n    // Hit System\n    // ----------------------------------------------------------------------------------------------------\n    prepareHits() {\n        this.rowPositions = new PositionCache(this.rootEl, this.rowRefs.collect().map((rowObj) => rowObj.getCellEls()[0]), // first cell el in each row. TODO: not optimal\n        false, true);\n        this.colPositions = new PositionCache(this.rootEl, this.rowRefs.currentMap[0].getCellEls(), // cell els in first row\n        true, // horizontal\n        false);\n    }\n    queryHit(positionLeft, positionTop) {\n        let { colPositions, rowPositions } = this;\n        let col = colPositions.leftToIndex(positionLeft);\n        let row = rowPositions.topToIndex(positionTop);\n        if (row != null && col != null) {\n            let cell = this.props.cells[row][col];\n            return {\n                dateProfile: this.props.dateProfile,\n                dateSpan: Object.assign({ range: this.getCellRange(row, col), allDay: true }, cell.extraDateSpan),\n                dayEl: this.getCellEl(row, col),\n                rect: {\n                    left: colPositions.lefts[col],\n                    right: colPositions.rights[col],\n                    top: rowPositions.tops[row],\n                    bottom: rowPositions.bottoms[row],\n                },\n                layer: 0,\n            };\n        }\n        return null;\n    }\n    getCellEl(row, col) {\n        return this.rowRefs.currentMap[row].getCellEls()[col]; // TODO: not optimal\n    }\n    getCellRange(row, col) {\n        let start = this.props.cells[row][col].date;\n        let end = addDays(start, 1);\n        return { start, end };\n    }\n}\nfunction isSegAllDay(seg) {\n    return seg.eventRange.def.allDay;\n}\n\nclass Table extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.elRef = createRef();\n        this.needsScrollReset = false;\n    }\n    render() {\n        let { props } = this;\n        let { dayMaxEventRows, dayMaxEvents, expandRows } = props;\n        let limitViaBalanced = dayMaxEvents === true || dayMaxEventRows === true;\n        // if rows can't expand to fill fixed height, can't do balanced-height event limit\n        // TODO: best place to normalize these options?\n        if (limitViaBalanced && !expandRows) {\n            limitViaBalanced = false;\n            dayMaxEventRows = null;\n            dayMaxEvents = null;\n        }\n        let classNames = [\n            'fc-daygrid-body',\n            limitViaBalanced ? 'fc-daygrid-body-balanced' : 'fc-daygrid-body-unbalanced',\n            expandRows ? '' : 'fc-daygrid-body-natural', // will height of one row depend on the others?\n        ];\n        return (createElement(\"div\", { ref: this.elRef, className: classNames.join(' '), style: {\n                // these props are important to give this wrapper correct dimensions for interactions\n                // TODO: if we set it here, can we avoid giving to inner tables?\n                width: props.clientWidth,\n                minWidth: props.tableMinWidth,\n            } },\n            createElement(\"table\", { role: \"presentation\", className: \"fc-scrollgrid-sync-table\", style: {\n                    width: props.clientWidth,\n                    minWidth: props.tableMinWidth,\n                    height: expandRows ? props.clientHeight : '',\n                } },\n                props.colGroupNode,\n                createElement(\"tbody\", { role: \"presentation\" },\n                    createElement(TableRows, { dateProfile: props.dateProfile, cells: props.cells, renderRowIntro: props.renderRowIntro, showWeekNumbers: props.showWeekNumbers, clientWidth: props.clientWidth, clientHeight: props.clientHeight, businessHourSegs: props.businessHourSegs, bgEventSegs: props.bgEventSegs, fgEventSegs: props.fgEventSegs, dateSelectionSegs: props.dateSelectionSegs, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, dayMaxEvents: dayMaxEvents, dayMaxEventRows: dayMaxEventRows, forPrint: props.forPrint, isHitComboAllowed: props.isHitComboAllowed })))));\n    }\n    componentDidMount() {\n        this.requestScrollReset();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.dateProfile !== this.props.dateProfile) {\n            this.requestScrollReset();\n        }\n        else {\n            this.flushScrollReset();\n        }\n    }\n    requestScrollReset() {\n        this.needsScrollReset = true;\n        this.flushScrollReset();\n    }\n    flushScrollReset() {\n        if (this.needsScrollReset &&\n            this.props.clientWidth // sizes computed?\n        ) {\n            const subjectEl = getScrollSubjectEl(this.elRef.current, this.props.dateProfile);\n            if (subjectEl) {\n                const originEl = subjectEl.closest('.fc-daygrid-body');\n                const scrollEl = originEl.closest('.fc-scroller');\n                const scrollTop = subjectEl.getBoundingClientRect().top -\n                    originEl.getBoundingClientRect().top;\n                scrollEl.scrollTop = scrollTop ? (scrollTop + 1) : 0; // overcome border\n            }\n            this.needsScrollReset = false;\n        }\n    }\n}\nfunction getScrollSubjectEl(containerEl, dateProfile) {\n    let el;\n    if (dateProfile.currentRangeUnit.match(/year|month/)) {\n        el = containerEl.querySelector(`[data-date=\"${formatIsoMonthStr(dateProfile.currentDate)}-01\"]`);\n        // even if view is month-based, first-of-month might be hidden...\n    }\n    if (!el) {\n        el = containerEl.querySelector(`[data-date=\"${formatDayString(dateProfile.currentDate)}\"]`);\n        // could still be hidden if an interior-view hidden day\n    }\n    return el;\n}\n\nclass DayTableSlicer extends Slicer {\n    constructor() {\n        super(...arguments);\n        this.forceDayIfListItem = true;\n    }\n    sliceRange(dateRange, dayTableModel) {\n        return dayTableModel.sliceRange(dateRange);\n    }\n}\n\nclass DayTable extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.slicer = new DayTableSlicer();\n        this.tableRef = createRef();\n    }\n    render() {\n        let { props, context } = this;\n        return (createElement(Table, Object.assign({ ref: this.tableRef }, this.slicer.sliceProps(props, props.dateProfile, props.nextDayThreshold, context, props.dayTableModel), { dateProfile: props.dateProfile, cells: props.dayTableModel.cells, colGroupNode: props.colGroupNode, tableMinWidth: props.tableMinWidth, renderRowIntro: props.renderRowIntro, dayMaxEvents: props.dayMaxEvents, dayMaxEventRows: props.dayMaxEventRows, showWeekNumbers: props.showWeekNumbers, expandRows: props.expandRows, headerAlignElRef: props.headerAlignElRef, clientWidth: props.clientWidth, clientHeight: props.clientHeight, forPrint: props.forPrint })));\n    }\n}\n\nclass DayTableView extends TableView {\n    constructor() {\n        super(...arguments);\n        this.buildDayTableModel = memoize(buildDayTableModel);\n        this.headerRef = createRef();\n        this.tableRef = createRef();\n        // can't override any lifecycle methods from parent\n    }\n    render() {\n        let { options, dateProfileGenerator } = this.context;\n        let { props } = this;\n        let dayTableModel = this.buildDayTableModel(props.dateProfile, dateProfileGenerator);\n        let headerContent = options.dayHeaders && (createElement(DayHeader, { ref: this.headerRef, dateProfile: props.dateProfile, dates: dayTableModel.headerDates, datesRepDistinctDays: dayTableModel.rowCnt === 1 }));\n        let bodyContent = (contentArg) => (createElement(DayTable, { ref: this.tableRef, dateProfile: props.dateProfile, dayTableModel: dayTableModel, businessHours: props.businessHours, dateSelection: props.dateSelection, eventStore: props.eventStore, eventUiBases: props.eventUiBases, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, nextDayThreshold: options.nextDayThreshold, colGroupNode: contentArg.tableColGroupNode, tableMinWidth: contentArg.tableMinWidth, dayMaxEvents: options.dayMaxEvents, dayMaxEventRows: options.dayMaxEventRows, showWeekNumbers: options.weekNumbers, expandRows: !props.isHeightAuto, headerAlignElRef: this.headerElRef, clientWidth: contentArg.clientWidth, clientHeight: contentArg.clientHeight, forPrint: props.forPrint }));\n        return options.dayMinWidth\n            ? this.renderHScrollLayout(headerContent, bodyContent, dayTableModel.colCnt, options.dayMinWidth)\n            : this.renderSimpleLayout(headerContent, bodyContent);\n    }\n}\nfunction buildDayTableModel(dateProfile, dateProfileGenerator) {\n    let daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator);\n    return new DayTableModel(daySeries, /year|month|week/.test(dateProfile.currentRangeUnit));\n}\n\nclass TableDateProfileGenerator extends DateProfileGenerator {\n    // Computes the date range that will be rendered\n    buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay) {\n        let renderRange = super.buildRenderRange(currentRange, currentRangeUnit, isRangeAllDay);\n        let { props } = this;\n        return buildDayTableRenderRange({\n            currentRange: renderRange,\n            snapToWeek: /^(year|month)$/.test(currentRangeUnit),\n            fixedWeekCount: props.fixedWeekCount,\n            dateEnv: props.dateEnv,\n        });\n    }\n}\nfunction buildDayTableRenderRange(props) {\n    let { dateEnv, currentRange } = props;\n    let { start, end } = currentRange;\n    let endOfWeek;\n    // year and month views should be aligned with weeks. this is already done for week\n    if (props.snapToWeek) {\n        start = dateEnv.startOfWeek(start);\n        // make end-of-week if not already\n        endOfWeek = dateEnv.startOfWeek(end);\n        if (endOfWeek.valueOf() !== end.valueOf()) {\n            end = addWeeks(endOfWeek, 1);\n        }\n    }\n    // ensure 6 weeks\n    if (props.fixedWeekCount) {\n        // TODO: instead of these date-math gymnastics (for multimonth view),\n        // compute dateprofiles of all months, then use start of first and end of last.\n        let lastMonthRenderStart = dateEnv.startOfWeek(dateEnv.startOfMonth(addDays(currentRange.end, -1)));\n        let rowCnt = Math.ceil(// could be partial weeks due to hiddenDays\n        diffWeeks(lastMonthRenderStart, end));\n        end = addWeeks(end, 6 - rowCnt);\n    }\n    return { start, end };\n}\n\nvar css_248z = \":root{--fc-daygrid-event-dot-width:8px}.fc-daygrid-day-events:after,.fc-daygrid-day-events:before,.fc-daygrid-day-frame:after,.fc-daygrid-day-frame:before,.fc-daygrid-event-harness:after,.fc-daygrid-event-harness:before{clear:both;content:\\\"\\\";display:table}.fc .fc-daygrid-body{position:relative;z-index:1}.fc .fc-daygrid-day.fc-day-today{background-color:var(--fc-today-bg-color)}.fc .fc-daygrid-day-frame{min-height:100%;position:relative}.fc .fc-daygrid-day-top{display:flex;flex-direction:row-reverse}.fc .fc-day-other .fc-daygrid-day-top{opacity:.3}.fc .fc-daygrid-day-number{padding:4px;position:relative;z-index:4}.fc .fc-daygrid-month-start{font-size:1.1em;font-weight:700}.fc .fc-daygrid-day-events{margin-top:1px}.fc .fc-daygrid-body-balanced .fc-daygrid-day-events{left:0;position:absolute;right:0}.fc .fc-daygrid-body-unbalanced .fc-daygrid-day-events{min-height:2em;position:relative}.fc .fc-daygrid-body-natural .fc-daygrid-day-events{margin-bottom:1em}.fc .fc-daygrid-event-harness{position:relative}.fc .fc-daygrid-event-harness-abs{left:0;position:absolute;right:0;top:0}.fc .fc-daygrid-bg-harness{bottom:0;position:absolute;top:0}.fc .fc-daygrid-day-bg .fc-non-business{z-index:1}.fc .fc-daygrid-day-bg .fc-bg-event{z-index:2}.fc .fc-daygrid-day-bg .fc-highlight{z-index:3}.fc .fc-daygrid-event{margin-top:1px;z-index:6}.fc .fc-daygrid-event.fc-event-mirror{z-index:7}.fc .fc-daygrid-day-bottom{font-size:.85em;margin:0 2px}.fc .fc-daygrid-day-bottom:after,.fc .fc-daygrid-day-bottom:before{clear:both;content:\\\"\\\";display:table}.fc .fc-daygrid-more-link{border-radius:3px;cursor:pointer;line-height:1;margin-top:1px;max-width:100%;overflow:hidden;padding:2px;position:relative;white-space:nowrap;z-index:4}.fc .fc-daygrid-more-link:hover{background-color:rgba(0,0,0,.1)}.fc .fc-daygrid-week-number{background-color:var(--fc-neutral-bg-color);color:var(--fc-neutral-text-color);min-width:1.5em;padding:2px;position:absolute;text-align:center;top:0;z-index:5}.fc .fc-more-popover .fc-popover-body{min-width:220px;padding:10px}.fc-direction-ltr .fc-daygrid-event.fc-event-start,.fc-direction-rtl .fc-daygrid-event.fc-event-end{margin-left:2px}.fc-direction-ltr .fc-daygrid-event.fc-event-end,.fc-direction-rtl .fc-daygrid-event.fc-event-start{margin-right:2px}.fc-direction-ltr .fc-daygrid-more-link{float:left}.fc-direction-ltr .fc-daygrid-week-number{border-radius:0 0 3px 0;left:0}.fc-direction-rtl .fc-daygrid-more-link{float:right}.fc-direction-rtl .fc-daygrid-week-number{border-radius:0 0 0 3px;right:0}.fc-liquid-hack .fc-daygrid-day-frame{position:static}.fc-daygrid-event{border-radius:3px;font-size:var(--fc-small-font-size);position:relative;white-space:nowrap}.fc-daygrid-block-event .fc-event-time{font-weight:700}.fc-daygrid-block-event .fc-event-time,.fc-daygrid-block-event .fc-event-title{padding:1px}.fc-daygrid-dot-event{align-items:center;display:flex;padding:2px 0}.fc-daygrid-dot-event .fc-event-title{flex-grow:1;flex-shrink:1;font-weight:700;min-width:0;overflow:hidden}.fc-daygrid-dot-event.fc-event-mirror,.fc-daygrid-dot-event:hover{background:rgba(0,0,0,.1)}.fc-daygrid-dot-event.fc-event-selected:before{bottom:-10px;top:-10px}.fc-daygrid-event-dot{border:calc(var(--fc-daygrid-event-dot-width)/2) solid var(--fc-event-border-color);border-radius:calc(var(--fc-daygrid-event-dot-width)/2);box-sizing:content-box;height:0;margin:0 4px;width:0}.fc-direction-ltr .fc-daygrid-event .fc-event-time{margin-right:3px}.fc-direction-rtl .fc-daygrid-event .fc-event-time{margin-left:3px}\";\ninjectStyles(css_248z);\n\nexport { DayTableView as DayGridView, DayTable, DayTableSlicer, Table, TableDateProfileGenerator, TableRows, TableView, buildDayTableModel, buildDayTableRenderRange };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}