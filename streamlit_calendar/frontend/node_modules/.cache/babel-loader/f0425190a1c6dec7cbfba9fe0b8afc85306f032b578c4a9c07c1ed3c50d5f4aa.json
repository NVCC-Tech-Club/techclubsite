{"ast":null,"code":"import _classCallCheck from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n// automatically generated by the FlatBuffers compiler, do not modify\nimport * as flatbuffers from 'flatbuffers';\nexport var FixedSizeList = /*#__PURE__*/function () {\n  function FixedSizeList() {\n    _classCallCheck(this, FixedSizeList);\n    this.bb = null;\n    this.bb_pos = 0;\n  }\n  _createClass(FixedSizeList, [{\n    key: \"__init\",\n    value: function __init(i, bb) {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n  }, {\n    key: \"listSize\",\n    value:\n    /**\n     * Number of list items per value\n     */\n    function listSize() {\n      var offset = this.bb.__offset(this.bb_pos, 4);\n      return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;\n    }\n  }], [{\n    key: \"getRootAsFixedSizeList\",\n    value: function getRootAsFixedSizeList(bb, obj) {\n      return (obj || new FixedSizeList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n  }, {\n    key: \"getSizePrefixedRootAsFixedSizeList\",\n    value: function getSizePrefixedRootAsFixedSizeList(bb, obj) {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new FixedSizeList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n  }, {\n    key: \"startFixedSizeList\",\n    value: function startFixedSizeList(builder) {\n      builder.startObject(1);\n    }\n  }, {\n    key: \"addListSize\",\n    value: function addListSize(builder, listSize) {\n      builder.addFieldInt32(0, listSize, 0);\n    }\n  }, {\n    key: \"endFixedSizeList\",\n    value: function endFixedSizeList(builder) {\n      var offset = builder.endObject();\n      return offset;\n    }\n  }, {\n    key: \"createFixedSizeList\",\n    value: function createFixedSizeList(builder, listSize) {\n      FixedSizeList.startFixedSizeList(builder);\n      FixedSizeList.addListSize(builder, listSize);\n      return FixedSizeList.endFixedSizeList(builder);\n    }\n  }]);\n  return FixedSizeList;\n}();","map":{"version":3,"names":["flatbuffers","FixedSizeList","_classCallCheck","bb","bb_pos","_createClass","key","value","__init","i","listSize","offset","__offset","readInt32","getRootAsFixedSizeList","obj","position","getSizePrefixedRootAsFixedSizeList","setPosition","SIZE_PREFIX_LENGTH","startFixedSizeList","builder","startObject","addListSize","addFieldInt32","endFixedSizeList","endObject","createFixedSizeList"],"sources":["C:\\Users\\erden\\OneDrive\\Documents\\GitHub\\techclubsite\\streamlit_calendar\\frontend\\node_modules\\apache-arrow\\src\\fb\\fixed-size-list.ts"],"sourcesContent":["// automatically generated by the FlatBuffers compiler, do not modify\n\nimport * as flatbuffers from 'flatbuffers';\n\nexport class FixedSizeList {\n  bb: flatbuffers.ByteBuffer|null = null;\n  bb_pos = 0;\n__init(i:number, bb:flatbuffers.ByteBuffer):FixedSizeList {\n  this.bb_pos = i;\n  this.bb = bb;\n  return this;\n}\n\nstatic getRootAsFixedSizeList(bb:flatbuffers.ByteBuffer, obj?:FixedSizeList):FixedSizeList {\n  return (obj || new FixedSizeList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\nstatic getSizePrefixedRootAsFixedSizeList(bb:flatbuffers.ByteBuffer, obj?:FixedSizeList):FixedSizeList {\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n  return (obj || new FixedSizeList()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n}\n\n/**\n * Number of list items per value\n */\nlistSize():number {\n  const offset = this.bb!.__offset(this.bb_pos, 4);\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n}\n\nstatic startFixedSizeList(builder:flatbuffers.Builder) {\n  builder.startObject(1);\n}\n\nstatic addListSize(builder:flatbuffers.Builder, listSize:number) {\n  builder.addFieldInt32(0, listSize, 0);\n}\n\nstatic endFixedSizeList(builder:flatbuffers.Builder):flatbuffers.Offset {\n  const offset = builder.endObject();\n  return offset;\n}\n\nstatic createFixedSizeList(builder:flatbuffers.Builder, listSize:number):flatbuffers.Offset {\n  FixedSizeList.startFixedSizeList(builder);\n  FixedSizeList.addListSize(builder, listSize);\n  return FixedSizeList.endFixedSizeList(builder);\n}\n}\n"],"mappings":";;AAAA;AAEA,OAAO,KAAKA,WAAW,MAAM,aAAa;AAE1C,WAAaC,aAAa;EAA1B,SAAAA,cAAA;IAAAC,eAAA,OAAAD,aAAA;IACE,KAAAE,EAAE,GAAgC,IAAI;IACtC,KAAAC,MAAM,GAAG,CAAC;EA0CZ;EAACC,YAAA,CAAAJ,aAAA;IAAAK,GAAA;IAAAC,KAAA,EAzCD,SAAAC,OAAOC,CAAQ,EAAEN,EAAyB;MACxC,IAAI,CAACC,MAAM,GAAGK,CAAC;MACf,IAAI,CAACN,EAAE,GAAGA,EAAE;MACZ,OAAO,IAAI;IACb;EAAC;IAAAG,GAAA;IAAAC,KAAA;IAWD;;;IAGA,SAAAG,SAAA,EAAQ;MACN,IAAMC,MAAM,GAAG,IAAI,CAACR,EAAG,CAACS,QAAQ,CAAC,IAAI,CAACR,MAAM,EAAE,CAAC,CAAC;MAChD,OAAOO,MAAM,GAAG,IAAI,CAACR,EAAG,CAACU,SAAS,CAAC,IAAI,CAACT,MAAM,GAAGO,MAAM,CAAC,GAAG,CAAC;IAC9D;EAAC;IAAAL,GAAA;IAAAC,KAAA,EAfD,SAAAO,uBAA8BX,EAAyB,EAAEY,GAAkB;MACzE,OAAO,CAACA,GAAG,IAAI,IAAId,aAAa,EAAE,EAAEO,MAAM,CAACL,EAAE,CAACU,SAAS,CAACV,EAAE,CAACa,QAAQ,EAAE,CAAC,GAAGb,EAAE,CAACa,QAAQ,EAAE,EAAEb,EAAE,CAAC;IAC7F;EAAC;IAAAG,GAAA;IAAAC,KAAA,EAED,SAAAU,mCAA0Cd,EAAyB,EAAEY,GAAkB;MACrFZ,EAAE,CAACe,WAAW,CAACf,EAAE,CAACa,QAAQ,EAAE,GAAGhB,WAAW,CAACmB,kBAAkB,CAAC;MAC9D,OAAO,CAACJ,GAAG,IAAI,IAAId,aAAa,EAAE,EAAEO,MAAM,CAACL,EAAE,CAACU,SAAS,CAACV,EAAE,CAACa,QAAQ,EAAE,CAAC,GAAGb,EAAE,CAACa,QAAQ,EAAE,EAAEb,EAAE,CAAC;IAC7F;EAAC;IAAAG,GAAA;IAAAC,KAAA,EAUD,SAAAa,mBAA0BC,OAA2B;MACnDA,OAAO,CAACC,WAAW,CAAC,CAAC,CAAC;IACxB;EAAC;IAAAhB,GAAA;IAAAC,KAAA,EAED,SAAAgB,YAAmBF,OAA2B,EAAEX,QAAe;MAC7DW,OAAO,CAACG,aAAa,CAAC,CAAC,EAAEd,QAAQ,EAAE,CAAC,CAAC;IACvC;EAAC;IAAAJ,GAAA;IAAAC,KAAA,EAED,SAAAkB,iBAAwBJ,OAA2B;MACjD,IAAMV,MAAM,GAAGU,OAAO,CAACK,SAAS,EAAE;MAClC,OAAOf,MAAM;IACf;EAAC;IAAAL,GAAA;IAAAC,KAAA,EAED,SAAAoB,oBAA2BN,OAA2B,EAAEX,QAAe;MACrET,aAAa,CAACmB,kBAAkB,CAACC,OAAO,CAAC;MACzCpB,aAAa,CAACsB,WAAW,CAACF,OAAO,EAAEX,QAAQ,CAAC;MAC5C,OAAOT,aAAa,CAACwB,gBAAgB,CAACJ,OAAO,CAAC;IAChD;EAAC;EAAA,OAAApB,aAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}