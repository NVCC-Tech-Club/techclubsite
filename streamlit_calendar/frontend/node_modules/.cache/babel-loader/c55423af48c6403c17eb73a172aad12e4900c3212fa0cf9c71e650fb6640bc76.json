{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { __awaiter } from \"tslib\";\nimport { AsyncByteQueue } from '../../io/stream.mjs';\nimport { RecordBatchReader } from '../../ipc/reader.mjs';\n/** @ignore */\nexport function recordBatchReaderThroughDOMStream(writableStrategy, readableStrategy) {\n  var queue = new AsyncByteQueue();\n  var reader = null;\n  var readable = new ReadableStream({\n    cancel: function cancel() {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return queue.close();\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n    },\n    start: function start(controller) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.t0 = next;\n              _context2.t1 = controller;\n              _context2.t2 = reader;\n              if (_context2.t2) {\n                _context2.next = 7;\n                break;\n              }\n              _context2.next = 6;\n              return open();\n            case 6:\n              _context2.t2 = reader = _context2.sent;\n            case 7:\n              _context2.t3 = _context2.t2;\n              _context2.next = 10;\n              return (0, _context2.t0)(_context2.t1, _context2.t3);\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }));\n    },\n    pull: function pull(controller) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!reader) {\n                _context3.next = 5;\n                break;\n              }\n              _context3.next = 3;\n              return next(controller, reader);\n            case 3:\n              _context3.next = 6;\n              break;\n            case 5:\n              controller.close();\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n    }\n  });\n  return {\n    writable: new WritableStream(queue, Object.assign({\n      'highWaterMark': Math.pow(2, 14)\n    }, writableStrategy)),\n    readable: readable\n  };\n  function open() {\n    return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n      return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n        while (1) switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return RecordBatchReader.from(queue);\n          case 2:\n            _context4.next = 4;\n            return _context4.sent.open(readableStrategy);\n          case 4:\n            return _context4.abrupt(\"return\", _context4.sent);\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }, _callee4);\n    }));\n  }\n  function next(controller, reader) {\n    return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n      var size, r;\n      return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n        while (1) switch (_context5.prev = _context5.next) {\n          case 0:\n            size = controller.desiredSize;\n            r = null;\n          case 2:\n            _context5.next = 4;\n            return reader.next();\n          case 4:\n            if ((r = _context5.sent).done) {\n              _context5.next = 10;\n              break;\n            }\n            controller.enqueue(r.value);\n            if (!(size != null && --size <= 0)) {\n              _context5.next = 8;\n              break;\n            }\n            return _context5.abrupt(\"return\");\n          case 8:\n            _context5.next = 2;\n            break;\n          case 10:\n            controller.close();\n          case 11:\n          case \"end\":\n            return _context5.stop();\n        }\n      }, _callee5);\n    }));\n  }\n}","map":{"version":3,"names":["AsyncByteQueue","RecordBatchReader","recordBatchReaderThroughDOMStream","writableStrategy","readableStrategy","queue","reader","readable","ReadableStream","cancel","close","_context","stop","_callee","start","controller","next","_context2","t1","t2","open","sent","t3","t0","_callee2","pull","_context3","_callee3","writable","WritableStream","Object","assign","Math","pow","from","_context4","abrupt","_callee4","size","desiredSize","r","_context5","done","enqueue","value","_callee5"],"sources":["C:\\Users\\erden\\OneDrive\\Documents\\GitHub\\techclubsite\\streamlit_calendar\\frontend\\node_modules\\apache-arrow\\src\\io\\whatwg\\reader.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { TypeMap } from '../../type.js';\nimport { RecordBatch } from '../../recordbatch.js';\nimport { AsyncByteQueue } from '../../io/stream.js';\nimport { RecordBatchReader } from '../../ipc/reader.js';\n\n/** @ignore */\nexport function recordBatchReaderThroughDOMStream<T extends TypeMap = any>(writableStrategy?: ByteLengthQueuingStrategy, readableStrategy?: { autoDestroy: boolean }) {\n\n    const queue = new AsyncByteQueue();\n    let reader: RecordBatchReader<T> | null = null;\n\n    const readable = new ReadableStream<RecordBatch<T>>({\n        async cancel() { await queue.close(); },\n        async start(controller) { await next(controller, reader || (reader = await open())); },\n        async pull(controller) { reader ? await next(controller, reader) : controller.close(); }\n    });\n\n    return { writable: new WritableStream(queue, { 'highWaterMark': 2 ** 14, ...writableStrategy }), readable };\n\n    async function open() {\n        return await (await RecordBatchReader.from<T>(queue)).open(readableStrategy);\n    }\n\n    async function next(controller: ReadableStreamDefaultController<RecordBatch<T>>, reader: RecordBatchReader<T>) {\n        let size = controller.desiredSize;\n        let r: IteratorResult<RecordBatch<T>> | null = null;\n        while (!(r = await reader.next()).done) {\n            controller.enqueue(r.value);\n            if (size != null && --size <= 0) {\n                return;\n            }\n        }\n        controller.close();\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}