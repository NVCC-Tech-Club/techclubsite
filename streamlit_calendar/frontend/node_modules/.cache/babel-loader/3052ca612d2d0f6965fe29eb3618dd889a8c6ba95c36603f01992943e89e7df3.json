{"ast":null,"code":"import { freqIsDailyOrGreater } from '../types';\nimport { combine, fromOrdinal, MAXYEAR } from '../dateutil';\nimport Iterinfo from '../iterinfo/index';\nimport { RRule } from '../rrule';\nimport { buildTimeset } from '../parseoptions';\nimport { notEmpty, includes, isPresent } from '../helpers';\nimport { DateWithZone } from '../datewithzone';\nimport { buildPoslist } from './poslist';\nimport { DateTime } from '../datetime';\nexport function iter(iterResult, options) {\n  var dtstart = options.dtstart,\n    freq = options.freq,\n    interval = options.interval,\n    until = options.until,\n    bysetpos = options.bysetpos;\n  var count = options.count;\n  if (count === 0 || interval === 0) {\n    return emitResult(iterResult);\n  }\n  var counterDate = DateTime.fromDate(dtstart);\n  var ii = new Iterinfo(options);\n  ii.rebuild(counterDate.year, counterDate.month);\n  var timeset = makeTimeset(ii, counterDate, options);\n  for (;;) {\n    var _a = ii.getdayset(freq)(counterDate.year, counterDate.month, counterDate.day),\n      dayset = _a[0],\n      start = _a[1],\n      end = _a[2];\n    var filtered = removeFilteredDays(dayset, start, end, ii, options);\n    if (notEmpty(bysetpos)) {\n      var poslist = buildPoslist(bysetpos, timeset, start, end, ii, dayset);\n      for (var j = 0; j < poslist.length; j++) {\n        var res = poslist[j];\n        if (until && res > until) {\n          return emitResult(iterResult);\n        }\n        if (res >= dtstart) {\n          var rezonedDate = rezoneIfNeeded(res, options);\n          if (!iterResult.accept(rezonedDate)) {\n            return emitResult(iterResult);\n          }\n          if (count) {\n            --count;\n            if (!count) {\n              return emitResult(iterResult);\n            }\n          }\n        }\n      }\n    } else {\n      for (var j = start; j < end; j++) {\n        var currentDay = dayset[j];\n        if (!isPresent(currentDay)) {\n          continue;\n        }\n        var date = fromOrdinal(ii.yearordinal + currentDay);\n        for (var k = 0; k < timeset.length; k++) {\n          var time = timeset[k];\n          var res = combine(date, time);\n          if (until && res > until) {\n            return emitResult(iterResult);\n          }\n          if (res >= dtstart) {\n            var rezonedDate = rezoneIfNeeded(res, options);\n            if (!iterResult.accept(rezonedDate)) {\n              return emitResult(iterResult);\n            }\n            if (count) {\n              --count;\n              if (!count) {\n                return emitResult(iterResult);\n              }\n            }\n          }\n        }\n      }\n    }\n    if (options.interval === 0) {\n      return emitResult(iterResult);\n    }\n    // Handle frequency and interval\n    counterDate.add(options, filtered);\n    if (counterDate.year > MAXYEAR) {\n      return emitResult(iterResult);\n    }\n    if (!freqIsDailyOrGreater(freq)) {\n      timeset = ii.gettimeset(freq)(counterDate.hour, counterDate.minute, counterDate.second, 0);\n    }\n    ii.rebuild(counterDate.year, counterDate.month);\n  }\n}\nfunction isFiltered(ii, currentDay, options) {\n  var bymonth = options.bymonth,\n    byweekno = options.byweekno,\n    byweekday = options.byweekday,\n    byeaster = options.byeaster,\n    bymonthday = options.bymonthday,\n    bynmonthday = options.bynmonthday,\n    byyearday = options.byyearday;\n  return notEmpty(bymonth) && !includes(bymonth, ii.mmask[currentDay]) || notEmpty(byweekno) && !ii.wnomask[currentDay] || notEmpty(byweekday) && !includes(byweekday, ii.wdaymask[currentDay]) || notEmpty(ii.nwdaymask) && !ii.nwdaymask[currentDay] || byeaster !== null && !includes(ii.eastermask, currentDay) || (notEmpty(bymonthday) || notEmpty(bynmonthday)) && !includes(bymonthday, ii.mdaymask[currentDay]) && !includes(bynmonthday, ii.nmdaymask[currentDay]) || notEmpty(byyearday) && (currentDay < ii.yearlen && !includes(byyearday, currentDay + 1) && !includes(byyearday, -ii.yearlen + currentDay) || currentDay >= ii.yearlen && !includes(byyearday, currentDay + 1 - ii.yearlen) && !includes(byyearday, -ii.nextyearlen + currentDay - ii.yearlen));\n}\nfunction rezoneIfNeeded(date, options) {\n  return new DateWithZone(date, options.tzid).rezonedDate();\n}\nfunction emitResult(iterResult) {\n  return iterResult.getValue();\n}\nfunction removeFilteredDays(dayset, start, end, ii, options) {\n  var filtered = false;\n  for (var dayCounter = start; dayCounter < end; dayCounter++) {\n    var currentDay = dayset[dayCounter];\n    filtered = isFiltered(ii, currentDay, options);\n    if (filtered) dayset[currentDay] = null;\n  }\n  return filtered;\n}\nfunction makeTimeset(ii, counterDate, options) {\n  var freq = options.freq,\n    byhour = options.byhour,\n    byminute = options.byminute,\n    bysecond = options.bysecond;\n  if (freqIsDailyOrGreater(freq)) {\n    return buildTimeset(options);\n  }\n  if (freq >= RRule.HOURLY && notEmpty(byhour) && !includes(byhour, counterDate.hour) || freq >= RRule.MINUTELY && notEmpty(byminute) && !includes(byminute, counterDate.minute) || freq >= RRule.SECONDLY && notEmpty(bysecond) && !includes(bysecond, counterDate.second)) {\n    return [];\n  }\n  return ii.gettimeset(freq)(counterDate.hour, counterDate.minute, counterDate.second, counterDate.millisecond);\n}","map":{"version":3,"names":["freqIsDailyOrGreater","combine","fromOrdinal","MAXYEAR","Iterinfo","RRule","buildTimeset","notEmpty","includes","isPresent","DateWithZone","buildPoslist","DateTime","iter","iterResult","options","dtstart","freq","interval","until","bysetpos","count","emitResult","counterDate","fromDate","ii","rebuild","year","month","timeset","makeTimeset","_a","getdayset","day","dayset","start","end","filtered","removeFilteredDays","poslist","j","length","res","rezonedDate","rezoneIfNeeded","accept","currentDay","date","yearordinal","k","time","add","gettimeset","hour","minute","second","isFiltered","bymonth","byweekno","byweekday","byeaster","bymonthday","bynmonthday","byyearday","mmask","wnomask","wdaymask","nwdaymask","eastermask","mdaymask","nmdaymask","yearlen","nextyearlen","tzid","getValue","dayCounter","byhour","byminute","bysecond","HOURLY","MINUTELY","SECONDLY","millisecond"],"sources":["../../../src/iter/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}