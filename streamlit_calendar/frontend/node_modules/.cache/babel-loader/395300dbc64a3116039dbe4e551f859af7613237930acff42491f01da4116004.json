{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Frequency } from './types';\nimport { pymod, divmod, empty, includes } from './helpers';\nimport { getWeekday, MAXYEAR, monthRange } from './dateutil';\nvar Time = /** @class */function () {\n  function Time(hour, minute, second, millisecond) {\n    this.hour = hour;\n    this.minute = minute;\n    this.second = second;\n    this.millisecond = millisecond || 0;\n  }\n  Time.prototype.getHours = function () {\n    return this.hour;\n  };\n  Time.prototype.getMinutes = function () {\n    return this.minute;\n  };\n  Time.prototype.getSeconds = function () {\n    return this.second;\n  };\n  Time.prototype.getMilliseconds = function () {\n    return this.millisecond;\n  };\n  Time.prototype.getTime = function () {\n    return (this.hour * 60 * 60 + this.minute * 60 + this.second) * 1000 + this.millisecond;\n  };\n  return Time;\n}();\nexport { Time };\nvar DateTime = /** @class */function (_super) {\n  __extends(DateTime, _super);\n  function DateTime(year, month, day, hour, minute, second, millisecond) {\n    var _this = _super.call(this, hour, minute, second, millisecond) || this;\n    _this.year = year;\n    _this.month = month;\n    _this.day = day;\n    return _this;\n  }\n  DateTime.fromDate = function (date) {\n    return new this(date.getUTCFullYear(), date.getUTCMonth() + 1, date.getUTCDate(), date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.valueOf() % 1000);\n  };\n  DateTime.prototype.getWeekday = function () {\n    return getWeekday(new Date(this.getTime()));\n  };\n  DateTime.prototype.getTime = function () {\n    return new Date(Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second, this.millisecond)).getTime();\n  };\n  DateTime.prototype.getDay = function () {\n    return this.day;\n  };\n  DateTime.prototype.getMonth = function () {\n    return this.month;\n  };\n  DateTime.prototype.getYear = function () {\n    return this.year;\n  };\n  DateTime.prototype.addYears = function (years) {\n    this.year += years;\n  };\n  DateTime.prototype.addMonths = function (months) {\n    this.month += months;\n    if (this.month > 12) {\n      var yearDiv = Math.floor(this.month / 12);\n      var monthMod = pymod(this.month, 12);\n      this.month = monthMod;\n      this.year += yearDiv;\n      if (this.month === 0) {\n        this.month = 12;\n        --this.year;\n      }\n    }\n  };\n  DateTime.prototype.addWeekly = function (days, wkst) {\n    if (wkst > this.getWeekday()) {\n      this.day += -(this.getWeekday() + 1 + (6 - wkst)) + days * 7;\n    } else {\n      this.day += -(this.getWeekday() - wkst) + days * 7;\n    }\n    this.fixDay();\n  };\n  DateTime.prototype.addDaily = function (days) {\n    this.day += days;\n    this.fixDay();\n  };\n  DateTime.prototype.addHours = function (hours, filtered, byhour) {\n    if (filtered) {\n      // Jump to one iteration before next day\n      this.hour += Math.floor((23 - this.hour) / hours) * hours;\n    }\n    for (;;) {\n      this.hour += hours;\n      var _a = divmod(this.hour, 24),\n        dayDiv = _a.div,\n        hourMod = _a.mod;\n      if (dayDiv) {\n        this.hour = hourMod;\n        this.addDaily(dayDiv);\n      }\n      if (empty(byhour) || includes(byhour, this.hour)) break;\n    }\n  };\n  DateTime.prototype.addMinutes = function (minutes, filtered, byhour, byminute) {\n    if (filtered) {\n      // Jump to one iteration before next day\n      this.minute += Math.floor((1439 - (this.hour * 60 + this.minute)) / minutes) * minutes;\n    }\n    for (;;) {\n      this.minute += minutes;\n      var _a = divmod(this.minute, 60),\n        hourDiv = _a.div,\n        minuteMod = _a.mod;\n      if (hourDiv) {\n        this.minute = minuteMod;\n        this.addHours(hourDiv, false, byhour);\n      }\n      if ((empty(byhour) || includes(byhour, this.hour)) && (empty(byminute) || includes(byminute, this.minute))) {\n        break;\n      }\n    }\n  };\n  DateTime.prototype.addSeconds = function (seconds, filtered, byhour, byminute, bysecond) {\n    if (filtered) {\n      // Jump to one iteration before next day\n      this.second += Math.floor((86399 - (this.hour * 3600 + this.minute * 60 + this.second)) / seconds) * seconds;\n    }\n    for (;;) {\n      this.second += seconds;\n      var _a = divmod(this.second, 60),\n        minuteDiv = _a.div,\n        secondMod = _a.mod;\n      if (minuteDiv) {\n        this.second = secondMod;\n        this.addMinutes(minuteDiv, false, byhour, byminute);\n      }\n      if ((empty(byhour) || includes(byhour, this.hour)) && (empty(byminute) || includes(byminute, this.minute)) && (empty(bysecond) || includes(bysecond, this.second))) {\n        break;\n      }\n    }\n  };\n  DateTime.prototype.fixDay = function () {\n    if (this.day <= 28) {\n      return;\n    }\n    var daysinmonth = monthRange(this.year, this.month - 1)[1];\n    if (this.day <= daysinmonth) {\n      return;\n    }\n    while (this.day > daysinmonth) {\n      this.day -= daysinmonth;\n      ++this.month;\n      if (this.month === 13) {\n        this.month = 1;\n        ++this.year;\n        if (this.year > MAXYEAR) {\n          return;\n        }\n      }\n      daysinmonth = monthRange(this.year, this.month - 1)[1];\n    }\n  };\n  DateTime.prototype.add = function (options, filtered) {\n    var freq = options.freq,\n      interval = options.interval,\n      wkst = options.wkst,\n      byhour = options.byhour,\n      byminute = options.byminute,\n      bysecond = options.bysecond;\n    switch (freq) {\n      case Frequency.YEARLY:\n        return this.addYears(interval);\n      case Frequency.MONTHLY:\n        return this.addMonths(interval);\n      case Frequency.WEEKLY:\n        return this.addWeekly(interval, wkst);\n      case Frequency.DAILY:\n        return this.addDaily(interval);\n      case Frequency.HOURLY:\n        return this.addHours(interval, filtered, byhour);\n      case Frequency.MINUTELY:\n        return this.addMinutes(interval, filtered, byhour, byminute);\n      case Frequency.SECONDLY:\n        return this.addSeconds(interval, filtered, byhour, byminute, bysecond);\n    }\n  };\n  return DateTime;\n}(Time);\nexport { DateTime };","map":{"version":3,"names":["Frequency","pymod","divmod","empty","includes","getWeekday","MAXYEAR","monthRange","Time","hour","minute","second","millisecond","prototype","getHours","getMinutes","getSeconds","getMilliseconds","getTime","DateTime","_super","__extends","year","month","day","_this","call","fromDate","date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","valueOf","Date","UTC","getDay","getMonth","getYear","addYears","years","addMonths","months","yearDiv","Math","floor","monthMod","addWeekly","days","wkst","fixDay","addDaily","addHours","hours","filtered","byhour","_a","dayDiv","div","hourMod","mod","addMinutes","minutes","byminute","hourDiv","minuteMod","addSeconds","seconds","bysecond","minuteDiv","secondMod","daysinmonth","add","options","freq","interval","YEARLY","MONTHLY","WEEKLY","DAILY","HOURLY","MINUTELY","SECONDLY"],"sources":["../../src/datetime.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}