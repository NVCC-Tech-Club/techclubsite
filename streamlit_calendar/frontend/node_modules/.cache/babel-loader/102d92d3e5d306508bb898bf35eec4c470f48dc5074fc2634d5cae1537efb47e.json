{"ast":null,"code":"import _assertThisInitialized from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _toConsumableArray from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Splitter, hasBgRendering, createFormatter, ViewContextType, ContentContainer, BaseComponent, DateComponent, diffDays, buildNavLinkAttrs, WeekNumberContainer, getStickyHeaderDates, ViewContainer, SimpleScrollGrid, getStickyFooterScrollbar, NowTimer, NowIndicatorContainer, renderScrollShim, rangeContainsMarker, startOfDay, asRoughMs, createDuration, RefMap, PositionCache, MoreLinkContainer, SegHierarchy, groupIntersectingEntries, binarySearch, getEntrySpanEnd, buildEntryKey, StandardEvent, memoize, sortEventSegs, DayCellContainer, hasCustomDayCellContent, getSegMeta, buildIsoString, computeEarliestSegStart, buildEventRangeKey, BgEvent, renderFill, addDurations, multiplyDuration, wholeDivideDurations, Slicer, intersectRanges, formatIsoTimeString, DayHeader, DaySeriesModel, DayTableModel, injectStyles } from '@fullcalendar/core/internal.js';\nimport { createElement, createRef, Fragment } from '@fullcalendar/core/preact.js';\nimport { DayTable } from '@fullcalendar/daygrid/internal.js';\nvar AllDaySplitter = /*#__PURE__*/function (_Splitter) {\n  _inherits(AllDaySplitter, _Splitter);\n  var _super = _createSuper(AllDaySplitter);\n  function AllDaySplitter() {\n    _classCallCheck(this, AllDaySplitter);\n    return _super.apply(this, arguments);\n  }\n  _createClass(AllDaySplitter, [{\n    key: \"getKeyInfo\",\n    value: function getKeyInfo() {\n      return {\n        allDay: {},\n        timed: {}\n      };\n    }\n  }, {\n    key: \"getKeysForDateSpan\",\n    value: function getKeysForDateSpan(dateSpan) {\n      if (dateSpan.allDay) {\n        return ['allDay'];\n      }\n      return ['timed'];\n    }\n  }, {\n    key: \"getKeysForEventDef\",\n    value: function getKeysForEventDef(eventDef) {\n      if (!eventDef.allDay) {\n        return ['timed'];\n      }\n      if (hasBgRendering(eventDef)) {\n        return ['timed', 'allDay'];\n      }\n      return ['allDay'];\n    }\n  }]);\n  return AllDaySplitter;\n}(Splitter);\nvar DEFAULT_SLAT_LABEL_FORMAT = createFormatter({\n  hour: 'numeric',\n  minute: '2-digit',\n  omitZeroMinute: true,\n  meridiem: 'short'\n});\nfunction TimeColsAxisCell(props) {\n  var classNames = ['fc-timegrid-slot', 'fc-timegrid-slot-label', props.isLabeled ? 'fc-scrollgrid-shrink' : 'fc-timegrid-slot-minor'];\n  return createElement(ViewContextType.Consumer, null, function (context) {\n    if (!props.isLabeled) {\n      return createElement(\"td\", {\n        className: classNames.join(' '),\n        \"data-time\": props.isoTimeStr\n      });\n    }\n    var dateEnv = context.dateEnv,\n      options = context.options,\n      viewApi = context.viewApi;\n    var labelFormat =\n    // TODO: fully pre-parse\n    options.slotLabelFormat == null ? DEFAULT_SLAT_LABEL_FORMAT : Array.isArray(options.slotLabelFormat) ? createFormatter(options.slotLabelFormat[0]) : createFormatter(options.slotLabelFormat);\n    var renderProps = {\n      level: 0,\n      time: props.time,\n      date: dateEnv.toDate(props.date),\n      view: viewApi,\n      text: dateEnv.format(props.date, labelFormat)\n    };\n    return createElement(ContentContainer, {\n      elTag: \"td\",\n      elClasses: classNames,\n      elAttrs: {\n        'data-time': props.isoTimeStr\n      },\n      renderProps: renderProps,\n      generatorName: \"slotLabelContent\",\n      customGenerator: options.slotLabelContent,\n      defaultGenerator: renderInnerContent,\n      classNameGenerator: options.slotLabelClassNames,\n      didMount: options.slotLabelDidMount,\n      willUnmount: options.slotLabelWillUnmount\n    }, function (InnerContent) {\n      return createElement(\"div\", {\n        className: \"fc-timegrid-slot-label-frame fc-scrollgrid-shrink-frame\"\n      }, createElement(InnerContent, {\n        elTag: \"div\",\n        elClasses: ['fc-timegrid-slot-label-cushion', 'fc-scrollgrid-shrink-cushion']\n      }));\n    });\n  });\n}\nfunction renderInnerContent(props) {\n  return props.text;\n}\nvar TimeBodyAxis = /*#__PURE__*/function (_BaseComponent) {\n  _inherits(TimeBodyAxis, _BaseComponent);\n  var _super2 = _createSuper(TimeBodyAxis);\n  function TimeBodyAxis() {\n    _classCallCheck(this, TimeBodyAxis);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(TimeBodyAxis, [{\n    key: \"render\",\n    value: function render() {\n      return this.props.slatMetas.map(function (slatMeta) {\n        return createElement(\"tr\", {\n          key: slatMeta.key\n        }, createElement(TimeColsAxisCell, Object.assign({}, slatMeta)));\n      });\n    }\n  }]);\n  return TimeBodyAxis;\n}(BaseComponent);\nvar DEFAULT_WEEK_NUM_FORMAT = createFormatter({\n  week: 'short'\n});\nvar AUTO_ALL_DAY_MAX_EVENT_ROWS = 5;\nvar TimeColsView = /*#__PURE__*/function (_DateComponent) {\n  _inherits(TimeColsView, _DateComponent);\n  var _super3 = _createSuper(TimeColsView);\n  function TimeColsView() {\n    var _this;\n    _classCallCheck(this, TimeColsView);\n    _this = _super3.apply(this, arguments);\n    _this.allDaySplitter = new AllDaySplitter(); // for use by subclasses\n    _this.headerElRef = createRef();\n    _this.rootElRef = createRef();\n    _this.scrollerElRef = createRef();\n    _this.state = {\n      slatCoords: null\n    };\n    _this.handleScrollTopRequest = function (scrollTop) {\n      var scrollerEl = _this.scrollerElRef.current;\n      if (scrollerEl) {\n        // TODO: not sure how this could ever be null. weirdness with the reducer\n        scrollerEl.scrollTop = scrollTop;\n      }\n    };\n    /* Header Render Methods\n    ------------------------------------------------------------------------------------------------------------------*/\n    _this.renderHeadAxis = function (rowKey) {\n      var frameHeight = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n      var options = _this.context.options;\n      var dateProfile = _this.props.dateProfile;\n      var range = dateProfile.renderRange;\n      var dayCnt = diffDays(range.start, range.end);\n      // only do in day views (to avoid doing in week views that dont need it)\n      var navLinkAttrs = dayCnt === 1 ? buildNavLinkAttrs(_this.context, range.start, 'week') : {};\n      if (options.weekNumbers && rowKey === 'day') {\n        return createElement(WeekNumberContainer, {\n          elTag: \"th\",\n          elClasses: ['fc-timegrid-axis', 'fc-scrollgrid-shrink'],\n          elAttrs: {\n            'aria-hidden': true\n          },\n          date: range.start,\n          defaultFormat: DEFAULT_WEEK_NUM_FORMAT\n        }, function (InnerContent) {\n          return createElement(\"div\", {\n            className: ['fc-timegrid-axis-frame', 'fc-scrollgrid-shrink-frame', 'fc-timegrid-axis-frame-liquid'].join(' '),\n            style: {\n              height: frameHeight\n            }\n          }, createElement(InnerContent, {\n            elTag: \"a\",\n            elClasses: ['fc-timegrid-axis-cushion', 'fc-scrollgrid-shrink-cushion', 'fc-scrollgrid-sync-inner'],\n            elAttrs: navLinkAttrs\n          }));\n        });\n      }\n      return createElement(\"th\", {\n        \"aria-hidden\": true,\n        className: \"fc-timegrid-axis\"\n      }, createElement(\"div\", {\n        className: \"fc-timegrid-axis-frame\",\n        style: {\n          height: frameHeight\n        }\n      }));\n    };\n    /* Table Component Render Methods\n    ------------------------------------------------------------------------------------------------------------------*/\n    // only a one-way height sync. we don't send the axis inner-content height to the DayGrid,\n    // but DayGrid still needs to have classNames on inner elements in order to measure.\n    _this.renderTableRowAxis = function (rowHeight) {\n      var _this$context = _this.context,\n        options = _this$context.options,\n        viewApi = _this$context.viewApi;\n      var renderProps = {\n        text: options.allDayText,\n        view: viewApi\n      };\n      return (\n        // TODO: make reusable hook. used in list view too\n        createElement(ContentContainer, {\n          elTag: \"td\",\n          elClasses: ['fc-timegrid-axis', 'fc-scrollgrid-shrink'],\n          elAttrs: {\n            'aria-hidden': true\n          },\n          renderProps: renderProps,\n          generatorName: \"allDayContent\",\n          customGenerator: options.allDayContent,\n          defaultGenerator: renderAllDayInner,\n          classNameGenerator: options.allDayClassNames,\n          didMount: options.allDayDidMount,\n          willUnmount: options.allDayWillUnmount\n        }, function (InnerContent) {\n          return createElement(\"div\", {\n            className: ['fc-timegrid-axis-frame', 'fc-scrollgrid-shrink-frame', rowHeight == null ? ' fc-timegrid-axis-frame-liquid' : ''].join(' '),\n            style: {\n              height: rowHeight\n            }\n          }, createElement(InnerContent, {\n            elTag: \"span\",\n            elClasses: ['fc-timegrid-axis-cushion', 'fc-scrollgrid-shrink-cushion', 'fc-scrollgrid-sync-inner']\n          }));\n        })\n      );\n    };\n    _this.handleSlatCoords = function (slatCoords) {\n      _this.setState({\n        slatCoords: slatCoords\n      });\n    };\n    return _this;\n  }\n  // rendering\n  // ----------------------------------------------------------------------------------------------------\n  _createClass(TimeColsView, [{\n    key: \"renderSimpleLayout\",\n    value: function renderSimpleLayout(headerRowContent, allDayContent, timeContent) {\n      var context = this.context,\n        props = this.props;\n      var sections = [];\n      var stickyHeaderDates = getStickyHeaderDates(context.options);\n      if (headerRowContent) {\n        sections.push({\n          type: 'header',\n          key: 'header',\n          isSticky: stickyHeaderDates,\n          chunk: {\n            elRef: this.headerElRef,\n            tableClassName: 'fc-col-header',\n            rowContent: headerRowContent\n          }\n        });\n      }\n      if (allDayContent) {\n        sections.push({\n          type: 'body',\n          key: 'all-day',\n          chunk: {\n            content: allDayContent\n          }\n        });\n        sections.push({\n          type: 'body',\n          key: 'all-day-divider',\n          outerContent:\n          // TODO: rename to cellContent so don't need to define <tr>?\n          createElement(\"tr\", {\n            role: \"presentation\",\n            className: \"fc-scrollgrid-section\"\n          }, createElement(\"td\", {\n            className: 'fc-timegrid-divider ' + context.theme.getClass('tableCellShaded')\n          }))\n        });\n      }\n      sections.push({\n        type: 'body',\n        key: 'body',\n        liquid: true,\n        expandRows: Boolean(context.options.expandRows),\n        chunk: {\n          scrollerElRef: this.scrollerElRef,\n          content: timeContent\n        }\n      });\n      return createElement(ViewContainer, {\n        elRef: this.rootElRef,\n        elClasses: ['fc-timegrid'],\n        viewSpec: context.viewSpec\n      }, createElement(SimpleScrollGrid, {\n        liquid: !props.isHeightAuto && !props.forPrint,\n        collapsibleWidth: props.forPrint,\n        cols: [{\n          width: 'shrink'\n        }],\n        sections: sections\n      }));\n    }\n  }, {\n    key: \"renderHScrollLayout\",\n    value: function renderHScrollLayout(headerRowContent, allDayContent, timeContent, colCnt, dayMinWidth, slatMetas, slatCoords) {\n      var _this2 = this;\n      var ScrollGrid = this.context.pluginHooks.scrollGridImpl;\n      if (!ScrollGrid) {\n        throw new Error('No ScrollGrid implementation');\n      }\n      var context = this.context,\n        props = this.props;\n      var stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options);\n      var stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options);\n      var sections = [];\n      if (headerRowContent) {\n        sections.push({\n          type: 'header',\n          key: 'header',\n          isSticky: stickyHeaderDates,\n          syncRowHeights: true,\n          chunks: [{\n            key: 'axis',\n            rowContent: function rowContent(arg) {\n              return createElement(\"tr\", {\n                role: \"presentation\"\n              }, _this2.renderHeadAxis('day', arg.rowSyncHeights[0]));\n            }\n          }, {\n            key: 'cols',\n            elRef: this.headerElRef,\n            tableClassName: 'fc-col-header',\n            rowContent: headerRowContent\n          }]\n        });\n      }\n      if (allDayContent) {\n        sections.push({\n          type: 'body',\n          key: 'all-day',\n          syncRowHeights: true,\n          chunks: [{\n            key: 'axis',\n            rowContent: function rowContent(contentArg) {\n              return createElement(\"tr\", {\n                role: \"presentation\"\n              }, _this2.renderTableRowAxis(contentArg.rowSyncHeights[0]));\n            }\n          }, {\n            key: 'cols',\n            content: allDayContent\n          }]\n        });\n        sections.push({\n          key: 'all-day-divider',\n          type: 'body',\n          outerContent:\n          // TODO: rename to cellContent so don't need to define <tr>?\n          createElement(\"tr\", {\n            role: \"presentation\",\n            className: \"fc-scrollgrid-section\"\n          }, createElement(\"td\", {\n            colSpan: 2,\n            className: 'fc-timegrid-divider ' + context.theme.getClass('tableCellShaded')\n          }))\n        });\n      }\n      var isNowIndicator = context.options.nowIndicator;\n      sections.push({\n        type: 'body',\n        key: 'body',\n        liquid: true,\n        expandRows: Boolean(context.options.expandRows),\n        chunks: [{\n          key: 'axis',\n          content: function content(arg) {\n            return (\n              // TODO: make this now-indicator arrow more DRY with TimeColsContent\n              createElement(\"div\", {\n                className: \"fc-timegrid-axis-chunk\"\n              }, createElement(\"table\", {\n                \"aria-hidden\": true,\n                style: {\n                  height: arg.expandRows ? arg.clientHeight : ''\n                }\n              }, arg.tableColGroupNode, createElement(\"tbody\", null, createElement(TimeBodyAxis, {\n                slatMetas: slatMetas\n              }))), createElement(\"div\", {\n                className: \"fc-timegrid-now-indicator-container\"\n              }, createElement(NowTimer, {\n                unit: isNowIndicator ? 'minute' : 'day' /* hacky */\n              }, function (nowDate) {\n                var nowIndicatorTop = isNowIndicator && slatCoords && slatCoords.safeComputeTop(nowDate); // might return void\n                if (typeof nowIndicatorTop === 'number') {\n                  return createElement(NowIndicatorContainer, {\n                    elClasses: ['fc-timegrid-now-indicator-arrow'],\n                    elStyle: {\n                      top: nowIndicatorTop\n                    },\n                    isAxis: true,\n                    date: nowDate\n                  });\n                }\n                return null;\n              })))\n            );\n          }\n        }, {\n          key: 'cols',\n          scrollerElRef: this.scrollerElRef,\n          content: timeContent\n        }]\n      });\n      if (stickyFooterScrollbar) {\n        sections.push({\n          key: 'footer',\n          type: 'footer',\n          isSticky: true,\n          chunks: [{\n            key: 'axis',\n            content: renderScrollShim\n          }, {\n            key: 'cols',\n            content: renderScrollShim\n          }]\n        });\n      }\n      return createElement(ViewContainer, {\n        elRef: this.rootElRef,\n        elClasses: ['fc-timegrid'],\n        viewSpec: context.viewSpec\n      }, createElement(ScrollGrid, {\n        liquid: !props.isHeightAuto && !props.forPrint,\n        forPrint: props.forPrint,\n        collapsibleWidth: false,\n        colGroups: [{\n          width: 'shrink',\n          cols: [{\n            width: 'shrink'\n          }]\n        }, {\n          cols: [{\n            span: colCnt,\n            minWidth: dayMinWidth\n          }]\n        }],\n        sections: sections\n      }));\n    }\n    /* Dimensions\n    ------------------------------------------------------------------------------------------------------------------*/\n  }, {\n    key: \"getAllDayMaxEventProps\",\n    value: function getAllDayMaxEventProps() {\n      var _this$context$options = this.context.options,\n        dayMaxEvents = _this$context$options.dayMaxEvents,\n        dayMaxEventRows = _this$context$options.dayMaxEventRows;\n      if (dayMaxEvents === true || dayMaxEventRows === true) {\n        // is auto?\n        dayMaxEvents = undefined;\n        dayMaxEventRows = AUTO_ALL_DAY_MAX_EVENT_ROWS; // make sure \"auto\" goes to a real number\n      }\n\n      return {\n        dayMaxEvents: dayMaxEvents,\n        dayMaxEventRows: dayMaxEventRows\n      };\n    }\n  }]);\n  return TimeColsView;\n}(DateComponent);\nfunction renderAllDayInner(renderProps) {\n  return renderProps.text;\n}\nvar TimeColsSlatsCoords = /*#__PURE__*/function () {\n  function TimeColsSlatsCoords(positions, dateProfile, slotDuration) {\n    _classCallCheck(this, TimeColsSlatsCoords);\n    this.positions = positions;\n    this.dateProfile = dateProfile;\n    this.slotDuration = slotDuration;\n  }\n  _createClass(TimeColsSlatsCoords, [{\n    key: \"safeComputeTop\",\n    value: function safeComputeTop(date) {\n      var dateProfile = this.dateProfile;\n      if (rangeContainsMarker(dateProfile.currentRange, date)) {\n        var startOfDayDate = startOfDay(date);\n        var timeMs = date.valueOf() - startOfDayDate.valueOf();\n        if (timeMs >= asRoughMs(dateProfile.slotMinTime) && timeMs < asRoughMs(dateProfile.slotMaxTime)) {\n          return this.computeTimeTop(createDuration(timeMs));\n        }\n      }\n      return null;\n    }\n    // Computes the top coordinate, relative to the bounds of the grid, of the given date.\n    // A `startOfDayDate` must be given for avoiding ambiguity over how to treat midnight.\n  }, {\n    key: \"computeDateTop\",\n    value: function computeDateTop(when, startOfDayDate) {\n      if (!startOfDayDate) {\n        startOfDayDate = startOfDay(when);\n      }\n      return this.computeTimeTop(createDuration(when.valueOf() - startOfDayDate.valueOf()));\n    }\n    // Computes the top coordinate, relative to the bounds of the grid, of the given time (a Duration).\n    // This is a makeshify way to compute the time-top. Assumes all slatMetas dates are uniform.\n    // Eventually allow computation with arbirary slat dates.\n  }, {\n    key: \"computeTimeTop\",\n    value: function computeTimeTop(duration) {\n      var positions = this.positions,\n        dateProfile = this.dateProfile;\n      var len = positions.els.length;\n      // floating-point value of # of slots covered\n      var slatCoverage = (duration.milliseconds - asRoughMs(dateProfile.slotMinTime)) / asRoughMs(this.slotDuration);\n      var slatIndex;\n      var slatRemainder;\n      // compute a floating-point number for how many slats should be progressed through.\n      // from 0 to number of slats (inclusive)\n      // constrained because slotMinTime/slotMaxTime might be customized.\n      slatCoverage = Math.max(0, slatCoverage);\n      slatCoverage = Math.min(len, slatCoverage);\n      // an integer index of the furthest whole slat\n      // from 0 to number slats (*exclusive*, so len-1)\n      slatIndex = Math.floor(slatCoverage);\n      slatIndex = Math.min(slatIndex, len - 1);\n      // how much further through the slatIndex slat (from 0.0-1.0) must be covered in addition.\n      // could be 1.0 if slatCoverage is covering *all* the slots\n      slatRemainder = slatCoverage - slatIndex;\n      return positions.tops[slatIndex] + positions.getHeight(slatIndex) * slatRemainder;\n    }\n  }]);\n  return TimeColsSlatsCoords;\n}();\nvar TimeColsSlatsBody = /*#__PURE__*/function (_BaseComponent2) {\n  _inherits(TimeColsSlatsBody, _BaseComponent2);\n  var _super4 = _createSuper(TimeColsSlatsBody);\n  function TimeColsSlatsBody() {\n    _classCallCheck(this, TimeColsSlatsBody);\n    return _super4.apply(this, arguments);\n  }\n  _createClass(TimeColsSlatsBody, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props,\n        context = this.context;\n      var options = context.options;\n      var slatElRefs = props.slatElRefs;\n      return createElement(\"tbody\", null, props.slatMetas.map(function (slatMeta, i) {\n        var renderProps = {\n          time: slatMeta.time,\n          date: context.dateEnv.toDate(slatMeta.date),\n          view: context.viewApi\n        };\n        return createElement(\"tr\", {\n          key: slatMeta.key,\n          ref: slatElRefs.createRef(slatMeta.key)\n        }, props.axis && createElement(TimeColsAxisCell, Object.assign({}, slatMeta)), createElement(ContentContainer, {\n          elTag: \"td\",\n          elClasses: ['fc-timegrid-slot', 'fc-timegrid-slot-lane', !slatMeta.isLabeled && 'fc-timegrid-slot-minor'],\n          elAttrs: {\n            'data-time': slatMeta.isoTimeStr\n          },\n          renderProps: renderProps,\n          generatorName: \"slotLaneContent\",\n          customGenerator: options.slotLaneContent,\n          classNameGenerator: options.slotLaneClassNames,\n          didMount: options.slotLaneDidMount,\n          willUnmount: options.slotLaneWillUnmount\n        }));\n      }));\n    }\n  }]);\n  return TimeColsSlatsBody;\n}(BaseComponent);\n/*\nfor the horizontal \"slats\" that run width-wise. Has a time axis on a side. Depends on RTL.\n*/\nvar TimeColsSlats = /*#__PURE__*/function (_BaseComponent3) {\n  _inherits(TimeColsSlats, _BaseComponent3);\n  var _super5 = _createSuper(TimeColsSlats);\n  function TimeColsSlats() {\n    var _this3;\n    _classCallCheck(this, TimeColsSlats);\n    _this3 = _super5.apply(this, arguments);\n    _this3.rootElRef = createRef();\n    _this3.slatElRefs = new RefMap();\n    return _this3;\n  }\n  _createClass(TimeColsSlats, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props,\n        context = this.context;\n      return createElement(\"div\", {\n        ref: this.rootElRef,\n        className: \"fc-timegrid-slots\"\n      }, createElement(\"table\", {\n        \"aria-hidden\": true,\n        className: context.theme.getClass('table'),\n        style: {\n          minWidth: props.tableMinWidth,\n          width: props.clientWidth,\n          height: props.minHeight\n        }\n      }, props.tableColGroupNode /* relies on there only being a single <col> for the axis */, createElement(TimeColsSlatsBody, {\n        slatElRefs: this.slatElRefs,\n        axis: props.axis,\n        slatMetas: props.slatMetas\n      })));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateSizing();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.updateSizing();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.props.onCoords) {\n        this.props.onCoords(null);\n      }\n    }\n  }, {\n    key: \"updateSizing\",\n    value: function updateSizing() {\n      var context = this.context,\n        props = this.props;\n      if (props.onCoords && props.clientWidth !== null // means sizing has stabilized\n      ) {\n        var rootEl = this.rootElRef.current;\n        if (rootEl.offsetHeight) {\n          // not hidden by css\n          props.onCoords(new TimeColsSlatsCoords(new PositionCache(this.rootElRef.current, collectSlatEls(this.slatElRefs.currentMap, props.slatMetas), false, true), this.props.dateProfile, context.options.slotDuration));\n        }\n      }\n    }\n  }]);\n  return TimeColsSlats;\n}(BaseComponent);\nfunction collectSlatEls(elMap, slatMetas) {\n  return slatMetas.map(function (slatMeta) {\n    return elMap[slatMeta.key];\n  });\n}\nfunction splitSegsByCol(segs, colCnt) {\n  var segsByCol = [];\n  var i;\n  for (i = 0; i < colCnt; i += 1) {\n    segsByCol.push([]);\n  }\n  if (segs) {\n    for (i = 0; i < segs.length; i += 1) {\n      segsByCol[segs[i].col].push(segs[i]);\n    }\n  }\n  return segsByCol;\n}\nfunction splitInteractionByCol(ui, colCnt) {\n  var byRow = [];\n  if (!ui) {\n    for (var i = 0; i < colCnt; i += 1) {\n      byRow[i] = null;\n    }\n  } else {\n    for (var _i = 0; _i < colCnt; _i += 1) {\n      byRow[_i] = {\n        affectedInstances: ui.affectedInstances,\n        isEvent: ui.isEvent,\n        segs: []\n      };\n    }\n    var _iterator = _createForOfIteratorHelper(ui.segs),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var seg = _step.value;\n        byRow[seg.col].segs.push(seg);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  return byRow;\n}\nvar TimeColMoreLink = /*#__PURE__*/function (_BaseComponent4) {\n  _inherits(TimeColMoreLink, _BaseComponent4);\n  var _super6 = _createSuper(TimeColMoreLink);\n  function TimeColMoreLink() {\n    _classCallCheck(this, TimeColMoreLink);\n    return _super6.apply(this, arguments);\n  }\n  _createClass(TimeColMoreLink, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      return createElement(MoreLinkContainer, {\n        elClasses: ['fc-timegrid-more-link'],\n        elStyle: {\n          top: props.top,\n          bottom: props.bottom\n        },\n        allDayDate: null,\n        moreCnt: props.hiddenSegs.length,\n        allSegs: props.hiddenSegs,\n        hiddenSegs: props.hiddenSegs,\n        extraDateSpan: props.extraDateSpan,\n        dateProfile: props.dateProfile,\n        todayRange: props.todayRange,\n        popoverContent: function popoverContent() {\n          return renderPlainFgSegs(props.hiddenSegs, props);\n        },\n        defaultGenerator: renderMoreLinkInner,\n        forceTimed: true\n      }, function (InnerContent) {\n        return createElement(InnerContent, {\n          elTag: \"div\",\n          elClasses: ['fc-timegrid-more-link-inner', 'fc-sticky']\n        });\n      });\n    }\n  }]);\n  return TimeColMoreLink;\n}(BaseComponent);\nfunction renderMoreLinkInner(props) {\n  return props.shortText;\n}\n\n// segInputs assumed sorted\nfunction buildPositioning(segInputs, strictOrder, maxStackCnt) {\n  var hierarchy = new SegHierarchy();\n  if (strictOrder != null) {\n    hierarchy.strictOrder = strictOrder;\n  }\n  if (maxStackCnt != null) {\n    hierarchy.maxStackCnt = maxStackCnt;\n  }\n  var hiddenEntries = hierarchy.addSegs(segInputs);\n  var hiddenGroups = groupIntersectingEntries(hiddenEntries);\n  var web = buildWeb(hierarchy);\n  web = stretchWeb(web, 1); // all levelCoords/thickness will have 0.0-1.0\n  var segRects = webToRects(web);\n  return {\n    segRects: segRects,\n    hiddenGroups: hiddenGroups\n  };\n}\nfunction buildWeb(hierarchy) {\n  var entriesByLevel = hierarchy.entriesByLevel;\n  var buildNode = cacheable(function (level, lateral) {\n    return level + ':' + lateral;\n  }, function (level, lateral) {\n    var siblingRange = findNextLevelSegs(hierarchy, level, lateral);\n    var nextLevelRes = buildNodes(siblingRange, buildNode);\n    var entry = entriesByLevel[level][lateral];\n    return [Object.assign(Object.assign({}, entry), {\n      nextLevelNodes: nextLevelRes[0]\n    }), entry.thickness + nextLevelRes[1] // the pressure builds\n    ];\n  });\n\n  return buildNodes(entriesByLevel.length ? {\n    level: 0,\n    lateralStart: 0,\n    lateralEnd: entriesByLevel[0].length\n  } : null, buildNode)[0];\n}\nfunction buildNodes(siblingRange, buildNode) {\n  if (!siblingRange) {\n    return [[], 0];\n  }\n  var level = siblingRange.level,\n    lateralStart = siblingRange.lateralStart,\n    lateralEnd = siblingRange.lateralEnd;\n  var lateral = lateralStart;\n  var pairs = [];\n  while (lateral < lateralEnd) {\n    pairs.push(buildNode(level, lateral));\n    lateral += 1;\n  }\n  pairs.sort(cmpDescPressures);\n  return [pairs.map(extractNode), pairs[0][1] // first item's pressure\n  ];\n}\n\nfunction cmpDescPressures(a, b) {\n  return b[1] - a[1];\n}\nfunction extractNode(a) {\n  return a[0];\n}\nfunction findNextLevelSegs(hierarchy, subjectLevel, subjectLateral) {\n  var levelCoords = hierarchy.levelCoords,\n    entriesByLevel = hierarchy.entriesByLevel;\n  var subjectEntry = entriesByLevel[subjectLevel][subjectLateral];\n  var afterSubject = levelCoords[subjectLevel] + subjectEntry.thickness;\n  var levelCnt = levelCoords.length;\n  var level = subjectLevel;\n  // skip past levels that are too high up\n  for (; level < levelCnt && levelCoords[level] < afterSubject; level += 1); // do nothing\n  for (; level < levelCnt; level += 1) {\n    var entries = entriesByLevel[level];\n    var entry = void 0;\n    var searchIndex = binarySearch(entries, subjectEntry.span.start, getEntrySpanEnd);\n    var lateralStart = searchIndex[0] + searchIndex[1]; // if exact match (which doesn't collide), go to next one\n    var lateralEnd = lateralStart;\n    while (\n    // loop through entries that horizontally intersect\n    (entry = entries[lateralEnd]) &&\n    // but not past the whole seg list\n    entry.span.start < subjectEntry.span.end) {\n      lateralEnd += 1;\n    }\n    if (lateralStart < lateralEnd) {\n      return {\n        level: level,\n        lateralStart: lateralStart,\n        lateralEnd: lateralEnd\n      };\n    }\n  }\n  return null;\n}\nfunction stretchWeb(topLevelNodes, totalThickness) {\n  var stretchNode = cacheable(function (node, startCoord, prevThickness) {\n    return buildEntryKey(node);\n  }, function (node, startCoord, prevThickness) {\n    var nextLevelNodes = node.nextLevelNodes,\n      thickness = node.thickness;\n    var allThickness = thickness + prevThickness;\n    var thicknessFraction = thickness / allThickness;\n    var endCoord;\n    var newChildren = [];\n    if (!nextLevelNodes.length) {\n      endCoord = totalThickness;\n    } else {\n      var _iterator2 = _createForOfIteratorHelper(nextLevelNodes),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var childNode = _step2.value;\n          if (endCoord === undefined) {\n            var res = stretchNode(childNode, startCoord, allThickness);\n            endCoord = res[0];\n            newChildren.push(res[1]);\n          } else {\n            var _res = stretchNode(childNode, endCoord, 0);\n            newChildren.push(_res[1]);\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n    var newThickness = (endCoord - startCoord) * thicknessFraction;\n    return [endCoord - newThickness, Object.assign(Object.assign({}, node), {\n      thickness: newThickness,\n      nextLevelNodes: newChildren\n    })];\n  });\n  return topLevelNodes.map(function (node) {\n    return stretchNode(node, 0, 0)[1];\n  });\n}\n// not sorted in any particular order\nfunction webToRects(topLevelNodes) {\n  var rects = [];\n  var processNode = cacheable(function (node, levelCoord, stackDepth) {\n    return buildEntryKey(node);\n  }, function (node, levelCoord, stackDepth) {\n    var rect = Object.assign(Object.assign({}, node), {\n      levelCoord: levelCoord,\n      stackDepth: stackDepth,\n      stackForward: 0\n    });\n    rects.push(rect);\n    return rect.stackForward = processNodes(node.nextLevelNodes, levelCoord + node.thickness, stackDepth + 1) + 1;\n  });\n  function processNodes(nodes, levelCoord, stackDepth) {\n    var stackForward = 0;\n    var _iterator3 = _createForOfIteratorHelper(nodes),\n      _step3;\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var node = _step3.value;\n        stackForward = Math.max(processNode(node, levelCoord, stackDepth), stackForward);\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n    return stackForward;\n  }\n  processNodes(topLevelNodes, 0, 0);\n  return rects; // TODO: sort rects by levelCoord to be consistent with toRects?\n}\n// TODO: move to general util\nfunction cacheable(keyFunc, workFunc) {\n  var cache = {};\n  return function () {\n    var key = keyFunc.apply(void 0, arguments);\n    return key in cache ? cache[key] : cache[key] = workFunc.apply(void 0, arguments);\n  };\n}\nfunction computeSegVCoords(segs, colDate) {\n  var slatCoords = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var eventMinHeight = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  var vcoords = [];\n  if (slatCoords) {\n    for (var i = 0; i < segs.length; i += 1) {\n      var seg = segs[i];\n      var spanStart = slatCoords.computeDateTop(seg.start, colDate);\n      var spanEnd = Math.max(spanStart + (eventMinHeight || 0),\n      // :(\n      slatCoords.computeDateTop(seg.end, colDate));\n      vcoords.push({\n        start: Math.round(spanStart),\n        end: Math.round(spanEnd) //\n      });\n    }\n  }\n\n  return vcoords;\n}\nfunction computeFgSegPlacements(segs, segVCoords,\n// might not have for every seg\neventOrderStrict, eventMaxStack) {\n  var segInputs = [];\n  var dumbSegs = []; // segs without coords\n  for (var i = 0; i < segs.length; i += 1) {\n    var vcoords = segVCoords[i];\n    if (vcoords) {\n      segInputs.push({\n        index: i,\n        thickness: 1,\n        span: vcoords\n      });\n    } else {\n      dumbSegs.push(segs[i]);\n    }\n  }\n  var _buildPositioning = buildPositioning(segInputs, eventOrderStrict, eventMaxStack),\n    segRects = _buildPositioning.segRects,\n    hiddenGroups = _buildPositioning.hiddenGroups;\n  var segPlacements = [];\n  var _iterator4 = _createForOfIteratorHelper(segRects),\n    _step4;\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var segRect = _step4.value;\n      segPlacements.push({\n        seg: segs[segRect.index],\n        rect: segRect\n      });\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n  for (var _i2 = 0, _dumbSegs = dumbSegs; _i2 < _dumbSegs.length; _i2++) {\n    var dumbSeg = _dumbSegs[_i2];\n    segPlacements.push({\n      seg: dumbSeg,\n      rect: null\n    });\n  }\n  return {\n    segPlacements: segPlacements,\n    hiddenGroups: hiddenGroups\n  };\n}\nvar DEFAULT_TIME_FORMAT = createFormatter({\n  hour: 'numeric',\n  minute: '2-digit',\n  meridiem: false\n});\nvar TimeColEvent = /*#__PURE__*/function (_BaseComponent5) {\n  _inherits(TimeColEvent, _BaseComponent5);\n  var _super7 = _createSuper(TimeColEvent);\n  function TimeColEvent() {\n    _classCallCheck(this, TimeColEvent);\n    return _super7.apply(this, arguments);\n  }\n  _createClass(TimeColEvent, [{\n    key: \"render\",\n    value: function render() {\n      return createElement(StandardEvent, Object.assign({}, this.props, {\n        elClasses: ['fc-timegrid-event', 'fc-v-event', this.props.isShort && 'fc-timegrid-event-short'],\n        defaultTimeFormat: DEFAULT_TIME_FORMAT\n      }));\n    }\n  }]);\n  return TimeColEvent;\n}(BaseComponent);\nvar TimeCol = /*#__PURE__*/function (_BaseComponent6) {\n  _inherits(TimeCol, _BaseComponent6);\n  var _super8 = _createSuper(TimeCol);\n  function TimeCol() {\n    var _this4;\n    _classCallCheck(this, TimeCol);\n    _this4 = _super8.apply(this, arguments);\n    _this4.sortEventSegs = memoize(sortEventSegs);\n    return _this4;\n  }\n  // TODO: memoize event-placement?\n  _createClass(TimeCol, [{\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n      var props = this.props,\n        context = this.context;\n      var options = context.options;\n      var isSelectMirror = options.selectMirror;\n      var mirrorSegs =\n      // yuck\n      props.eventDrag && props.eventDrag.segs || props.eventResize && props.eventResize.segs || isSelectMirror && props.dateSelectionSegs || [];\n      var interactionAffectedInstances =\n      // TODO: messy way to compute this\n      props.eventDrag && props.eventDrag.affectedInstances || props.eventResize && props.eventResize.affectedInstances || {};\n      var sortedFgSegs = this.sortEventSegs(props.fgEventSegs, options.eventOrder);\n      return createElement(DayCellContainer, {\n        elTag: \"td\",\n        elRef: props.elRef,\n        elClasses: ['fc-timegrid-col'].concat(_toConsumableArray(props.extraClassNames || [])),\n        elAttrs: Object.assign({\n          role: 'gridcell'\n        }, props.extraDataAttrs),\n        date: props.date,\n        dateProfile: props.dateProfile,\n        todayRange: props.todayRange,\n        extraRenderProps: props.extraRenderProps\n      }, function (InnerContent) {\n        return createElement(\"div\", {\n          className: \"fc-timegrid-col-frame\"\n        }, createElement(\"div\", {\n          className: \"fc-timegrid-col-bg\"\n        }, _this5.renderFillSegs(props.businessHourSegs, 'non-business'), _this5.renderFillSegs(props.bgEventSegs, 'bg-event'), _this5.renderFillSegs(props.dateSelectionSegs, 'highlight')), createElement(\"div\", {\n          className: \"fc-timegrid-col-events\"\n        }, _this5.renderFgSegs(sortedFgSegs, interactionAffectedInstances, false, false, false)), createElement(\"div\", {\n          className: \"fc-timegrid-col-events\"\n        }, _this5.renderFgSegs(mirrorSegs, {}, Boolean(props.eventDrag), Boolean(props.eventResize), Boolean(isSelectMirror), 'mirror')), createElement(\"div\", {\n          className: \"fc-timegrid-now-indicator-container\"\n        }, _this5.renderNowIndicator(props.nowIndicatorSegs)), hasCustomDayCellContent(options) && createElement(InnerContent, {\n          elTag: \"div\",\n          elClasses: ['fc-timegrid-col-misc']\n        }));\n      });\n    }\n  }, {\n    key: \"renderFgSegs\",\n    value: function renderFgSegs(sortedFgSegs, segIsInvisible, isDragging, isResizing, isDateSelecting, forcedKey) {\n      var props = this.props;\n      if (props.forPrint) {\n        return renderPlainFgSegs(sortedFgSegs, props);\n      }\n      return this.renderPositionedFgSegs(sortedFgSegs, segIsInvisible, isDragging, isResizing, isDateSelecting, forcedKey);\n    }\n  }, {\n    key: \"renderPositionedFgSegs\",\n    value: function renderPositionedFgSegs(segs,\n    // if not mirror, needs to be sorted\n    segIsInvisible, isDragging, isResizing, isDateSelecting, forcedKey) {\n      var _this6 = this;\n      var _this$context$options2 = this.context.options,\n        eventMaxStack = _this$context$options2.eventMaxStack,\n        eventShortHeight = _this$context$options2.eventShortHeight,\n        eventOrderStrict = _this$context$options2.eventOrderStrict,\n        eventMinHeight = _this$context$options2.eventMinHeight;\n      var _this$props = this.props,\n        date = _this$props.date,\n        slatCoords = _this$props.slatCoords,\n        eventSelection = _this$props.eventSelection,\n        todayRange = _this$props.todayRange,\n        nowDate = _this$props.nowDate;\n      var isMirror = isDragging || isResizing || isDateSelecting;\n      var segVCoords = computeSegVCoords(segs, date, slatCoords, eventMinHeight);\n      var _computeFgSegPlacemen = computeFgSegPlacements(segs, segVCoords, eventOrderStrict, eventMaxStack),\n        segPlacements = _computeFgSegPlacemen.segPlacements,\n        hiddenGroups = _computeFgSegPlacemen.hiddenGroups;\n      return createElement(Fragment, null, this.renderHiddenGroups(hiddenGroups, segs), segPlacements.map(function (segPlacement) {\n        var seg = segPlacement.seg,\n          rect = segPlacement.rect;\n        var instanceId = seg.eventRange.instance.instanceId;\n        var isVisible = isMirror || Boolean(!segIsInvisible[instanceId] && rect);\n        var vStyle = computeSegVStyle(rect && rect.span);\n        var hStyle = !isMirror && rect ? _this6.computeSegHStyle(rect) : {\n          left: 0,\n          right: 0\n        };\n        var isInset = Boolean(rect) && rect.stackForward > 0;\n        var isShort = Boolean(rect) && rect.span.end - rect.span.start < eventShortHeight; // look at other places for this problem\n        return createElement(\"div\", {\n          className: 'fc-timegrid-event-harness' + (isInset ? ' fc-timegrid-event-harness-inset' : ''),\n          key: forcedKey || instanceId,\n          style: Object.assign(Object.assign({\n            visibility: isVisible ? '' : 'hidden'\n          }, vStyle), hStyle)\n        }, createElement(TimeColEvent, Object.assign({\n          seg: seg,\n          isDragging: isDragging,\n          isResizing: isResizing,\n          isDateSelecting: isDateSelecting,\n          isSelected: instanceId === eventSelection,\n          isShort: isShort\n        }, getSegMeta(seg, todayRange, nowDate))));\n      }));\n    }\n    // will already have eventMinHeight applied because segInputs already had it\n  }, {\n    key: \"renderHiddenGroups\",\n    value: function renderHiddenGroups(hiddenGroups, segs) {\n      var _this$props2 = this.props,\n        extraDateSpan = _this$props2.extraDateSpan,\n        dateProfile = _this$props2.dateProfile,\n        todayRange = _this$props2.todayRange,\n        nowDate = _this$props2.nowDate,\n        eventSelection = _this$props2.eventSelection,\n        eventDrag = _this$props2.eventDrag,\n        eventResize = _this$props2.eventResize;\n      return createElement(Fragment, null, hiddenGroups.map(function (hiddenGroup) {\n        var positionCss = computeSegVStyle(hiddenGroup.span);\n        var hiddenSegs = compileSegsFromEntries(hiddenGroup.entries, segs);\n        return createElement(TimeColMoreLink, {\n          key: buildIsoString(computeEarliestSegStart(hiddenSegs)),\n          hiddenSegs: hiddenSegs,\n          top: positionCss.top,\n          bottom: positionCss.bottom,\n          extraDateSpan: extraDateSpan,\n          dateProfile: dateProfile,\n          todayRange: todayRange,\n          nowDate: nowDate,\n          eventSelection: eventSelection,\n          eventDrag: eventDrag,\n          eventResize: eventResize\n        });\n      }));\n    }\n  }, {\n    key: \"renderFillSegs\",\n    value: function renderFillSegs(segs, fillType) {\n      var props = this.props,\n        context = this.context;\n      var segVCoords = computeSegVCoords(segs, props.date, props.slatCoords, context.options.eventMinHeight); // don't assume all populated\n      var children = segVCoords.map(function (vcoords, i) {\n        var seg = segs[i];\n        return createElement(\"div\", {\n          key: buildEventRangeKey(seg.eventRange),\n          className: \"fc-timegrid-bg-harness\",\n          style: computeSegVStyle(vcoords)\n        }, fillType === 'bg-event' ? createElement(BgEvent, Object.assign({\n          seg: seg\n        }, getSegMeta(seg, props.todayRange, props.nowDate))) : renderFill(fillType));\n      });\n      return createElement(Fragment, null, children);\n    }\n  }, {\n    key: \"renderNowIndicator\",\n    value: function renderNowIndicator(segs) {\n      var _this$props3 = this.props,\n        slatCoords = _this$props3.slatCoords,\n        date = _this$props3.date;\n      if (!slatCoords) {\n        return null;\n      }\n      return segs.map(function (seg, i) {\n        return createElement(NowIndicatorContainer\n        // key doesn't matter. will only ever be one\n        , {\n          // key doesn't matter. will only ever be one\n          key: i,\n          elClasses: ['fc-timegrid-now-indicator-line'],\n          elStyle: {\n            top: slatCoords.computeDateTop(seg.start, date)\n          },\n          isAxis: false,\n          date: date\n        });\n      });\n    }\n  }, {\n    key: \"computeSegHStyle\",\n    value: function computeSegHStyle(segHCoords) {\n      var _this$context2 = this.context,\n        isRtl = _this$context2.isRtl,\n        options = _this$context2.options;\n      var shouldOverlap = options.slotEventOverlap;\n      var nearCoord = segHCoords.levelCoord; // the left side if LTR. the right side if RTL. floating-point\n      var farCoord = segHCoords.levelCoord + segHCoords.thickness; // the right side if LTR. the left side if RTL. floating-point\n      var left; // amount of space from left edge, a fraction of the total width\n      var right; // amount of space from right edge, a fraction of the total width\n      if (shouldOverlap) {\n        // double the width, but don't go beyond the maximum forward coordinate (1.0)\n        farCoord = Math.min(1, nearCoord + (farCoord - nearCoord) * 2);\n      }\n      if (isRtl) {\n        left = 1 - farCoord;\n        right = nearCoord;\n      } else {\n        left = nearCoord;\n        right = 1 - farCoord;\n      }\n      var props = {\n        zIndex: segHCoords.stackDepth + 1,\n        left: left * 100 + '%',\n        right: right * 100 + '%'\n      };\n      if (shouldOverlap && !segHCoords.stackForward) {\n        // add padding to the edge so that forward stacked events don't cover the resizer's icon\n        props[isRtl ? 'marginLeft' : 'marginRight'] = 10 * 2; // 10 is a guesstimate of the icon's width\n      }\n\n      return props;\n    }\n  }]);\n  return TimeCol;\n}(BaseComponent);\nfunction renderPlainFgSegs(sortedFgSegs, _ref) {\n  var todayRange = _ref.todayRange,\n    nowDate = _ref.nowDate,\n    eventSelection = _ref.eventSelection,\n    eventDrag = _ref.eventDrag,\n    eventResize = _ref.eventResize;\n  var hiddenInstances = (eventDrag ? eventDrag.affectedInstances : null) || (eventResize ? eventResize.affectedInstances : null) || {};\n  return createElement(Fragment, null, sortedFgSegs.map(function (seg) {\n    var instanceId = seg.eventRange.instance.instanceId;\n    return createElement(\"div\", {\n      key: instanceId,\n      style: {\n        visibility: hiddenInstances[instanceId] ? 'hidden' : ''\n      }\n    }, createElement(TimeColEvent, Object.assign({\n      seg: seg,\n      isDragging: false,\n      isResizing: false,\n      isDateSelecting: false,\n      isSelected: instanceId === eventSelection,\n      isShort: false\n    }, getSegMeta(seg, todayRange, nowDate))));\n  }));\n}\nfunction computeSegVStyle(segVCoords) {\n  if (!segVCoords) {\n    return {\n      top: '',\n      bottom: ''\n    };\n  }\n  return {\n    top: segVCoords.start,\n    bottom: -segVCoords.end\n  };\n}\nfunction compileSegsFromEntries(segEntries, allSegs) {\n  return segEntries.map(function (segEntry) {\n    return allSegs[segEntry.index];\n  });\n}\nvar TimeColsContent = /*#__PURE__*/function (_BaseComponent7) {\n  _inherits(TimeColsContent, _BaseComponent7);\n  var _super9 = _createSuper(TimeColsContent);\n  function TimeColsContent() {\n    var _this7;\n    _classCallCheck(this, TimeColsContent);\n    _this7 = _super9.apply(this, arguments);\n    _this7.splitFgEventSegs = memoize(splitSegsByCol);\n    _this7.splitBgEventSegs = memoize(splitSegsByCol);\n    _this7.splitBusinessHourSegs = memoize(splitSegsByCol);\n    _this7.splitNowIndicatorSegs = memoize(splitSegsByCol);\n    _this7.splitDateSelectionSegs = memoize(splitSegsByCol);\n    _this7.splitEventDrag = memoize(splitInteractionByCol);\n    _this7.splitEventResize = memoize(splitInteractionByCol);\n    _this7.rootElRef = createRef();\n    _this7.cellElRefs = new RefMap();\n    return _this7;\n  }\n  _createClass(TimeColsContent, [{\n    key: \"render\",\n    value: function render() {\n      var _this8 = this;\n      var props = this.props,\n        context = this.context;\n      var nowIndicatorTop = context.options.nowIndicator && props.slatCoords && props.slatCoords.safeComputeTop(props.nowDate); // might return void\n      var colCnt = props.cells.length;\n      var fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, colCnt);\n      var bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, colCnt);\n      var businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, colCnt);\n      var nowIndicatorSegsByRow = this.splitNowIndicatorSegs(props.nowIndicatorSegs, colCnt);\n      var dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, colCnt);\n      var eventDragByRow = this.splitEventDrag(props.eventDrag, colCnt);\n      var eventResizeByRow = this.splitEventResize(props.eventResize, colCnt);\n      return createElement(\"div\", {\n        className: \"fc-timegrid-cols\",\n        ref: this.rootElRef\n      }, createElement(\"table\", {\n        role: \"presentation\",\n        style: {\n          minWidth: props.tableMinWidth,\n          width: props.clientWidth\n        }\n      }, props.tableColGroupNode, createElement(\"tbody\", {\n        role: \"presentation\"\n      }, createElement(\"tr\", {\n        role: \"row\"\n      }, props.axis && createElement(\"td\", {\n        \"aria-hidden\": true,\n        className: \"fc-timegrid-col fc-timegrid-axis\"\n      }, createElement(\"div\", {\n        className: \"fc-timegrid-col-frame\"\n      }, createElement(\"div\", {\n        className: \"fc-timegrid-now-indicator-container\"\n      }, typeof nowIndicatorTop === 'number' && createElement(NowIndicatorContainer, {\n        elClasses: ['fc-timegrid-now-indicator-arrow'],\n        elStyle: {\n          top: nowIndicatorTop\n        },\n        isAxis: true,\n        date: props.nowDate\n      })))), props.cells.map(function (cell, i) {\n        return createElement(TimeCol, {\n          key: cell.key,\n          elRef: _this8.cellElRefs.createRef(cell.key),\n          dateProfile: props.dateProfile,\n          date: cell.date,\n          nowDate: props.nowDate,\n          todayRange: props.todayRange,\n          extraRenderProps: cell.extraRenderProps,\n          extraDataAttrs: cell.extraDataAttrs,\n          extraClassNames: cell.extraClassNames,\n          extraDateSpan: cell.extraDateSpan,\n          fgEventSegs: fgEventSegsByRow[i],\n          bgEventSegs: bgEventSegsByRow[i],\n          businessHourSegs: businessHourSegsByRow[i],\n          nowIndicatorSegs: nowIndicatorSegsByRow[i],\n          dateSelectionSegs: dateSelectionSegsByRow[i],\n          eventDrag: eventDragByRow[i],\n          eventResize: eventResizeByRow[i],\n          slatCoords: props.slatCoords,\n          eventSelection: props.eventSelection,\n          forPrint: props.forPrint\n        });\n      })))));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateCoords();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.updateCoords();\n    }\n  }, {\n    key: \"updateCoords\",\n    value: function updateCoords() {\n      var props = this.props;\n      if (props.onColCoords && props.clientWidth !== null // means sizing has stabilized\n      ) {\n        props.onColCoords(new PositionCache(this.rootElRef.current, collectCellEls(this.cellElRefs.currentMap, props.cells), true,\n        // horizontal\n        false));\n      }\n    }\n  }]);\n  return TimeColsContent;\n}(BaseComponent);\nfunction collectCellEls(elMap, cells) {\n  return cells.map(function (cell) {\n    return elMap[cell.key];\n  });\n}\n\n/* A component that renders one or more columns of vertical time slots\n----------------------------------------------------------------------------------------------------------------------*/\nvar TimeCols = /*#__PURE__*/function (_DateComponent2) {\n  _inherits(TimeCols, _DateComponent2);\n  var _super10 = _createSuper(TimeCols);\n  function TimeCols() {\n    var _this9;\n    _classCallCheck(this, TimeCols);\n    _this9 = _super10.apply(this, arguments);\n    _this9.processSlotOptions = memoize(processSlotOptions);\n    _this9.state = {\n      slatCoords: null\n    };\n    _this9.handleRootEl = function (el) {\n      if (el) {\n        _this9.context.registerInteractiveComponent(_assertThisInitialized(_this9), {\n          el: el,\n          isHitComboAllowed: _this9.props.isHitComboAllowed\n        });\n      } else {\n        _this9.context.unregisterInteractiveComponent(_assertThisInitialized(_this9));\n      }\n    };\n    _this9.handleScrollRequest = function (request) {\n      var onScrollTopRequest = _this9.props.onScrollTopRequest;\n      var slatCoords = _this9.state.slatCoords;\n      if (onScrollTopRequest && slatCoords) {\n        if (request.time) {\n          var top = slatCoords.computeTimeTop(request.time);\n          top = Math.ceil(top); // zoom can give weird floating-point values. rather scroll a little bit further\n          if (top) {\n            top += 1; // to overcome top border that slots beyond the first have. looks better\n          }\n\n          onScrollTopRequest(top);\n        }\n        return true;\n      }\n      return false;\n    };\n    _this9.handleColCoords = function (colCoords) {\n      _this9.colCoords = colCoords;\n    };\n    _this9.handleSlatCoords = function (slatCoords) {\n      _this9.setState({\n        slatCoords: slatCoords\n      });\n      if (_this9.props.onSlatCoords) {\n        _this9.props.onSlatCoords(slatCoords);\n      }\n    };\n    return _this9;\n  }\n  _createClass(TimeCols, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props,\n        state = this.state;\n      return createElement(\"div\", {\n        className: \"fc-timegrid-body\",\n        ref: this.handleRootEl,\n        style: {\n          // these props are important to give this wrapper correct dimensions for interactions\n          // TODO: if we set it here, can we avoid giving to inner tables?\n          width: props.clientWidth,\n          minWidth: props.tableMinWidth\n        }\n      }, createElement(TimeColsSlats, {\n        axis: props.axis,\n        dateProfile: props.dateProfile,\n        slatMetas: props.slatMetas,\n        clientWidth: props.clientWidth,\n        minHeight: props.expandRows ? props.clientHeight : '',\n        tableMinWidth: props.tableMinWidth,\n        tableColGroupNode: props.axis ? props.tableColGroupNode : null /* axis depends on the colgroup's shrinking */,\n        onCoords: this.handleSlatCoords\n      }), createElement(TimeColsContent, {\n        cells: props.cells,\n        axis: props.axis,\n        dateProfile: props.dateProfile,\n        businessHourSegs: props.businessHourSegs,\n        bgEventSegs: props.bgEventSegs,\n        fgEventSegs: props.fgEventSegs,\n        dateSelectionSegs: props.dateSelectionSegs,\n        eventSelection: props.eventSelection,\n        eventDrag: props.eventDrag,\n        eventResize: props.eventResize,\n        todayRange: props.todayRange,\n        nowDate: props.nowDate,\n        nowIndicatorSegs: props.nowIndicatorSegs,\n        clientWidth: props.clientWidth,\n        tableMinWidth: props.tableMinWidth,\n        tableColGroupNode: props.tableColGroupNode,\n        slatCoords: state.slatCoords,\n        onColCoords: this.handleColCoords,\n        forPrint: props.forPrint\n      }));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.scrollResponder = this.context.createScrollResponder(this.handleScrollRequest);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      this.scrollResponder.update(prevProps.dateProfile !== this.props.dateProfile);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.scrollResponder.detach();\n    }\n  }, {\n    key: \"queryHit\",\n    value: function queryHit(positionLeft, positionTop) {\n      var _this$context3 = this.context,\n        dateEnv = _this$context3.dateEnv,\n        options = _this$context3.options;\n      var colCoords = this.colCoords;\n      var dateProfile = this.props.dateProfile;\n      var slatCoords = this.state.slatCoords;\n      var _this$processSlotOpti = this.processSlotOptions(this.props.slotDuration, options.snapDuration),\n        snapDuration = _this$processSlotOpti.snapDuration,\n        snapsPerSlot = _this$processSlotOpti.snapsPerSlot;\n      var colIndex = colCoords.leftToIndex(positionLeft);\n      var slatIndex = slatCoords.positions.topToIndex(positionTop);\n      if (colIndex != null && slatIndex != null) {\n        var cell = this.props.cells[colIndex];\n        var slatTop = slatCoords.positions.tops[slatIndex];\n        var slatHeight = slatCoords.positions.getHeight(slatIndex);\n        var partial = (positionTop - slatTop) / slatHeight; // floating point number between 0 and 1\n        var localSnapIndex = Math.floor(partial * snapsPerSlot); // the snap # relative to start of slat\n        var snapIndex = slatIndex * snapsPerSlot + localSnapIndex;\n        var dayDate = this.props.cells[colIndex].date;\n        var time = addDurations(dateProfile.slotMinTime, multiplyDuration(snapDuration, snapIndex));\n        var start = dateEnv.add(dayDate, time);\n        var end = dateEnv.add(start, snapDuration);\n        return {\n          dateProfile: dateProfile,\n          dateSpan: Object.assign({\n            range: {\n              start: start,\n              end: end\n            },\n            allDay: false\n          }, cell.extraDateSpan),\n          dayEl: colCoords.els[colIndex],\n          rect: {\n            left: colCoords.lefts[colIndex],\n            right: colCoords.rights[colIndex],\n            top: slatTop,\n            bottom: slatTop + slatHeight\n          },\n          layer: 0\n        };\n      }\n      return null;\n    }\n  }]);\n  return TimeCols;\n}(DateComponent);\nfunction processSlotOptions(slotDuration, snapDurationOverride) {\n  var snapDuration = snapDurationOverride || slotDuration;\n  var snapsPerSlot = wholeDivideDurations(slotDuration, snapDuration);\n  if (snapsPerSlot === null) {\n    snapDuration = slotDuration;\n    snapsPerSlot = 1;\n    // TODO: say warning?\n  }\n\n  return {\n    snapDuration: snapDuration,\n    snapsPerSlot: snapsPerSlot\n  };\n}\nvar DayTimeColsSlicer = /*#__PURE__*/function (_Slicer) {\n  _inherits(DayTimeColsSlicer, _Slicer);\n  var _super11 = _createSuper(DayTimeColsSlicer);\n  function DayTimeColsSlicer() {\n    _classCallCheck(this, DayTimeColsSlicer);\n    return _super11.apply(this, arguments);\n  }\n  _createClass(DayTimeColsSlicer, [{\n    key: \"sliceRange\",\n    value: function sliceRange(range, dayRanges) {\n      var segs = [];\n      for (var col = 0; col < dayRanges.length; col += 1) {\n        var segRange = intersectRanges(range, dayRanges[col]);\n        if (segRange) {\n          segs.push({\n            start: segRange.start,\n            end: segRange.end,\n            isStart: segRange.start.valueOf() === range.start.valueOf(),\n            isEnd: segRange.end.valueOf() === range.end.valueOf(),\n            col: col\n          });\n        }\n      }\n      return segs;\n    }\n  }]);\n  return DayTimeColsSlicer;\n}(Slicer);\nvar DayTimeCols = /*#__PURE__*/function (_DateComponent3) {\n  _inherits(DayTimeCols, _DateComponent3);\n  var _super12 = _createSuper(DayTimeCols);\n  function DayTimeCols() {\n    var _this10;\n    _classCallCheck(this, DayTimeCols);\n    _this10 = _super12.apply(this, arguments);\n    _this10.buildDayRanges = memoize(buildDayRanges);\n    _this10.slicer = new DayTimeColsSlicer();\n    _this10.timeColsRef = createRef();\n    return _this10;\n  }\n  _createClass(DayTimeCols, [{\n    key: \"render\",\n    value: function render() {\n      var _this11 = this;\n      var props = this.props,\n        context = this.context;\n      var dateProfile = props.dateProfile,\n        dayTableModel = props.dayTableModel;\n      var _context$options = context.options,\n        nowIndicator = _context$options.nowIndicator,\n        nextDayThreshold = _context$options.nextDayThreshold;\n      var dayRanges = this.buildDayRanges(dayTableModel, dateProfile, context.dateEnv);\n      // give it the first row of cells\n      // TODO: would move this further down hierarchy, but sliceNowDate needs it\n      return createElement(NowTimer, {\n        unit: nowIndicator ? 'minute' : 'day'\n      }, function (nowDate, todayRange) {\n        return createElement(TimeCols, Object.assign({\n          ref: _this11.timeColsRef\n        }, _this11.slicer.sliceProps(props, dateProfile, null, context, dayRanges), {\n          forPrint: props.forPrint,\n          axis: props.axis,\n          dateProfile: dateProfile,\n          slatMetas: props.slatMetas,\n          slotDuration: props.slotDuration,\n          cells: dayTableModel.cells[0],\n          tableColGroupNode: props.tableColGroupNode,\n          tableMinWidth: props.tableMinWidth,\n          clientWidth: props.clientWidth,\n          clientHeight: props.clientHeight,\n          expandRows: props.expandRows,\n          nowDate: nowDate,\n          nowIndicatorSegs: nowIndicator && _this11.slicer.sliceNowDate(nowDate, dateProfile, nextDayThreshold, context, dayRanges),\n          todayRange: todayRange,\n          onScrollTopRequest: props.onScrollTopRequest,\n          onSlatCoords: props.onSlatCoords\n        }));\n      });\n    }\n  }]);\n  return DayTimeCols;\n}(DateComponent);\nfunction buildDayRanges(dayTableModel, dateProfile, dateEnv) {\n  var ranges = [];\n  var _iterator5 = _createForOfIteratorHelper(dayTableModel.headerDates),\n    _step5;\n  try {\n    for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n      var date = _step5.value;\n      ranges.push({\n        start: dateEnv.add(date, dateProfile.slotMinTime),\n        end: dateEnv.add(date, dateProfile.slotMaxTime)\n      });\n    }\n  } catch (err) {\n    _iterator5.e(err);\n  } finally {\n    _iterator5.f();\n  }\n  return ranges;\n}\n\n// potential nice values for the slot-duration and interval-duration\n// from largest to smallest\nvar STOCK_SUB_DURATIONS = [{\n  hours: 1\n}, {\n  minutes: 30\n}, {\n  minutes: 15\n}, {\n  seconds: 30\n}, {\n  seconds: 15\n}];\nfunction buildSlatMetas(slotMinTime, slotMaxTime, explicitLabelInterval, slotDuration, dateEnv) {\n  var dayStart = new Date(0);\n  var slatTime = slotMinTime;\n  var slatIterator = createDuration(0);\n  var labelInterval = explicitLabelInterval || computeLabelInterval(slotDuration);\n  var metas = [];\n  while (asRoughMs(slatTime) < asRoughMs(slotMaxTime)) {\n    var date = dateEnv.add(dayStart, slatTime);\n    var isLabeled = wholeDivideDurations(slatIterator, labelInterval) !== null;\n    metas.push({\n      date: date,\n      time: slatTime,\n      key: date.toISOString(),\n      isoTimeStr: formatIsoTimeString(date),\n      isLabeled: isLabeled\n    });\n    slatTime = addDurations(slatTime, slotDuration);\n    slatIterator = addDurations(slatIterator, slotDuration);\n  }\n  return metas;\n}\n// Computes an automatic value for slotLabelInterval\nfunction computeLabelInterval(slotDuration) {\n  var i;\n  var labelInterval;\n  var slotsPerLabel;\n  // find the smallest stock label interval that results in more than one slots-per-label\n  for (i = STOCK_SUB_DURATIONS.length - 1; i >= 0; i -= 1) {\n    labelInterval = createDuration(STOCK_SUB_DURATIONS[i]);\n    slotsPerLabel = wholeDivideDurations(labelInterval, slotDuration);\n    if (slotsPerLabel !== null && slotsPerLabel > 1) {\n      return labelInterval;\n    }\n  }\n  return slotDuration; // fall back\n}\nvar DayTimeColsView = /*#__PURE__*/function (_TimeColsView) {\n  _inherits(DayTimeColsView, _TimeColsView);\n  var _super13 = _createSuper(DayTimeColsView);\n  function DayTimeColsView() {\n    var _this12;\n    _classCallCheck(this, DayTimeColsView);\n    _this12 = _super13.apply(this, arguments);\n    _this12.buildTimeColsModel = memoize(buildTimeColsModel);\n    _this12.buildSlatMetas = memoize(buildSlatMetas);\n    return _this12;\n  }\n  _createClass(DayTimeColsView, [{\n    key: \"render\",\n    value: function render() {\n      var _this13 = this;\n      var _this$context4 = this.context,\n        options = _this$context4.options,\n        dateEnv = _this$context4.dateEnv,\n        dateProfileGenerator = _this$context4.dateProfileGenerator;\n      var props = this.props;\n      var dateProfile = props.dateProfile;\n      var dayTableModel = this.buildTimeColsModel(dateProfile, dateProfileGenerator);\n      var splitProps = this.allDaySplitter.splitProps(props);\n      var slatMetas = this.buildSlatMetas(dateProfile.slotMinTime, dateProfile.slotMaxTime, options.slotLabelInterval, options.slotDuration, dateEnv);\n      var dayMinWidth = options.dayMinWidth;\n      var hasAttachedAxis = !dayMinWidth;\n      var hasDetachedAxis = dayMinWidth;\n      var headerContent = options.dayHeaders && createElement(DayHeader, {\n        dates: dayTableModel.headerDates,\n        dateProfile: dateProfile,\n        datesRepDistinctDays: true,\n        renderIntro: hasAttachedAxis ? this.renderHeadAxis : null\n      });\n      var allDayContent = options.allDaySlot !== false && function (contentArg) {\n        return createElement(DayTable, Object.assign({}, splitProps.allDay, {\n          dateProfile: dateProfile,\n          dayTableModel: dayTableModel,\n          nextDayThreshold: options.nextDayThreshold,\n          tableMinWidth: contentArg.tableMinWidth,\n          colGroupNode: contentArg.tableColGroupNode,\n          renderRowIntro: hasAttachedAxis ? _this13.renderTableRowAxis : null,\n          showWeekNumbers: false,\n          expandRows: false,\n          headerAlignElRef: _this13.headerElRef,\n          clientWidth: contentArg.clientWidth,\n          clientHeight: contentArg.clientHeight,\n          forPrint: props.forPrint\n        }, _this13.getAllDayMaxEventProps()));\n      };\n      var timeGridContent = function timeGridContent(contentArg) {\n        return createElement(DayTimeCols, Object.assign({}, splitProps.timed, {\n          dayTableModel: dayTableModel,\n          dateProfile: dateProfile,\n          axis: hasAttachedAxis,\n          slotDuration: options.slotDuration,\n          slatMetas: slatMetas,\n          forPrint: props.forPrint,\n          tableColGroupNode: contentArg.tableColGroupNode,\n          tableMinWidth: contentArg.tableMinWidth,\n          clientWidth: contentArg.clientWidth,\n          clientHeight: contentArg.clientHeight,\n          onSlatCoords: _this13.handleSlatCoords,\n          expandRows: contentArg.expandRows,\n          onScrollTopRequest: _this13.handleScrollTopRequest\n        }));\n      };\n      return hasDetachedAxis ? this.renderHScrollLayout(headerContent, allDayContent, timeGridContent, dayTableModel.colCnt, dayMinWidth, slatMetas, this.state.slatCoords) : this.renderSimpleLayout(headerContent, allDayContent, timeGridContent);\n    }\n  }]);\n  return DayTimeColsView;\n}(TimeColsView);\nfunction buildTimeColsModel(dateProfile, dateProfileGenerator) {\n  var daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator);\n  return new DayTableModel(daySeries, false);\n}\nvar css_248z = \".fc-v-event{background-color:var(--fc-event-bg-color);border:1px solid var(--fc-event-border-color);display:block}.fc-v-event .fc-event-main{color:var(--fc-event-text-color);height:100%}.fc-v-event .fc-event-main-frame{display:flex;flex-direction:column;height:100%}.fc-v-event .fc-event-time{flex-grow:0;flex-shrink:0;max-height:100%;overflow:hidden}.fc-v-event .fc-event-title-container{flex-grow:1;flex-shrink:1;min-height:0}.fc-v-event .fc-event-title{bottom:0;max-height:100%;overflow:hidden;top:0}.fc-v-event:not(.fc-event-start){border-top-left-radius:0;border-top-right-radius:0;border-top-width:0}.fc-v-event:not(.fc-event-end){border-bottom-left-radius:0;border-bottom-right-radius:0;border-bottom-width:0}.fc-v-event.fc-event-selected:before{left:-10px;right:-10px}.fc-v-event .fc-event-resizer-start{cursor:n-resize}.fc-v-event .fc-event-resizer-end{cursor:s-resize}.fc-v-event:not(.fc-event-selected) .fc-event-resizer{height:var(--fc-event-resizer-thickness);left:0;right:0}.fc-v-event:not(.fc-event-selected) .fc-event-resizer-start{top:calc(var(--fc-event-resizer-thickness)/-2)}.fc-v-event:not(.fc-event-selected) .fc-event-resizer-end{bottom:calc(var(--fc-event-resizer-thickness)/-2)}.fc-v-event.fc-event-selected .fc-event-resizer{left:50%;margin-left:calc(var(--fc-event-resizer-dot-total-width)/-2)}.fc-v-event.fc-event-selected .fc-event-resizer-start{top:calc(var(--fc-event-resizer-dot-total-width)/-2)}.fc-v-event.fc-event-selected .fc-event-resizer-end{bottom:calc(var(--fc-event-resizer-dot-total-width)/-2)}.fc .fc-timegrid .fc-daygrid-body{z-index:2}.fc .fc-timegrid-divider{padding:0 0 2px}.fc .fc-timegrid-body{min-height:100%;position:relative;z-index:1}.fc .fc-timegrid-axis-chunk{position:relative}.fc .fc-timegrid-axis-chunk>table,.fc .fc-timegrid-slots{position:relative;z-index:1}.fc .fc-timegrid-slot{border-bottom:0;height:1.5em}.fc .fc-timegrid-slot:empty:before{content:\\\"\\\\00a0\\\"}.fc .fc-timegrid-slot-minor{border-top-style:dotted}.fc .fc-timegrid-slot-label-cushion{display:inline-block;white-space:nowrap}.fc .fc-timegrid-slot-label{vertical-align:middle}.fc .fc-timegrid-axis-cushion,.fc .fc-timegrid-slot-label-cushion{padding:0 4px}.fc .fc-timegrid-axis-frame-liquid{height:100%}.fc .fc-timegrid-axis-frame{align-items:center;display:flex;justify-content:flex-end;overflow:hidden}.fc .fc-timegrid-axis-cushion{flex-shrink:0;max-width:60px}.fc-direction-ltr .fc-timegrid-slot-label-frame{text-align:right}.fc-direction-rtl .fc-timegrid-slot-label-frame{text-align:left}.fc-liquid-hack .fc-timegrid-axis-frame-liquid{bottom:0;height:auto;left:0;position:absolute;right:0;top:0}.fc .fc-timegrid-col.fc-day-today{background-color:var(--fc-today-bg-color)}.fc .fc-timegrid-col-frame{min-height:100%;position:relative}.fc-media-screen.fc-liquid-hack .fc-timegrid-col-frame{bottom:0;height:auto;left:0;position:absolute;right:0;top:0}.fc-media-screen .fc-timegrid-cols{bottom:0;left:0;position:absolute;right:0;top:0}.fc-media-screen .fc-timegrid-cols>table{height:100%}.fc-media-screen .fc-timegrid-col-bg,.fc-media-screen .fc-timegrid-col-events,.fc-media-screen .fc-timegrid-now-indicator-container{left:0;position:absolute;right:0;top:0}.fc .fc-timegrid-col-bg{z-index:2}.fc .fc-timegrid-col-bg .fc-non-business{z-index:1}.fc .fc-timegrid-col-bg .fc-bg-event{z-index:2}.fc .fc-timegrid-col-bg .fc-highlight{z-index:3}.fc .fc-timegrid-bg-harness{left:0;position:absolute;right:0}.fc .fc-timegrid-col-events{z-index:3}.fc .fc-timegrid-now-indicator-container{bottom:0;overflow:hidden}.fc-direction-ltr .fc-timegrid-col-events{margin:0 2.5% 0 2px}.fc-direction-rtl .fc-timegrid-col-events{margin:0 2px 0 2.5%}.fc-timegrid-event-harness{position:absolute}.fc-timegrid-event-harness>.fc-timegrid-event{bottom:0;left:0;position:absolute;right:0;top:0}.fc-timegrid-event-harness-inset .fc-timegrid-event,.fc-timegrid-event.fc-event-mirror,.fc-timegrid-more-link{box-shadow:0 0 0 1px var(--fc-page-bg-color)}.fc-timegrid-event,.fc-timegrid-more-link{border-radius:3px;font-size:var(--fc-small-font-size)}.fc-timegrid-event{margin-bottom:1px}.fc-timegrid-event .fc-event-main{padding:1px 1px 0}.fc-timegrid-event .fc-event-time{font-size:var(--fc-small-font-size);margin-bottom:1px;white-space:nowrap}.fc-timegrid-event-short .fc-event-main-frame{flex-direction:row;overflow:hidden}.fc-timegrid-event-short .fc-event-time:after{content:\\\"\\\\00a0-\\\\00a0\\\"}.fc-timegrid-event-short .fc-event-title{font-size:var(--fc-small-font-size)}.fc-timegrid-more-link{background:var(--fc-more-link-bg-color);color:var(--fc-more-link-text-color);cursor:pointer;margin-bottom:1px;position:absolute;z-index:9999}.fc-timegrid-more-link-inner{padding:3px 2px;top:0}.fc-direction-ltr .fc-timegrid-more-link{right:0}.fc-direction-rtl .fc-timegrid-more-link{left:0}.fc .fc-timegrid-now-indicator-arrow,.fc .fc-timegrid-now-indicator-line{pointer-events:none}.fc .fc-timegrid-now-indicator-line{border-color:var(--fc-now-indicator-color);border-style:solid;border-width:1px 0 0;left:0;position:absolute;right:0;z-index:4}.fc .fc-timegrid-now-indicator-arrow{border-color:var(--fc-now-indicator-color);border-style:solid;margin-top:-5px;position:absolute;z-index:4}.fc-direction-ltr .fc-timegrid-now-indicator-arrow{border-bottom-color:transparent;border-top-color:transparent;border-width:5px 0 5px 6px;left:0}.fc-direction-rtl .fc-timegrid-now-indicator-arrow{border-bottom-color:transparent;border-top-color:transparent;border-width:5px 6px 5px 0;right:0}\";\ninjectStyles(css_248z);\nexport { DayTimeCols, DayTimeColsSlicer, DayTimeColsView, TimeCols, TimeColsSlatsCoords, TimeColsView, buildDayRanges, buildSlatMetas, buildTimeColsModel };","map":{"version":3,"names":["Splitter","hasBgRendering","createFormatter","ViewContextType","ContentContainer","BaseComponent","DateComponent","diffDays","buildNavLinkAttrs","WeekNumberContainer","getStickyHeaderDates","ViewContainer","SimpleScrollGrid","getStickyFooterScrollbar","NowTimer","NowIndicatorContainer","renderScrollShim","rangeContainsMarker","startOfDay","asRoughMs","createDuration","RefMap","PositionCache","MoreLinkContainer","SegHierarchy","groupIntersectingEntries","binarySearch","getEntrySpanEnd","buildEntryKey","StandardEvent","memoize","sortEventSegs","DayCellContainer","hasCustomDayCellContent","getSegMeta","buildIsoString","computeEarliestSegStart","buildEventRangeKey","BgEvent","renderFill","addDurations","multiplyDuration","wholeDivideDurations","Slicer","intersectRanges","formatIsoTimeString","DayHeader","DaySeriesModel","DayTableModel","injectStyles","createElement","createRef","Fragment","DayTable","AllDaySplitter","_Splitter","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","getKeyInfo","allDay","timed","getKeysForDateSpan","dateSpan","getKeysForEventDef","eventDef","DEFAULT_SLAT_LABEL_FORMAT","hour","minute","omitZeroMinute","meridiem","TimeColsAxisCell","props","classNames","isLabeled","Consumer","context","className","join","isoTimeStr","dateEnv","options","viewApi","labelFormat","slotLabelFormat","Array","isArray","renderProps","level","time","date","toDate","view","text","format","elTag","elClasses","elAttrs","generatorName","customGenerator","slotLabelContent","defaultGenerator","renderInnerContent","classNameGenerator","slotLabelClassNames","didMount","slotLabelDidMount","willUnmount","slotLabelWillUnmount","InnerContent","TimeBodyAxis","_BaseComponent","_super2","render","slatMetas","map","slatMeta","Object","assign","DEFAULT_WEEK_NUM_FORMAT","week","AUTO_ALL_DAY_MAX_EVENT_ROWS","TimeColsView","_DateComponent","_super3","_this","allDaySplitter","headerElRef","rootElRef","scrollerElRef","state","slatCoords","handleScrollTopRequest","scrollTop","scrollerEl","current","renderHeadAxis","rowKey","frameHeight","length","undefined","dateProfile","range","renderRange","dayCnt","start","end","navLinkAttrs","weekNumbers","defaultFormat","style","height","renderTableRowAxis","rowHeight","_this$context","allDayText","allDayContent","renderAllDayInner","allDayClassNames","allDayDidMount","allDayWillUnmount","handleSlatCoords","setState","renderSimpleLayout","headerRowContent","timeContent","sections","stickyHeaderDates","push","type","isSticky","chunk","elRef","tableClassName","rowContent","content","outerContent","role","theme","getClass","liquid","expandRows","Boolean","viewSpec","isHeightAuto","forPrint","collapsibleWidth","cols","width","renderHScrollLayout","colCnt","dayMinWidth","_this2","ScrollGrid","pluginHooks","scrollGridImpl","Error","stickyFooterScrollbar","syncRowHeights","chunks","arg","rowSyncHeights","contentArg","colSpan","isNowIndicator","nowIndicator","clientHeight","tableColGroupNode","unit","nowDate","nowIndicatorTop","safeComputeTop","elStyle","top","isAxis","colGroups","span","minWidth","getAllDayMaxEventProps","_this$context$options","dayMaxEvents","dayMaxEventRows","TimeColsSlatsCoords","positions","slotDuration","currentRange","startOfDayDate","timeMs","valueOf","slotMinTime","slotMaxTime","computeTimeTop","computeDateTop","when","duration","len","els","slatCoverage","milliseconds","slatIndex","slatRemainder","Math","max","min","floor","tops","getHeight","TimeColsSlatsBody","_BaseComponent2","_super4","slatElRefs","i","ref","axis","slotLaneContent","slotLaneClassNames","slotLaneDidMount","slotLaneWillUnmount","TimeColsSlats","_BaseComponent3","_super5","_this3","tableMinWidth","clientWidth","minHeight","componentDidMount","updateSizing","componentDidUpdate","componentWillUnmount","onCoords","rootEl","offsetHeight","collectSlatEls","currentMap","elMap","splitSegsByCol","segs","segsByCol","col","splitInteractionByCol","ui","byRow","affectedInstances","isEvent","_iterator","_createForOfIteratorHelper","_step","s","n","done","seg","err","e","f","TimeColMoreLink","_BaseComponent4","_super6","bottom","allDayDate","moreCnt","hiddenSegs","allSegs","extraDateSpan","todayRange","popoverContent","renderPlainFgSegs","renderMoreLinkInner","forceTimed","shortText","buildPositioning","segInputs","strictOrder","maxStackCnt","hierarchy","hiddenEntries","addSegs","hiddenGroups","web","buildWeb","stretchWeb","segRects","webToRects","entriesByLevel","buildNode","cacheable","lateral","siblingRange","findNextLevelSegs","nextLevelRes","buildNodes","entry","nextLevelNodes","thickness","lateralStart","lateralEnd","pairs","sort","cmpDescPressures","extractNode","a","b","subjectLevel","subjectLateral","levelCoords","subjectEntry","afterSubject","levelCnt","entries","searchIndex","topLevelNodes","totalThickness","stretchNode","node","startCoord","prevThickness","allThickness","thicknessFraction","endCoord","newChildren","_iterator2","_step2","childNode","res","newThickness","rects","processNode","levelCoord","stackDepth","rect","stackForward","processNodes","nodes","_iterator3","_step3","keyFunc","workFunc","cache","computeSegVCoords","colDate","eventMinHeight","vcoords","spanStart","spanEnd","round","computeFgSegPlacements","segVCoords","eventOrderStrict","eventMaxStack","dumbSegs","index","_buildPositioning","segPlacements","_iterator4","_step4","segRect","_i2","_dumbSegs","dumbSeg","DEFAULT_TIME_FORMAT","TimeColEvent","_BaseComponent5","_super7","isShort","defaultTimeFormat","TimeCol","_BaseComponent6","_super8","_this4","_this5","isSelectMirror","selectMirror","mirrorSegs","eventDrag","eventResize","dateSelectionSegs","interactionAffectedInstances","sortedFgSegs","fgEventSegs","eventOrder","concat","_toConsumableArray","extraClassNames","extraDataAttrs","extraRenderProps","renderFillSegs","businessHourSegs","bgEventSegs","renderFgSegs","renderNowIndicator","nowIndicatorSegs","segIsInvisible","isDragging","isResizing","isDateSelecting","forcedKey","renderPositionedFgSegs","_this6","_this$context$options2","eventShortHeight","_this$props","eventSelection","isMirror","_computeFgSegPlacemen","renderHiddenGroups","segPlacement","instanceId","eventRange","instance","isVisible","vStyle","computeSegVStyle","hStyle","computeSegHStyle","left","right","isInset","visibility","isSelected","_this$props2","hiddenGroup","positionCss","compileSegsFromEntries","fillType","children","_this$props3","segHCoords","_this$context2","isRtl","shouldOverlap","slotEventOverlap","nearCoord","farCoord","zIndex","_ref","hiddenInstances","segEntries","segEntry","TimeColsContent","_BaseComponent7","_super9","_this7","splitFgEventSegs","splitBgEventSegs","splitBusinessHourSegs","splitNowIndicatorSegs","splitDateSelectionSegs","splitEventDrag","splitEventResize","cellElRefs","_this8","cells","fgEventSegsByRow","bgEventSegsByRow","businessHourSegsByRow","nowIndicatorSegsByRow","dateSelectionSegsByRow","eventDragByRow","eventResizeByRow","cell","updateCoords","onColCoords","collectCellEls","TimeCols","_DateComponent2","_super10","_this9","processSlotOptions","handleRootEl","el","registerInteractiveComponent","_assertThisInitialized","isHitComboAllowed","unregisterInteractiveComponent","handleScrollRequest","request","onScrollTopRequest","ceil","handleColCoords","colCoords","onSlatCoords","scrollResponder","createScrollResponder","prevProps","update","detach","queryHit","positionLeft","positionTop","_this$context3","_this$processSlotOpti","snapDuration","snapsPerSlot","colIndex","leftToIndex","topToIndex","slatTop","slatHeight","partial","localSnapIndex","snapIndex","dayDate","add","dayEl","lefts","rights","layer","snapDurationOverride","DayTimeColsSlicer","_Slicer","_super11","sliceRange","dayRanges","segRange","isStart","isEnd","DayTimeCols","_DateComponent3","_super12","_this10","buildDayRanges","slicer","timeColsRef","_this11","dayTableModel","_context$options","nextDayThreshold","sliceProps","sliceNowDate","ranges","_iterator5","headerDates","_step5","STOCK_SUB_DURATIONS","hours","minutes","seconds","buildSlatMetas","explicitLabelInterval","dayStart","Date","slatTime","slatIterator","labelInterval","computeLabelInterval","metas","toISOString","slotsPerLabel","DayTimeColsView","_TimeColsView","_super13","_this12","buildTimeColsModel","_this13","_this$context4","dateProfileGenerator","splitProps","slotLabelInterval","hasAttachedAxis","hasDetachedAxis","headerContent","dayHeaders","dates","datesRepDistinctDays","renderIntro","allDaySlot","colGroupNode","renderRowIntro","showWeekNumbers","headerAlignElRef","timeGridContent","daySeries","css_248z"],"sources":["C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@fullcalendar/timegrid/internal.js"],"sourcesContent":["import { Splitter, hasBgRendering, createFormatter, ViewContextType, ContentContainer, BaseComponent, DateComponent, diffDays, buildNavLinkAttrs, WeekNumberContainer, getStickyHeaderDates, ViewContainer, SimpleScrollGrid, getStickyFooterScrollbar, NowTimer, NowIndicatorContainer, renderScrollShim, rangeContainsMarker, startOfDay, asRoughMs, createDuration, RefMap, PositionCache, MoreLinkContainer, SegHierarchy, groupIntersectingEntries, binarySearch, getEntrySpanEnd, buildEntryKey, StandardEvent, memoize, sortEventSegs, DayCellContainer, hasCustomDayCellContent, getSegMeta, buildIsoString, computeEarliestSegStart, buildEventRangeKey, BgEvent, renderFill, addDurations, multiplyDuration, wholeDivideDurations, Slicer, intersectRanges, formatIsoTimeString, DayHeader, DaySeriesModel, DayTableModel, injectStyles } from '@fullcalendar/core/internal.js';\nimport { createElement, createRef, Fragment } from '@fullcalendar/core/preact.js';\nimport { DayTable } from '@fullcalendar/daygrid/internal.js';\n\nclass AllDaySplitter extends Splitter {\n    getKeyInfo() {\n        return {\n            allDay: {},\n            timed: {},\n        };\n    }\n    getKeysForDateSpan(dateSpan) {\n        if (dateSpan.allDay) {\n            return ['allDay'];\n        }\n        return ['timed'];\n    }\n    getKeysForEventDef(eventDef) {\n        if (!eventDef.allDay) {\n            return ['timed'];\n        }\n        if (hasBgRendering(eventDef)) {\n            return ['timed', 'allDay'];\n        }\n        return ['allDay'];\n    }\n}\n\nconst DEFAULT_SLAT_LABEL_FORMAT = createFormatter({\n    hour: 'numeric',\n    minute: '2-digit',\n    omitZeroMinute: true,\n    meridiem: 'short',\n});\nfunction TimeColsAxisCell(props) {\n    let classNames = [\n        'fc-timegrid-slot',\n        'fc-timegrid-slot-label',\n        props.isLabeled ? 'fc-scrollgrid-shrink' : 'fc-timegrid-slot-minor',\n    ];\n    return (createElement(ViewContextType.Consumer, null, (context) => {\n        if (!props.isLabeled) {\n            return (createElement(\"td\", { className: classNames.join(' '), \"data-time\": props.isoTimeStr }));\n        }\n        let { dateEnv, options, viewApi } = context;\n        let labelFormat = // TODO: fully pre-parse\n         options.slotLabelFormat == null ? DEFAULT_SLAT_LABEL_FORMAT :\n            Array.isArray(options.slotLabelFormat) ? createFormatter(options.slotLabelFormat[0]) :\n                createFormatter(options.slotLabelFormat);\n        let renderProps = {\n            level: 0,\n            time: props.time,\n            date: dateEnv.toDate(props.date),\n            view: viewApi,\n            text: dateEnv.format(props.date, labelFormat),\n        };\n        return (createElement(ContentContainer, { elTag: \"td\", elClasses: classNames, elAttrs: {\n                'data-time': props.isoTimeStr,\n            }, renderProps: renderProps, generatorName: \"slotLabelContent\", customGenerator: options.slotLabelContent, defaultGenerator: renderInnerContent, classNameGenerator: options.slotLabelClassNames, didMount: options.slotLabelDidMount, willUnmount: options.slotLabelWillUnmount }, (InnerContent) => (createElement(\"div\", { className: \"fc-timegrid-slot-label-frame fc-scrollgrid-shrink-frame\" },\n            createElement(InnerContent, { elTag: \"div\", elClasses: [\n                    'fc-timegrid-slot-label-cushion',\n                    'fc-scrollgrid-shrink-cushion',\n                ] })))));\n    }));\n}\nfunction renderInnerContent(props) {\n    return props.text;\n}\n\nclass TimeBodyAxis extends BaseComponent {\n    render() {\n        return this.props.slatMetas.map((slatMeta) => (createElement(\"tr\", { key: slatMeta.key },\n            createElement(TimeColsAxisCell, Object.assign({}, slatMeta)))));\n    }\n}\n\nconst DEFAULT_WEEK_NUM_FORMAT = createFormatter({ week: 'short' });\nconst AUTO_ALL_DAY_MAX_EVENT_ROWS = 5;\nclass TimeColsView extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.allDaySplitter = new AllDaySplitter(); // for use by subclasses\n        this.headerElRef = createRef();\n        this.rootElRef = createRef();\n        this.scrollerElRef = createRef();\n        this.state = {\n            slatCoords: null,\n        };\n        this.handleScrollTopRequest = (scrollTop) => {\n            let scrollerEl = this.scrollerElRef.current;\n            if (scrollerEl) { // TODO: not sure how this could ever be null. weirdness with the reducer\n                scrollerEl.scrollTop = scrollTop;\n            }\n        };\n        /* Header Render Methods\n        ------------------------------------------------------------------------------------------------------------------*/\n        this.renderHeadAxis = (rowKey, frameHeight = '') => {\n            let { options } = this.context;\n            let { dateProfile } = this.props;\n            let range = dateProfile.renderRange;\n            let dayCnt = diffDays(range.start, range.end);\n            // only do in day views (to avoid doing in week views that dont need it)\n            let navLinkAttrs = (dayCnt === 1)\n                ? buildNavLinkAttrs(this.context, range.start, 'week')\n                : {};\n            if (options.weekNumbers && rowKey === 'day') {\n                return (createElement(WeekNumberContainer, { elTag: \"th\", elClasses: [\n                        'fc-timegrid-axis',\n                        'fc-scrollgrid-shrink',\n                    ], elAttrs: {\n                        'aria-hidden': true,\n                    }, date: range.start, defaultFormat: DEFAULT_WEEK_NUM_FORMAT }, (InnerContent) => (createElement(\"div\", { className: [\n                        'fc-timegrid-axis-frame',\n                        'fc-scrollgrid-shrink-frame',\n                        'fc-timegrid-axis-frame-liquid',\n                    ].join(' '), style: { height: frameHeight } },\n                    createElement(InnerContent, { elTag: \"a\", elClasses: [\n                            'fc-timegrid-axis-cushion',\n                            'fc-scrollgrid-shrink-cushion',\n                            'fc-scrollgrid-sync-inner',\n                        ], elAttrs: navLinkAttrs })))));\n            }\n            return (createElement(\"th\", { \"aria-hidden\": true, className: \"fc-timegrid-axis\" },\n                createElement(\"div\", { className: \"fc-timegrid-axis-frame\", style: { height: frameHeight } })));\n        };\n        /* Table Component Render Methods\n        ------------------------------------------------------------------------------------------------------------------*/\n        // only a one-way height sync. we don't send the axis inner-content height to the DayGrid,\n        // but DayGrid still needs to have classNames on inner elements in order to measure.\n        this.renderTableRowAxis = (rowHeight) => {\n            let { options, viewApi } = this.context;\n            let renderProps = {\n                text: options.allDayText,\n                view: viewApi,\n            };\n            return (\n            // TODO: make reusable hook. used in list view too\n            createElement(ContentContainer, { elTag: \"td\", elClasses: [\n                    'fc-timegrid-axis',\n                    'fc-scrollgrid-shrink',\n                ], elAttrs: {\n                    'aria-hidden': true,\n                }, renderProps: renderProps, generatorName: \"allDayContent\", customGenerator: options.allDayContent, defaultGenerator: renderAllDayInner, classNameGenerator: options.allDayClassNames, didMount: options.allDayDidMount, willUnmount: options.allDayWillUnmount }, (InnerContent) => (createElement(\"div\", { className: [\n                    'fc-timegrid-axis-frame',\n                    'fc-scrollgrid-shrink-frame',\n                    rowHeight == null ? ' fc-timegrid-axis-frame-liquid' : '',\n                ].join(' '), style: { height: rowHeight } },\n                createElement(InnerContent, { elTag: \"span\", elClasses: [\n                        'fc-timegrid-axis-cushion',\n                        'fc-scrollgrid-shrink-cushion',\n                        'fc-scrollgrid-sync-inner',\n                    ] })))));\n        };\n        this.handleSlatCoords = (slatCoords) => {\n            this.setState({ slatCoords });\n        };\n    }\n    // rendering\n    // ----------------------------------------------------------------------------------------------------\n    renderSimpleLayout(headerRowContent, allDayContent, timeContent) {\n        let { context, props } = this;\n        let sections = [];\n        let stickyHeaderDates = getStickyHeaderDates(context.options);\n        if (headerRowContent) {\n            sections.push({\n                type: 'header',\n                key: 'header',\n                isSticky: stickyHeaderDates,\n                chunk: {\n                    elRef: this.headerElRef,\n                    tableClassName: 'fc-col-header',\n                    rowContent: headerRowContent,\n                },\n            });\n        }\n        if (allDayContent) {\n            sections.push({\n                type: 'body',\n                key: 'all-day',\n                chunk: { content: allDayContent },\n            });\n            sections.push({\n                type: 'body',\n                key: 'all-day-divider',\n                outerContent: ( // TODO: rename to cellContent so don't need to define <tr>?\n                createElement(\"tr\", { role: \"presentation\", className: \"fc-scrollgrid-section\" },\n                    createElement(\"td\", { className: 'fc-timegrid-divider ' + context.theme.getClass('tableCellShaded') }))),\n            });\n        }\n        sections.push({\n            type: 'body',\n            key: 'body',\n            liquid: true,\n            expandRows: Boolean(context.options.expandRows),\n            chunk: {\n                scrollerElRef: this.scrollerElRef,\n                content: timeContent,\n            },\n        });\n        return (createElement(ViewContainer, { elRef: this.rootElRef, elClasses: ['fc-timegrid'], viewSpec: context.viewSpec },\n            createElement(SimpleScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, collapsibleWidth: props.forPrint, cols: [{ width: 'shrink' }], sections: sections })));\n    }\n    renderHScrollLayout(headerRowContent, allDayContent, timeContent, colCnt, dayMinWidth, slatMetas, slatCoords) {\n        let ScrollGrid = this.context.pluginHooks.scrollGridImpl;\n        if (!ScrollGrid) {\n            throw new Error('No ScrollGrid implementation');\n        }\n        let { context, props } = this;\n        let stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options);\n        let stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options);\n        let sections = [];\n        if (headerRowContent) {\n            sections.push({\n                type: 'header',\n                key: 'header',\n                isSticky: stickyHeaderDates,\n                syncRowHeights: true,\n                chunks: [\n                    {\n                        key: 'axis',\n                        rowContent: (arg) => (createElement(\"tr\", { role: \"presentation\" }, this.renderHeadAxis('day', arg.rowSyncHeights[0]))),\n                    },\n                    {\n                        key: 'cols',\n                        elRef: this.headerElRef,\n                        tableClassName: 'fc-col-header',\n                        rowContent: headerRowContent,\n                    },\n                ],\n            });\n        }\n        if (allDayContent) {\n            sections.push({\n                type: 'body',\n                key: 'all-day',\n                syncRowHeights: true,\n                chunks: [\n                    {\n                        key: 'axis',\n                        rowContent: (contentArg) => (createElement(\"tr\", { role: \"presentation\" }, this.renderTableRowAxis(contentArg.rowSyncHeights[0]))),\n                    },\n                    {\n                        key: 'cols',\n                        content: allDayContent,\n                    },\n                ],\n            });\n            sections.push({\n                key: 'all-day-divider',\n                type: 'body',\n                outerContent: ( // TODO: rename to cellContent so don't need to define <tr>?\n                createElement(\"tr\", { role: \"presentation\", className: \"fc-scrollgrid-section\" },\n                    createElement(\"td\", { colSpan: 2, className: 'fc-timegrid-divider ' + context.theme.getClass('tableCellShaded') }))),\n            });\n        }\n        let isNowIndicator = context.options.nowIndicator;\n        sections.push({\n            type: 'body',\n            key: 'body',\n            liquid: true,\n            expandRows: Boolean(context.options.expandRows),\n            chunks: [\n                {\n                    key: 'axis',\n                    content: (arg) => (\n                    // TODO: make this now-indicator arrow more DRY with TimeColsContent\n                    createElement(\"div\", { className: \"fc-timegrid-axis-chunk\" },\n                        createElement(\"table\", { \"aria-hidden\": true, style: { height: arg.expandRows ? arg.clientHeight : '' } },\n                            arg.tableColGroupNode,\n                            createElement(\"tbody\", null,\n                                createElement(TimeBodyAxis, { slatMetas: slatMetas }))),\n                        createElement(\"div\", { className: \"fc-timegrid-now-indicator-container\" },\n                            createElement(NowTimer, { unit: isNowIndicator ? 'minute' : 'day' /* hacky */ }, (nowDate) => {\n                                let nowIndicatorTop = isNowIndicator &&\n                                    slatCoords &&\n                                    slatCoords.safeComputeTop(nowDate); // might return void\n                                if (typeof nowIndicatorTop === 'number') {\n                                    return (createElement(NowIndicatorContainer, { elClasses: ['fc-timegrid-now-indicator-arrow'], elStyle: { top: nowIndicatorTop }, isAxis: true, date: nowDate }));\n                                }\n                                return null;\n                            })))),\n                },\n                {\n                    key: 'cols',\n                    scrollerElRef: this.scrollerElRef,\n                    content: timeContent,\n                },\n            ],\n        });\n        if (stickyFooterScrollbar) {\n            sections.push({\n                key: 'footer',\n                type: 'footer',\n                isSticky: true,\n                chunks: [\n                    {\n                        key: 'axis',\n                        content: renderScrollShim,\n                    },\n                    {\n                        key: 'cols',\n                        content: renderScrollShim,\n                    },\n                ],\n            });\n        }\n        return (createElement(ViewContainer, { elRef: this.rootElRef, elClasses: ['fc-timegrid'], viewSpec: context.viewSpec },\n            createElement(ScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, forPrint: props.forPrint, collapsibleWidth: false, colGroups: [\n                    { width: 'shrink', cols: [{ width: 'shrink' }] },\n                    { cols: [{ span: colCnt, minWidth: dayMinWidth }] },\n                ], sections: sections })));\n    }\n    /* Dimensions\n    ------------------------------------------------------------------------------------------------------------------*/\n    getAllDayMaxEventProps() {\n        let { dayMaxEvents, dayMaxEventRows } = this.context.options;\n        if (dayMaxEvents === true || dayMaxEventRows === true) { // is auto?\n            dayMaxEvents = undefined;\n            dayMaxEventRows = AUTO_ALL_DAY_MAX_EVENT_ROWS; // make sure \"auto\" goes to a real number\n        }\n        return { dayMaxEvents, dayMaxEventRows };\n    }\n}\nfunction renderAllDayInner(renderProps) {\n    return renderProps.text;\n}\n\nclass TimeColsSlatsCoords {\n    constructor(positions, dateProfile, slotDuration) {\n        this.positions = positions;\n        this.dateProfile = dateProfile;\n        this.slotDuration = slotDuration;\n    }\n    safeComputeTop(date) {\n        let { dateProfile } = this;\n        if (rangeContainsMarker(dateProfile.currentRange, date)) {\n            let startOfDayDate = startOfDay(date);\n            let timeMs = date.valueOf() - startOfDayDate.valueOf();\n            if (timeMs >= asRoughMs(dateProfile.slotMinTime) &&\n                timeMs < asRoughMs(dateProfile.slotMaxTime)) {\n                return this.computeTimeTop(createDuration(timeMs));\n            }\n        }\n        return null;\n    }\n    // Computes the top coordinate, relative to the bounds of the grid, of the given date.\n    // A `startOfDayDate` must be given for avoiding ambiguity over how to treat midnight.\n    computeDateTop(when, startOfDayDate) {\n        if (!startOfDayDate) {\n            startOfDayDate = startOfDay(when);\n        }\n        return this.computeTimeTop(createDuration(when.valueOf() - startOfDayDate.valueOf()));\n    }\n    // Computes the top coordinate, relative to the bounds of the grid, of the given time (a Duration).\n    // This is a makeshify way to compute the time-top. Assumes all slatMetas dates are uniform.\n    // Eventually allow computation with arbirary slat dates.\n    computeTimeTop(duration) {\n        let { positions, dateProfile } = this;\n        let len = positions.els.length;\n        // floating-point value of # of slots covered\n        let slatCoverage = (duration.milliseconds - asRoughMs(dateProfile.slotMinTime)) / asRoughMs(this.slotDuration);\n        let slatIndex;\n        let slatRemainder;\n        // compute a floating-point number for how many slats should be progressed through.\n        // from 0 to number of slats (inclusive)\n        // constrained because slotMinTime/slotMaxTime might be customized.\n        slatCoverage = Math.max(0, slatCoverage);\n        slatCoverage = Math.min(len, slatCoverage);\n        // an integer index of the furthest whole slat\n        // from 0 to number slats (*exclusive*, so len-1)\n        slatIndex = Math.floor(slatCoverage);\n        slatIndex = Math.min(slatIndex, len - 1);\n        // how much further through the slatIndex slat (from 0.0-1.0) must be covered in addition.\n        // could be 1.0 if slatCoverage is covering *all* the slots\n        slatRemainder = slatCoverage - slatIndex;\n        return positions.tops[slatIndex] +\n            positions.getHeight(slatIndex) * slatRemainder;\n    }\n}\n\nclass TimeColsSlatsBody extends BaseComponent {\n    render() {\n        let { props, context } = this;\n        let { options } = context;\n        let { slatElRefs } = props;\n        return (createElement(\"tbody\", null, props.slatMetas.map((slatMeta, i) => {\n            let renderProps = {\n                time: slatMeta.time,\n                date: context.dateEnv.toDate(slatMeta.date),\n                view: context.viewApi,\n            };\n            return (createElement(\"tr\", { key: slatMeta.key, ref: slatElRefs.createRef(slatMeta.key) },\n                props.axis && (createElement(TimeColsAxisCell, Object.assign({}, slatMeta))),\n                createElement(ContentContainer, { elTag: \"td\", elClasses: [\n                        'fc-timegrid-slot',\n                        'fc-timegrid-slot-lane',\n                        !slatMeta.isLabeled && 'fc-timegrid-slot-minor',\n                    ], elAttrs: {\n                        'data-time': slatMeta.isoTimeStr,\n                    }, renderProps: renderProps, generatorName: \"slotLaneContent\", customGenerator: options.slotLaneContent, classNameGenerator: options.slotLaneClassNames, didMount: options.slotLaneDidMount, willUnmount: options.slotLaneWillUnmount })));\n        })));\n    }\n}\n\n/*\nfor the horizontal \"slats\" that run width-wise. Has a time axis on a side. Depends on RTL.\n*/\nclass TimeColsSlats extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.rootElRef = createRef();\n        this.slatElRefs = new RefMap();\n    }\n    render() {\n        let { props, context } = this;\n        return (createElement(\"div\", { ref: this.rootElRef, className: \"fc-timegrid-slots\" },\n            createElement(\"table\", { \"aria-hidden\": true, className: context.theme.getClass('table'), style: {\n                    minWidth: props.tableMinWidth,\n                    width: props.clientWidth,\n                    height: props.minHeight,\n                } },\n                props.tableColGroupNode /* relies on there only being a single <col> for the axis */,\n                createElement(TimeColsSlatsBody, { slatElRefs: this.slatElRefs, axis: props.axis, slatMetas: props.slatMetas }))));\n    }\n    componentDidMount() {\n        this.updateSizing();\n    }\n    componentDidUpdate() {\n        this.updateSizing();\n    }\n    componentWillUnmount() {\n        if (this.props.onCoords) {\n            this.props.onCoords(null);\n        }\n    }\n    updateSizing() {\n        let { context, props } = this;\n        if (props.onCoords &&\n            props.clientWidth !== null // means sizing has stabilized\n        ) {\n            let rootEl = this.rootElRef.current;\n            if (rootEl.offsetHeight) { // not hidden by css\n                props.onCoords(new TimeColsSlatsCoords(new PositionCache(this.rootElRef.current, collectSlatEls(this.slatElRefs.currentMap, props.slatMetas), false, true), this.props.dateProfile, context.options.slotDuration));\n            }\n        }\n    }\n}\nfunction collectSlatEls(elMap, slatMetas) {\n    return slatMetas.map((slatMeta) => elMap[slatMeta.key]);\n}\n\nfunction splitSegsByCol(segs, colCnt) {\n    let segsByCol = [];\n    let i;\n    for (i = 0; i < colCnt; i += 1) {\n        segsByCol.push([]);\n    }\n    if (segs) {\n        for (i = 0; i < segs.length; i += 1) {\n            segsByCol[segs[i].col].push(segs[i]);\n        }\n    }\n    return segsByCol;\n}\nfunction splitInteractionByCol(ui, colCnt) {\n    let byRow = [];\n    if (!ui) {\n        for (let i = 0; i < colCnt; i += 1) {\n            byRow[i] = null;\n        }\n    }\n    else {\n        for (let i = 0; i < colCnt; i += 1) {\n            byRow[i] = {\n                affectedInstances: ui.affectedInstances,\n                isEvent: ui.isEvent,\n                segs: [],\n            };\n        }\n        for (let seg of ui.segs) {\n            byRow[seg.col].segs.push(seg);\n        }\n    }\n    return byRow;\n}\n\nclass TimeColMoreLink extends BaseComponent {\n    render() {\n        let { props } = this;\n        return (createElement(MoreLinkContainer, { elClasses: ['fc-timegrid-more-link'], elStyle: {\n                top: props.top,\n                bottom: props.bottom,\n            }, allDayDate: null, moreCnt: props.hiddenSegs.length, allSegs: props.hiddenSegs, hiddenSegs: props.hiddenSegs, extraDateSpan: props.extraDateSpan, dateProfile: props.dateProfile, todayRange: props.todayRange, popoverContent: () => renderPlainFgSegs(props.hiddenSegs, props), defaultGenerator: renderMoreLinkInner, forceTimed: true }, (InnerContent) => (createElement(InnerContent, { elTag: \"div\", elClasses: ['fc-timegrid-more-link-inner', 'fc-sticky'] }))));\n    }\n}\nfunction renderMoreLinkInner(props) {\n    return props.shortText;\n}\n\n// segInputs assumed sorted\nfunction buildPositioning(segInputs, strictOrder, maxStackCnt) {\n    let hierarchy = new SegHierarchy();\n    if (strictOrder != null) {\n        hierarchy.strictOrder = strictOrder;\n    }\n    if (maxStackCnt != null) {\n        hierarchy.maxStackCnt = maxStackCnt;\n    }\n    let hiddenEntries = hierarchy.addSegs(segInputs);\n    let hiddenGroups = groupIntersectingEntries(hiddenEntries);\n    let web = buildWeb(hierarchy);\n    web = stretchWeb(web, 1); // all levelCoords/thickness will have 0.0-1.0\n    let segRects = webToRects(web);\n    return { segRects, hiddenGroups };\n}\nfunction buildWeb(hierarchy) {\n    const { entriesByLevel } = hierarchy;\n    const buildNode = cacheable((level, lateral) => level + ':' + lateral, (level, lateral) => {\n        let siblingRange = findNextLevelSegs(hierarchy, level, lateral);\n        let nextLevelRes = buildNodes(siblingRange, buildNode);\n        let entry = entriesByLevel[level][lateral];\n        return [\n            Object.assign(Object.assign({}, entry), { nextLevelNodes: nextLevelRes[0] }),\n            entry.thickness + nextLevelRes[1], // the pressure builds\n        ];\n    });\n    return buildNodes(entriesByLevel.length\n        ? { level: 0, lateralStart: 0, lateralEnd: entriesByLevel[0].length }\n        : null, buildNode)[0];\n}\nfunction buildNodes(siblingRange, buildNode) {\n    if (!siblingRange) {\n        return [[], 0];\n    }\n    let { level, lateralStart, lateralEnd } = siblingRange;\n    let lateral = lateralStart;\n    let pairs = [];\n    while (lateral < lateralEnd) {\n        pairs.push(buildNode(level, lateral));\n        lateral += 1;\n    }\n    pairs.sort(cmpDescPressures);\n    return [\n        pairs.map(extractNode),\n        pairs[0][1], // first item's pressure\n    ];\n}\nfunction cmpDescPressures(a, b) {\n    return b[1] - a[1];\n}\nfunction extractNode(a) {\n    return a[0];\n}\nfunction findNextLevelSegs(hierarchy, subjectLevel, subjectLateral) {\n    let { levelCoords, entriesByLevel } = hierarchy;\n    let subjectEntry = entriesByLevel[subjectLevel][subjectLateral];\n    let afterSubject = levelCoords[subjectLevel] + subjectEntry.thickness;\n    let levelCnt = levelCoords.length;\n    let level = subjectLevel;\n    // skip past levels that are too high up\n    for (; level < levelCnt && levelCoords[level] < afterSubject; level += 1)\n        ; // do nothing\n    for (; level < levelCnt; level += 1) {\n        let entries = entriesByLevel[level];\n        let entry;\n        let searchIndex = binarySearch(entries, subjectEntry.span.start, getEntrySpanEnd);\n        let lateralStart = searchIndex[0] + searchIndex[1]; // if exact match (which doesn't collide), go to next one\n        let lateralEnd = lateralStart;\n        while ( // loop through entries that horizontally intersect\n        (entry = entries[lateralEnd]) && // but not past the whole seg list\n            entry.span.start < subjectEntry.span.end) {\n            lateralEnd += 1;\n        }\n        if (lateralStart < lateralEnd) {\n            return { level, lateralStart, lateralEnd };\n        }\n    }\n    return null;\n}\nfunction stretchWeb(topLevelNodes, totalThickness) {\n    const stretchNode = cacheable((node, startCoord, prevThickness) => buildEntryKey(node), (node, startCoord, prevThickness) => {\n        let { nextLevelNodes, thickness } = node;\n        let allThickness = thickness + prevThickness;\n        let thicknessFraction = thickness / allThickness;\n        let endCoord;\n        let newChildren = [];\n        if (!nextLevelNodes.length) {\n            endCoord = totalThickness;\n        }\n        else {\n            for (let childNode of nextLevelNodes) {\n                if (endCoord === undefined) {\n                    let res = stretchNode(childNode, startCoord, allThickness);\n                    endCoord = res[0];\n                    newChildren.push(res[1]);\n                }\n                else {\n                    let res = stretchNode(childNode, endCoord, 0);\n                    newChildren.push(res[1]);\n                }\n            }\n        }\n        let newThickness = (endCoord - startCoord) * thicknessFraction;\n        return [endCoord - newThickness, Object.assign(Object.assign({}, node), { thickness: newThickness, nextLevelNodes: newChildren })];\n    });\n    return topLevelNodes.map((node) => stretchNode(node, 0, 0)[1]);\n}\n// not sorted in any particular order\nfunction webToRects(topLevelNodes) {\n    let rects = [];\n    const processNode = cacheable((node, levelCoord, stackDepth) => buildEntryKey(node), (node, levelCoord, stackDepth) => {\n        let rect = Object.assign(Object.assign({}, node), { levelCoord,\n            stackDepth, stackForward: 0 });\n        rects.push(rect);\n        return (rect.stackForward = processNodes(node.nextLevelNodes, levelCoord + node.thickness, stackDepth + 1) + 1);\n    });\n    function processNodes(nodes, levelCoord, stackDepth) {\n        let stackForward = 0;\n        for (let node of nodes) {\n            stackForward = Math.max(processNode(node, levelCoord, stackDepth), stackForward);\n        }\n        return stackForward;\n    }\n    processNodes(topLevelNodes, 0, 0);\n    return rects; // TODO: sort rects by levelCoord to be consistent with toRects?\n}\n// TODO: move to general util\nfunction cacheable(keyFunc, workFunc) {\n    const cache = {};\n    return (...args) => {\n        let key = keyFunc(...args);\n        return (key in cache)\n            ? cache[key]\n            : (cache[key] = workFunc(...args));\n    };\n}\n\nfunction computeSegVCoords(segs, colDate, slatCoords = null, eventMinHeight = 0) {\n    let vcoords = [];\n    if (slatCoords) {\n        for (let i = 0; i < segs.length; i += 1) {\n            let seg = segs[i];\n            let spanStart = slatCoords.computeDateTop(seg.start, colDate);\n            let spanEnd = Math.max(spanStart + (eventMinHeight || 0), // :(\n            slatCoords.computeDateTop(seg.end, colDate));\n            vcoords.push({\n                start: Math.round(spanStart),\n                end: Math.round(spanEnd), //\n            });\n        }\n    }\n    return vcoords;\n}\nfunction computeFgSegPlacements(segs, segVCoords, // might not have for every seg\neventOrderStrict, eventMaxStack) {\n    let segInputs = [];\n    let dumbSegs = []; // segs without coords\n    for (let i = 0; i < segs.length; i += 1) {\n        let vcoords = segVCoords[i];\n        if (vcoords) {\n            segInputs.push({\n                index: i,\n                thickness: 1,\n                span: vcoords,\n            });\n        }\n        else {\n            dumbSegs.push(segs[i]);\n        }\n    }\n    let { segRects, hiddenGroups } = buildPositioning(segInputs, eventOrderStrict, eventMaxStack);\n    let segPlacements = [];\n    for (let segRect of segRects) {\n        segPlacements.push({\n            seg: segs[segRect.index],\n            rect: segRect,\n        });\n    }\n    for (let dumbSeg of dumbSegs) {\n        segPlacements.push({ seg: dumbSeg, rect: null });\n    }\n    return { segPlacements, hiddenGroups };\n}\n\nconst DEFAULT_TIME_FORMAT = createFormatter({\n    hour: 'numeric',\n    minute: '2-digit',\n    meridiem: false,\n});\nclass TimeColEvent extends BaseComponent {\n    render() {\n        return (createElement(StandardEvent, Object.assign({}, this.props, { elClasses: [\n                'fc-timegrid-event',\n                'fc-v-event',\n                this.props.isShort && 'fc-timegrid-event-short',\n            ], defaultTimeFormat: DEFAULT_TIME_FORMAT })));\n    }\n}\n\nclass TimeCol extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.sortEventSegs = memoize(sortEventSegs);\n    }\n    // TODO: memoize event-placement?\n    render() {\n        let { props, context } = this;\n        let { options } = context;\n        let isSelectMirror = options.selectMirror;\n        let mirrorSegs = // yuck\n         (props.eventDrag && props.eventDrag.segs) ||\n            (props.eventResize && props.eventResize.segs) ||\n            (isSelectMirror && props.dateSelectionSegs) ||\n            [];\n        let interactionAffectedInstances = // TODO: messy way to compute this\n         (props.eventDrag && props.eventDrag.affectedInstances) ||\n            (props.eventResize && props.eventResize.affectedInstances) ||\n            {};\n        let sortedFgSegs = this.sortEventSegs(props.fgEventSegs, options.eventOrder);\n        return (createElement(DayCellContainer, { elTag: \"td\", elRef: props.elRef, elClasses: [\n                'fc-timegrid-col',\n                ...(props.extraClassNames || []),\n            ], elAttrs: Object.assign({ role: 'gridcell' }, props.extraDataAttrs), date: props.date, dateProfile: props.dateProfile, todayRange: props.todayRange, extraRenderProps: props.extraRenderProps }, (InnerContent) => (createElement(\"div\", { className: \"fc-timegrid-col-frame\" },\n            createElement(\"div\", { className: \"fc-timegrid-col-bg\" },\n                this.renderFillSegs(props.businessHourSegs, 'non-business'),\n                this.renderFillSegs(props.bgEventSegs, 'bg-event'),\n                this.renderFillSegs(props.dateSelectionSegs, 'highlight')),\n            createElement(\"div\", { className: \"fc-timegrid-col-events\" }, this.renderFgSegs(sortedFgSegs, interactionAffectedInstances, false, false, false)),\n            createElement(\"div\", { className: \"fc-timegrid-col-events\" }, this.renderFgSegs(mirrorSegs, {}, Boolean(props.eventDrag), Boolean(props.eventResize), Boolean(isSelectMirror), 'mirror')),\n            createElement(\"div\", { className: \"fc-timegrid-now-indicator-container\" }, this.renderNowIndicator(props.nowIndicatorSegs)),\n            hasCustomDayCellContent(options) && (createElement(InnerContent, { elTag: \"div\", elClasses: ['fc-timegrid-col-misc'] }))))));\n    }\n    renderFgSegs(sortedFgSegs, segIsInvisible, isDragging, isResizing, isDateSelecting, forcedKey) {\n        let { props } = this;\n        if (props.forPrint) {\n            return renderPlainFgSegs(sortedFgSegs, props);\n        }\n        return this.renderPositionedFgSegs(sortedFgSegs, segIsInvisible, isDragging, isResizing, isDateSelecting, forcedKey);\n    }\n    renderPositionedFgSegs(segs, // if not mirror, needs to be sorted\n    segIsInvisible, isDragging, isResizing, isDateSelecting, forcedKey) {\n        let { eventMaxStack, eventShortHeight, eventOrderStrict, eventMinHeight } = this.context.options;\n        let { date, slatCoords, eventSelection, todayRange, nowDate } = this.props;\n        let isMirror = isDragging || isResizing || isDateSelecting;\n        let segVCoords = computeSegVCoords(segs, date, slatCoords, eventMinHeight);\n        let { segPlacements, hiddenGroups } = computeFgSegPlacements(segs, segVCoords, eventOrderStrict, eventMaxStack);\n        return (createElement(Fragment, null,\n            this.renderHiddenGroups(hiddenGroups, segs),\n            segPlacements.map((segPlacement) => {\n                let { seg, rect } = segPlacement;\n                let instanceId = seg.eventRange.instance.instanceId;\n                let isVisible = isMirror || Boolean(!segIsInvisible[instanceId] && rect);\n                let vStyle = computeSegVStyle(rect && rect.span);\n                let hStyle = (!isMirror && rect) ? this.computeSegHStyle(rect) : { left: 0, right: 0 };\n                let isInset = Boolean(rect) && rect.stackForward > 0;\n                let isShort = Boolean(rect) && (rect.span.end - rect.span.start) < eventShortHeight; // look at other places for this problem\n                return (createElement(\"div\", { className: 'fc-timegrid-event-harness' +\n                        (isInset ? ' fc-timegrid-event-harness-inset' : ''), key: forcedKey || instanceId, style: Object.assign(Object.assign({ visibility: isVisible ? '' : 'hidden' }, vStyle), hStyle) },\n                    createElement(TimeColEvent, Object.assign({ seg: seg, isDragging: isDragging, isResizing: isResizing, isDateSelecting: isDateSelecting, isSelected: instanceId === eventSelection, isShort: isShort }, getSegMeta(seg, todayRange, nowDate)))));\n            })));\n    }\n    // will already have eventMinHeight applied because segInputs already had it\n    renderHiddenGroups(hiddenGroups, segs) {\n        let { extraDateSpan, dateProfile, todayRange, nowDate, eventSelection, eventDrag, eventResize } = this.props;\n        return (createElement(Fragment, null, hiddenGroups.map((hiddenGroup) => {\n            let positionCss = computeSegVStyle(hiddenGroup.span);\n            let hiddenSegs = compileSegsFromEntries(hiddenGroup.entries, segs);\n            return (createElement(TimeColMoreLink, { key: buildIsoString(computeEarliestSegStart(hiddenSegs)), hiddenSegs: hiddenSegs, top: positionCss.top, bottom: positionCss.bottom, extraDateSpan: extraDateSpan, dateProfile: dateProfile, todayRange: todayRange, nowDate: nowDate, eventSelection: eventSelection, eventDrag: eventDrag, eventResize: eventResize }));\n        })));\n    }\n    renderFillSegs(segs, fillType) {\n        let { props, context } = this;\n        let segVCoords = computeSegVCoords(segs, props.date, props.slatCoords, context.options.eventMinHeight); // don't assume all populated\n        let children = segVCoords.map((vcoords, i) => {\n            let seg = segs[i];\n            return (createElement(\"div\", { key: buildEventRangeKey(seg.eventRange), className: \"fc-timegrid-bg-harness\", style: computeSegVStyle(vcoords) }, fillType === 'bg-event' ?\n                createElement(BgEvent, Object.assign({ seg: seg }, getSegMeta(seg, props.todayRange, props.nowDate))) :\n                renderFill(fillType)));\n        });\n        return createElement(Fragment, null, children);\n    }\n    renderNowIndicator(segs) {\n        let { slatCoords, date } = this.props;\n        if (!slatCoords) {\n            return null;\n        }\n        return segs.map((seg, i) => (createElement(NowIndicatorContainer\n        // key doesn't matter. will only ever be one\n        , { \n            // key doesn't matter. will only ever be one\n            key: i, elClasses: ['fc-timegrid-now-indicator-line'], elStyle: {\n                top: slatCoords.computeDateTop(seg.start, date),\n            }, isAxis: false, date: date })));\n    }\n    computeSegHStyle(segHCoords) {\n        let { isRtl, options } = this.context;\n        let shouldOverlap = options.slotEventOverlap;\n        let nearCoord = segHCoords.levelCoord; // the left side if LTR. the right side if RTL. floating-point\n        let farCoord = segHCoords.levelCoord + segHCoords.thickness; // the right side if LTR. the left side if RTL. floating-point\n        let left; // amount of space from left edge, a fraction of the total width\n        let right; // amount of space from right edge, a fraction of the total width\n        if (shouldOverlap) {\n            // double the width, but don't go beyond the maximum forward coordinate (1.0)\n            farCoord = Math.min(1, nearCoord + (farCoord - nearCoord) * 2);\n        }\n        if (isRtl) {\n            left = 1 - farCoord;\n            right = nearCoord;\n        }\n        else {\n            left = nearCoord;\n            right = 1 - farCoord;\n        }\n        let props = {\n            zIndex: segHCoords.stackDepth + 1,\n            left: left * 100 + '%',\n            right: right * 100 + '%',\n        };\n        if (shouldOverlap && !segHCoords.stackForward) {\n            // add padding to the edge so that forward stacked events don't cover the resizer's icon\n            props[isRtl ? 'marginLeft' : 'marginRight'] = 10 * 2; // 10 is a guesstimate of the icon's width\n        }\n        return props;\n    }\n}\nfunction renderPlainFgSegs(sortedFgSegs, { todayRange, nowDate, eventSelection, eventDrag, eventResize }) {\n    let hiddenInstances = (eventDrag ? eventDrag.affectedInstances : null) ||\n        (eventResize ? eventResize.affectedInstances : null) ||\n        {};\n    return (createElement(Fragment, null, sortedFgSegs.map((seg) => {\n        let instanceId = seg.eventRange.instance.instanceId;\n        return (createElement(\"div\", { key: instanceId, style: { visibility: hiddenInstances[instanceId] ? 'hidden' : '' } },\n            createElement(TimeColEvent, Object.assign({ seg: seg, isDragging: false, isResizing: false, isDateSelecting: false, isSelected: instanceId === eventSelection, isShort: false }, getSegMeta(seg, todayRange, nowDate)))));\n    })));\n}\nfunction computeSegVStyle(segVCoords) {\n    if (!segVCoords) {\n        return { top: '', bottom: '' };\n    }\n    return {\n        top: segVCoords.start,\n        bottom: -segVCoords.end,\n    };\n}\nfunction compileSegsFromEntries(segEntries, allSegs) {\n    return segEntries.map((segEntry) => allSegs[segEntry.index]);\n}\n\nclass TimeColsContent extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.splitFgEventSegs = memoize(splitSegsByCol);\n        this.splitBgEventSegs = memoize(splitSegsByCol);\n        this.splitBusinessHourSegs = memoize(splitSegsByCol);\n        this.splitNowIndicatorSegs = memoize(splitSegsByCol);\n        this.splitDateSelectionSegs = memoize(splitSegsByCol);\n        this.splitEventDrag = memoize(splitInteractionByCol);\n        this.splitEventResize = memoize(splitInteractionByCol);\n        this.rootElRef = createRef();\n        this.cellElRefs = new RefMap();\n    }\n    render() {\n        let { props, context } = this;\n        let nowIndicatorTop = context.options.nowIndicator &&\n            props.slatCoords &&\n            props.slatCoords.safeComputeTop(props.nowDate); // might return void\n        let colCnt = props.cells.length;\n        let fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, colCnt);\n        let bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, colCnt);\n        let businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, colCnt);\n        let nowIndicatorSegsByRow = this.splitNowIndicatorSegs(props.nowIndicatorSegs, colCnt);\n        let dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, colCnt);\n        let eventDragByRow = this.splitEventDrag(props.eventDrag, colCnt);\n        let eventResizeByRow = this.splitEventResize(props.eventResize, colCnt);\n        return (createElement(\"div\", { className: \"fc-timegrid-cols\", ref: this.rootElRef },\n            createElement(\"table\", { role: \"presentation\", style: {\n                    minWidth: props.tableMinWidth,\n                    width: props.clientWidth,\n                } },\n                props.tableColGroupNode,\n                createElement(\"tbody\", { role: \"presentation\" },\n                    createElement(\"tr\", { role: \"row\" },\n                        props.axis && (createElement(\"td\", { \"aria-hidden\": true, className: \"fc-timegrid-col fc-timegrid-axis\" },\n                            createElement(\"div\", { className: \"fc-timegrid-col-frame\" },\n                                createElement(\"div\", { className: \"fc-timegrid-now-indicator-container\" }, typeof nowIndicatorTop === 'number' && (createElement(NowIndicatorContainer, { elClasses: ['fc-timegrid-now-indicator-arrow'], elStyle: { top: nowIndicatorTop }, isAxis: true, date: props.nowDate })))))),\n                        props.cells.map((cell, i) => (createElement(TimeCol, { key: cell.key, elRef: this.cellElRefs.createRef(cell.key), dateProfile: props.dateProfile, date: cell.date, nowDate: props.nowDate, todayRange: props.todayRange, extraRenderProps: cell.extraRenderProps, extraDataAttrs: cell.extraDataAttrs, extraClassNames: cell.extraClassNames, extraDateSpan: cell.extraDateSpan, fgEventSegs: fgEventSegsByRow[i], bgEventSegs: bgEventSegsByRow[i], businessHourSegs: businessHourSegsByRow[i], nowIndicatorSegs: nowIndicatorSegsByRow[i], dateSelectionSegs: dateSelectionSegsByRow[i], eventDrag: eventDragByRow[i], eventResize: eventResizeByRow[i], slatCoords: props.slatCoords, eventSelection: props.eventSelection, forPrint: props.forPrint }))))))));\n    }\n    componentDidMount() {\n        this.updateCoords();\n    }\n    componentDidUpdate() {\n        this.updateCoords();\n    }\n    updateCoords() {\n        let { props } = this;\n        if (props.onColCoords &&\n            props.clientWidth !== null // means sizing has stabilized\n        ) {\n            props.onColCoords(new PositionCache(this.rootElRef.current, collectCellEls(this.cellElRefs.currentMap, props.cells), true, // horizontal\n            false));\n        }\n    }\n}\nfunction collectCellEls(elMap, cells) {\n    return cells.map((cell) => elMap[cell.key]);\n}\n\n/* A component that renders one or more columns of vertical time slots\n----------------------------------------------------------------------------------------------------------------------*/\nclass TimeCols extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.processSlotOptions = memoize(processSlotOptions);\n        this.state = {\n            slatCoords: null,\n        };\n        this.handleRootEl = (el) => {\n            if (el) {\n                this.context.registerInteractiveComponent(this, {\n                    el,\n                    isHitComboAllowed: this.props.isHitComboAllowed,\n                });\n            }\n            else {\n                this.context.unregisterInteractiveComponent(this);\n            }\n        };\n        this.handleScrollRequest = (request) => {\n            let { onScrollTopRequest } = this.props;\n            let { slatCoords } = this.state;\n            if (onScrollTopRequest && slatCoords) {\n                if (request.time) {\n                    let top = slatCoords.computeTimeTop(request.time);\n                    top = Math.ceil(top); // zoom can give weird floating-point values. rather scroll a little bit further\n                    if (top) {\n                        top += 1; // to overcome top border that slots beyond the first have. looks better\n                    }\n                    onScrollTopRequest(top);\n                }\n                return true;\n            }\n            return false;\n        };\n        this.handleColCoords = (colCoords) => {\n            this.colCoords = colCoords;\n        };\n        this.handleSlatCoords = (slatCoords) => {\n            this.setState({ slatCoords });\n            if (this.props.onSlatCoords) {\n                this.props.onSlatCoords(slatCoords);\n            }\n        };\n    }\n    render() {\n        let { props, state } = this;\n        return (createElement(\"div\", { className: \"fc-timegrid-body\", ref: this.handleRootEl, style: {\n                // these props are important to give this wrapper correct dimensions for interactions\n                // TODO: if we set it here, can we avoid giving to inner tables?\n                width: props.clientWidth,\n                minWidth: props.tableMinWidth,\n            } },\n            createElement(TimeColsSlats, { axis: props.axis, dateProfile: props.dateProfile, slatMetas: props.slatMetas, clientWidth: props.clientWidth, minHeight: props.expandRows ? props.clientHeight : '', tableMinWidth: props.tableMinWidth, tableColGroupNode: props.axis ? props.tableColGroupNode : null /* axis depends on the colgroup's shrinking */, onCoords: this.handleSlatCoords }),\n            createElement(TimeColsContent, { cells: props.cells, axis: props.axis, dateProfile: props.dateProfile, businessHourSegs: props.businessHourSegs, bgEventSegs: props.bgEventSegs, fgEventSegs: props.fgEventSegs, dateSelectionSegs: props.dateSelectionSegs, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, todayRange: props.todayRange, nowDate: props.nowDate, nowIndicatorSegs: props.nowIndicatorSegs, clientWidth: props.clientWidth, tableMinWidth: props.tableMinWidth, tableColGroupNode: props.tableColGroupNode, slatCoords: state.slatCoords, onColCoords: this.handleColCoords, forPrint: props.forPrint })));\n    }\n    componentDidMount() {\n        this.scrollResponder = this.context.createScrollResponder(this.handleScrollRequest);\n    }\n    componentDidUpdate(prevProps) {\n        this.scrollResponder.update(prevProps.dateProfile !== this.props.dateProfile);\n    }\n    componentWillUnmount() {\n        this.scrollResponder.detach();\n    }\n    queryHit(positionLeft, positionTop) {\n        let { dateEnv, options } = this.context;\n        let { colCoords } = this;\n        let { dateProfile } = this.props;\n        let { slatCoords } = this.state;\n        let { snapDuration, snapsPerSlot } = this.processSlotOptions(this.props.slotDuration, options.snapDuration);\n        let colIndex = colCoords.leftToIndex(positionLeft);\n        let slatIndex = slatCoords.positions.topToIndex(positionTop);\n        if (colIndex != null && slatIndex != null) {\n            let cell = this.props.cells[colIndex];\n            let slatTop = slatCoords.positions.tops[slatIndex];\n            let slatHeight = slatCoords.positions.getHeight(slatIndex);\n            let partial = (positionTop - slatTop) / slatHeight; // floating point number between 0 and 1\n            let localSnapIndex = Math.floor(partial * snapsPerSlot); // the snap # relative to start of slat\n            let snapIndex = slatIndex * snapsPerSlot + localSnapIndex;\n            let dayDate = this.props.cells[colIndex].date;\n            let time = addDurations(dateProfile.slotMinTime, multiplyDuration(snapDuration, snapIndex));\n            let start = dateEnv.add(dayDate, time);\n            let end = dateEnv.add(start, snapDuration);\n            return {\n                dateProfile,\n                dateSpan: Object.assign({ range: { start, end }, allDay: false }, cell.extraDateSpan),\n                dayEl: colCoords.els[colIndex],\n                rect: {\n                    left: colCoords.lefts[colIndex],\n                    right: colCoords.rights[colIndex],\n                    top: slatTop,\n                    bottom: slatTop + slatHeight,\n                },\n                layer: 0,\n            };\n        }\n        return null;\n    }\n}\nfunction processSlotOptions(slotDuration, snapDurationOverride) {\n    let snapDuration = snapDurationOverride || slotDuration;\n    let snapsPerSlot = wholeDivideDurations(slotDuration, snapDuration);\n    if (snapsPerSlot === null) {\n        snapDuration = slotDuration;\n        snapsPerSlot = 1;\n        // TODO: say warning?\n    }\n    return { snapDuration, snapsPerSlot };\n}\n\nclass DayTimeColsSlicer extends Slicer {\n    sliceRange(range, dayRanges) {\n        let segs = [];\n        for (let col = 0; col < dayRanges.length; col += 1) {\n            let segRange = intersectRanges(range, dayRanges[col]);\n            if (segRange) {\n                segs.push({\n                    start: segRange.start,\n                    end: segRange.end,\n                    isStart: segRange.start.valueOf() === range.start.valueOf(),\n                    isEnd: segRange.end.valueOf() === range.end.valueOf(),\n                    col,\n                });\n            }\n        }\n        return segs;\n    }\n}\n\nclass DayTimeCols extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.buildDayRanges = memoize(buildDayRanges);\n        this.slicer = new DayTimeColsSlicer();\n        this.timeColsRef = createRef();\n    }\n    render() {\n        let { props, context } = this;\n        let { dateProfile, dayTableModel } = props;\n        let { nowIndicator, nextDayThreshold } = context.options;\n        let dayRanges = this.buildDayRanges(dayTableModel, dateProfile, context.dateEnv);\n        // give it the first row of cells\n        // TODO: would move this further down hierarchy, but sliceNowDate needs it\n        return (createElement(NowTimer, { unit: nowIndicator ? 'minute' : 'day' }, (nowDate, todayRange) => (createElement(TimeCols, Object.assign({ ref: this.timeColsRef }, this.slicer.sliceProps(props, dateProfile, null, context, dayRanges), { forPrint: props.forPrint, axis: props.axis, dateProfile: dateProfile, slatMetas: props.slatMetas, slotDuration: props.slotDuration, cells: dayTableModel.cells[0], tableColGroupNode: props.tableColGroupNode, tableMinWidth: props.tableMinWidth, clientWidth: props.clientWidth, clientHeight: props.clientHeight, expandRows: props.expandRows, nowDate: nowDate, nowIndicatorSegs: nowIndicator && this.slicer.sliceNowDate(nowDate, dateProfile, nextDayThreshold, context, dayRanges), todayRange: todayRange, onScrollTopRequest: props.onScrollTopRequest, onSlatCoords: props.onSlatCoords })))));\n    }\n}\nfunction buildDayRanges(dayTableModel, dateProfile, dateEnv) {\n    let ranges = [];\n    for (let date of dayTableModel.headerDates) {\n        ranges.push({\n            start: dateEnv.add(date, dateProfile.slotMinTime),\n            end: dateEnv.add(date, dateProfile.slotMaxTime),\n        });\n    }\n    return ranges;\n}\n\n// potential nice values for the slot-duration and interval-duration\n// from largest to smallest\nconst STOCK_SUB_DURATIONS = [\n    { hours: 1 },\n    { minutes: 30 },\n    { minutes: 15 },\n    { seconds: 30 },\n    { seconds: 15 },\n];\nfunction buildSlatMetas(slotMinTime, slotMaxTime, explicitLabelInterval, slotDuration, dateEnv) {\n    let dayStart = new Date(0);\n    let slatTime = slotMinTime;\n    let slatIterator = createDuration(0);\n    let labelInterval = explicitLabelInterval || computeLabelInterval(slotDuration);\n    let metas = [];\n    while (asRoughMs(slatTime) < asRoughMs(slotMaxTime)) {\n        let date = dateEnv.add(dayStart, slatTime);\n        let isLabeled = wholeDivideDurations(slatIterator, labelInterval) !== null;\n        metas.push({\n            date,\n            time: slatTime,\n            key: date.toISOString(),\n            isoTimeStr: formatIsoTimeString(date),\n            isLabeled,\n        });\n        slatTime = addDurations(slatTime, slotDuration);\n        slatIterator = addDurations(slatIterator, slotDuration);\n    }\n    return metas;\n}\n// Computes an automatic value for slotLabelInterval\nfunction computeLabelInterval(slotDuration) {\n    let i;\n    let labelInterval;\n    let slotsPerLabel;\n    // find the smallest stock label interval that results in more than one slots-per-label\n    for (i = STOCK_SUB_DURATIONS.length - 1; i >= 0; i -= 1) {\n        labelInterval = createDuration(STOCK_SUB_DURATIONS[i]);\n        slotsPerLabel = wholeDivideDurations(labelInterval, slotDuration);\n        if (slotsPerLabel !== null && slotsPerLabel > 1) {\n            return labelInterval;\n        }\n    }\n    return slotDuration; // fall back\n}\n\nclass DayTimeColsView extends TimeColsView {\n    constructor() {\n        super(...arguments);\n        this.buildTimeColsModel = memoize(buildTimeColsModel);\n        this.buildSlatMetas = memoize(buildSlatMetas);\n    }\n    render() {\n        let { options, dateEnv, dateProfileGenerator } = this.context;\n        let { props } = this;\n        let { dateProfile } = props;\n        let dayTableModel = this.buildTimeColsModel(dateProfile, dateProfileGenerator);\n        let splitProps = this.allDaySplitter.splitProps(props);\n        let slatMetas = this.buildSlatMetas(dateProfile.slotMinTime, dateProfile.slotMaxTime, options.slotLabelInterval, options.slotDuration, dateEnv);\n        let { dayMinWidth } = options;\n        let hasAttachedAxis = !dayMinWidth;\n        let hasDetachedAxis = dayMinWidth;\n        let headerContent = options.dayHeaders && (createElement(DayHeader, { dates: dayTableModel.headerDates, dateProfile: dateProfile, datesRepDistinctDays: true, renderIntro: hasAttachedAxis ? this.renderHeadAxis : null }));\n        let allDayContent = (options.allDaySlot !== false) && ((contentArg) => (createElement(DayTable, Object.assign({}, splitProps.allDay, { dateProfile: dateProfile, dayTableModel: dayTableModel, nextDayThreshold: options.nextDayThreshold, tableMinWidth: contentArg.tableMinWidth, colGroupNode: contentArg.tableColGroupNode, renderRowIntro: hasAttachedAxis ? this.renderTableRowAxis : null, showWeekNumbers: false, expandRows: false, headerAlignElRef: this.headerElRef, clientWidth: contentArg.clientWidth, clientHeight: contentArg.clientHeight, forPrint: props.forPrint }, this.getAllDayMaxEventProps()))));\n        let timeGridContent = (contentArg) => (createElement(DayTimeCols, Object.assign({}, splitProps.timed, { dayTableModel: dayTableModel, dateProfile: dateProfile, axis: hasAttachedAxis, slotDuration: options.slotDuration, slatMetas: slatMetas, forPrint: props.forPrint, tableColGroupNode: contentArg.tableColGroupNode, tableMinWidth: contentArg.tableMinWidth, clientWidth: contentArg.clientWidth, clientHeight: contentArg.clientHeight, onSlatCoords: this.handleSlatCoords, expandRows: contentArg.expandRows, onScrollTopRequest: this.handleScrollTopRequest })));\n        return hasDetachedAxis\n            ? this.renderHScrollLayout(headerContent, allDayContent, timeGridContent, dayTableModel.colCnt, dayMinWidth, slatMetas, this.state.slatCoords)\n            : this.renderSimpleLayout(headerContent, allDayContent, timeGridContent);\n    }\n}\nfunction buildTimeColsModel(dateProfile, dateProfileGenerator) {\n    let daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator);\n    return new DayTableModel(daySeries, false);\n}\n\nvar css_248z = \".fc-v-event{background-color:var(--fc-event-bg-color);border:1px solid var(--fc-event-border-color);display:block}.fc-v-event .fc-event-main{color:var(--fc-event-text-color);height:100%}.fc-v-event .fc-event-main-frame{display:flex;flex-direction:column;height:100%}.fc-v-event .fc-event-time{flex-grow:0;flex-shrink:0;max-height:100%;overflow:hidden}.fc-v-event .fc-event-title-container{flex-grow:1;flex-shrink:1;min-height:0}.fc-v-event .fc-event-title{bottom:0;max-height:100%;overflow:hidden;top:0}.fc-v-event:not(.fc-event-start){border-top-left-radius:0;border-top-right-radius:0;border-top-width:0}.fc-v-event:not(.fc-event-end){border-bottom-left-radius:0;border-bottom-right-radius:0;border-bottom-width:0}.fc-v-event.fc-event-selected:before{left:-10px;right:-10px}.fc-v-event .fc-event-resizer-start{cursor:n-resize}.fc-v-event .fc-event-resizer-end{cursor:s-resize}.fc-v-event:not(.fc-event-selected) .fc-event-resizer{height:var(--fc-event-resizer-thickness);left:0;right:0}.fc-v-event:not(.fc-event-selected) .fc-event-resizer-start{top:calc(var(--fc-event-resizer-thickness)/-2)}.fc-v-event:not(.fc-event-selected) .fc-event-resizer-end{bottom:calc(var(--fc-event-resizer-thickness)/-2)}.fc-v-event.fc-event-selected .fc-event-resizer{left:50%;margin-left:calc(var(--fc-event-resizer-dot-total-width)/-2)}.fc-v-event.fc-event-selected .fc-event-resizer-start{top:calc(var(--fc-event-resizer-dot-total-width)/-2)}.fc-v-event.fc-event-selected .fc-event-resizer-end{bottom:calc(var(--fc-event-resizer-dot-total-width)/-2)}.fc .fc-timegrid .fc-daygrid-body{z-index:2}.fc .fc-timegrid-divider{padding:0 0 2px}.fc .fc-timegrid-body{min-height:100%;position:relative;z-index:1}.fc .fc-timegrid-axis-chunk{position:relative}.fc .fc-timegrid-axis-chunk>table,.fc .fc-timegrid-slots{position:relative;z-index:1}.fc .fc-timegrid-slot{border-bottom:0;height:1.5em}.fc .fc-timegrid-slot:empty:before{content:\\\"\\\\00a0\\\"}.fc .fc-timegrid-slot-minor{border-top-style:dotted}.fc .fc-timegrid-slot-label-cushion{display:inline-block;white-space:nowrap}.fc .fc-timegrid-slot-label{vertical-align:middle}.fc .fc-timegrid-axis-cushion,.fc .fc-timegrid-slot-label-cushion{padding:0 4px}.fc .fc-timegrid-axis-frame-liquid{height:100%}.fc .fc-timegrid-axis-frame{align-items:center;display:flex;justify-content:flex-end;overflow:hidden}.fc .fc-timegrid-axis-cushion{flex-shrink:0;max-width:60px}.fc-direction-ltr .fc-timegrid-slot-label-frame{text-align:right}.fc-direction-rtl .fc-timegrid-slot-label-frame{text-align:left}.fc-liquid-hack .fc-timegrid-axis-frame-liquid{bottom:0;height:auto;left:0;position:absolute;right:0;top:0}.fc .fc-timegrid-col.fc-day-today{background-color:var(--fc-today-bg-color)}.fc .fc-timegrid-col-frame{min-height:100%;position:relative}.fc-media-screen.fc-liquid-hack .fc-timegrid-col-frame{bottom:0;height:auto;left:0;position:absolute;right:0;top:0}.fc-media-screen .fc-timegrid-cols{bottom:0;left:0;position:absolute;right:0;top:0}.fc-media-screen .fc-timegrid-cols>table{height:100%}.fc-media-screen .fc-timegrid-col-bg,.fc-media-screen .fc-timegrid-col-events,.fc-media-screen .fc-timegrid-now-indicator-container{left:0;position:absolute;right:0;top:0}.fc .fc-timegrid-col-bg{z-index:2}.fc .fc-timegrid-col-bg .fc-non-business{z-index:1}.fc .fc-timegrid-col-bg .fc-bg-event{z-index:2}.fc .fc-timegrid-col-bg .fc-highlight{z-index:3}.fc .fc-timegrid-bg-harness{left:0;position:absolute;right:0}.fc .fc-timegrid-col-events{z-index:3}.fc .fc-timegrid-now-indicator-container{bottom:0;overflow:hidden}.fc-direction-ltr .fc-timegrid-col-events{margin:0 2.5% 0 2px}.fc-direction-rtl .fc-timegrid-col-events{margin:0 2px 0 2.5%}.fc-timegrid-event-harness{position:absolute}.fc-timegrid-event-harness>.fc-timegrid-event{bottom:0;left:0;position:absolute;right:0;top:0}.fc-timegrid-event-harness-inset .fc-timegrid-event,.fc-timegrid-event.fc-event-mirror,.fc-timegrid-more-link{box-shadow:0 0 0 1px var(--fc-page-bg-color)}.fc-timegrid-event,.fc-timegrid-more-link{border-radius:3px;font-size:var(--fc-small-font-size)}.fc-timegrid-event{margin-bottom:1px}.fc-timegrid-event .fc-event-main{padding:1px 1px 0}.fc-timegrid-event .fc-event-time{font-size:var(--fc-small-font-size);margin-bottom:1px;white-space:nowrap}.fc-timegrid-event-short .fc-event-main-frame{flex-direction:row;overflow:hidden}.fc-timegrid-event-short .fc-event-time:after{content:\\\"\\\\00a0-\\\\00a0\\\"}.fc-timegrid-event-short .fc-event-title{font-size:var(--fc-small-font-size)}.fc-timegrid-more-link{background:var(--fc-more-link-bg-color);color:var(--fc-more-link-text-color);cursor:pointer;margin-bottom:1px;position:absolute;z-index:9999}.fc-timegrid-more-link-inner{padding:3px 2px;top:0}.fc-direction-ltr .fc-timegrid-more-link{right:0}.fc-direction-rtl .fc-timegrid-more-link{left:0}.fc .fc-timegrid-now-indicator-arrow,.fc .fc-timegrid-now-indicator-line{pointer-events:none}.fc .fc-timegrid-now-indicator-line{border-color:var(--fc-now-indicator-color);border-style:solid;border-width:1px 0 0;left:0;position:absolute;right:0;z-index:4}.fc .fc-timegrid-now-indicator-arrow{border-color:var(--fc-now-indicator-color);border-style:solid;margin-top:-5px;position:absolute;z-index:4}.fc-direction-ltr .fc-timegrid-now-indicator-arrow{border-bottom-color:transparent;border-top-color:transparent;border-width:5px 0 5px 6px;left:0}.fc-direction-rtl .fc-timegrid-now-indicator-arrow{border-bottom-color:transparent;border-top-color:transparent;border-width:5px 6px 5px 0;right:0}\";\ninjectStyles(css_248z);\n\nexport { DayTimeCols, DayTimeColsSlicer, DayTimeColsView, TimeCols, TimeColsSlatsCoords, TimeColsView, buildDayRanges, buildSlatMetas, buildTimeColsModel };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}