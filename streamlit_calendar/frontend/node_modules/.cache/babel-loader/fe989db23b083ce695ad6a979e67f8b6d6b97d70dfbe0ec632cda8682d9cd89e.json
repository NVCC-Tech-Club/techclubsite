{"ast":null,"code":"import _createForOfIteratorHelper from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { injectStyles, BaseComponent, memoizeObjArg, ContentContainer, isArraysEqual, RefMap, findElements, elementClosest, PositionCache, DateComponent, memoize, greatestDurationDenominator, NowTimer, NowIndicatorContainer, config, getStickyHeaderDates, getStickyFooterScrollbar, renderScrollShim, ViewContainer } from '@fullcalendar/core/internal.js';\nimport { createElement, Fragment, createRef } from '@fullcalendar/core/preact.js';\nimport { TimelineLane, TimelineLaneSlicer, TimelineSlats, TimelineLaneBg, coordToCss, buildTimelineDateProfile, buildSlatCols, TimelineHeader } from '@fullcalendar/timeline/internal.js';\nimport { buildResourceFields, getPublicId, isGroupsEqual, refineRenderProps as refineRenderProps$1, ResourceSplitter, buildRowNodes, DEFAULT_RESOURCE_ORDER } from '@fullcalendar/resource/internal.js';\nimport { ResourceApi } from '@fullcalendar/resource/index.js';\nimport { ScrollGrid } from '@fullcalendar/scrollgrid/internal.js';\nvar css_248z = \".fc .fc-resource-timeline-divider{cursor:col-resize;width:3px}.fc .fc-resource-group{font-weight:inherit;text-align:inherit}.fc .fc-resource-timeline .fc-resource-group:not([rowspan]){background:var(--fc-neutral-bg-color)}.fc .fc-timeline-lane-frame{position:relative}.fc .fc-timeline-overlap-enabled .fc-timeline-lane-frame .fc-timeline-events{box-sizing:content-box;padding-bottom:10px}.fc-timeline-body-expandrows td.fc-timeline-lane{position:relative}.fc-timeline-body-expandrows .fc-timeline-lane-frame{position:static}.fc-datagrid-cell-frame-liquid{height:100%}.fc-liquid-hack .fc-datagrid-cell-frame-liquid{bottom:0;height:auto;left:0;position:absolute;right:0;top:0}.fc .fc-datagrid-header .fc-datagrid-cell-frame{align-items:center;display:flex;justify-content:flex-start;position:relative}.fc .fc-datagrid-cell-resizer{bottom:0;cursor:col-resize;position:absolute;top:0;width:5px;z-index:1}.fc .fc-datagrid-cell-cushion{overflow:hidden;padding:8px;white-space:nowrap}.fc .fc-datagrid-expander{cursor:pointer;opacity:.65}.fc .fc-datagrid-expander .fc-icon{display:inline-block;width:1em}.fc .fc-datagrid-expander-placeholder{cursor:auto}.fc .fc-resource-timeline-flat .fc-datagrid-expander-placeholder{display:none}.fc-direction-ltr .fc-datagrid-cell-resizer{right:-3px}.fc-direction-rtl .fc-datagrid-cell-resizer{left:-3px}.fc-direction-ltr .fc-datagrid-expander{margin-right:3px}.fc-direction-rtl .fc-datagrid-expander{margin-left:3px}\";\ninjectStyles(css_248z);\n\n/*\nRenders the DOM responsible for the subrow expander area,\nas well as the space before it (used to align expanders of similar depths)\n*/\nfunction ExpanderIcon(_ref) {\n  var depth = _ref.depth,\n    hasChildren = _ref.hasChildren,\n    isExpanded = _ref.isExpanded,\n    onExpanderClick = _ref.onExpanderClick;\n  var nodes = [];\n  for (var i = 0; i < depth; i += 1) {\n    nodes.push(createElement(\"span\", {\n      className: \"fc-icon\"\n    }));\n  }\n  var iconClassNames = ['fc-icon'];\n  if (hasChildren) {\n    if (isExpanded) {\n      iconClassNames.push('fc-icon-minus-square');\n    } else {\n      iconClassNames.push('fc-icon-plus-square');\n    }\n  }\n  nodes.push(createElement(\"span\", {\n    className: 'fc-datagrid-expander' + (hasChildren ? '' : ' fc-datagrid-expander-placeholder'),\n    onClick: onExpanderClick\n  }, createElement(\"span\", {\n    className: iconClassNames.join(' ')\n  })));\n  return createElement.apply(void 0, [Fragment, {}].concat(nodes));\n}\n\n// worth making a PureComponent? (because of innerHeight)\nvar SpreadsheetIndividualCell = /*#__PURE__*/function (_BaseComponent) {\n  _inherits(SpreadsheetIndividualCell, _BaseComponent);\n  var _super = _createSuper(SpreadsheetIndividualCell);\n  function SpreadsheetIndividualCell() {\n    var _this;\n    _classCallCheck(this, SpreadsheetIndividualCell);\n    _this = _super.apply(this, arguments);\n    _this.refineRenderProps = memoizeObjArg(refineRenderProps);\n    _this.onExpanderClick = function (ev) {\n      var _assertThisInitialize = _assertThisInitialized(_this),\n        props = _assertThisInitialize.props;\n      if (props.hasChildren) {\n        _this.context.dispatch({\n          type: 'SET_RESOURCE_ENTITY_EXPANDED',\n          id: props.resource.id,\n          isExpanded: !props.isExpanded\n        });\n      }\n    };\n    return _this;\n  }\n  _createClass(SpreadsheetIndividualCell, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var props = this.props,\n        context = this.context;\n      var colSpec = props.colSpec;\n      var renderProps = this.refineRenderProps({\n        resource: props.resource,\n        fieldValue: props.fieldValue,\n        context: context\n      });\n      return createElement(ContentContainer, {\n        elTag: \"td\",\n        elClasses: ['fc-datagrid-cell', 'fc-resource'],\n        elAttrs: {\n          role: 'gridcell',\n          'data-resource-id': props.resource.id\n        },\n        renderProps: renderProps,\n        generatorName: colSpec.isMain ? 'resourceLabelContent' : undefined,\n        customGenerator: colSpec.cellContent,\n        defaultGenerator: renderResourceInner,\n        classNameGenerator: colSpec.cellClassNames,\n        didMount: colSpec.cellDidMount,\n        willUnmount: colSpec.cellWillUnmount\n      }, function (InnerContent) {\n        return createElement(\"div\", {\n          className: \"fc-datagrid-cell-frame\",\n          style: {\n            height: props.innerHeight\n          }\n        }, createElement(\"div\", {\n          className: \"fc-datagrid-cell-cushion fc-scrollgrid-sync-inner\"\n        }, colSpec.isMain && createElement(ExpanderIcon, {\n          depth: props.depth,\n          hasChildren: props.hasChildren,\n          isExpanded: props.isExpanded,\n          onExpanderClick: _this2.onExpanderClick\n        }), createElement(InnerContent, {\n          elTag: \"span\",\n          elClasses: ['fc-datagrid-cell-main']\n        })));\n      });\n    }\n  }]);\n  return SpreadsheetIndividualCell;\n}(BaseComponent);\nfunction renderResourceInner(renderProps) {\n  return renderProps.fieldValue || createElement(Fragment, null, \"\\xA0\");\n}\nfunction refineRenderProps(input) {\n  return {\n    resource: new ResourceApi(input.context, input.resource),\n    fieldValue: input.fieldValue,\n    view: input.context.viewApi\n  };\n}\n\n// for VERTICAL cell grouping, in spreadsheet area\nvar SpreadsheetGroupCell = /*#__PURE__*/function (_BaseComponent2) {\n  _inherits(SpreadsheetGroupCell, _BaseComponent2);\n  var _super2 = _createSuper(SpreadsheetGroupCell);\n  function SpreadsheetGroupCell() {\n    _classCallCheck(this, SpreadsheetGroupCell);\n    return _super2.apply(this, arguments);\n  }\n  _createClass(SpreadsheetGroupCell, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props,\n        context = this.context;\n      var colSpec = props.colSpec;\n      var renderProps = {\n        groupValue: props.fieldValue,\n        view: context.viewApi\n      };\n      // a grouped cell. no data that is specific to this specific resource\n      // `colSpec` is for the group. a GroupSpec :(\n      return createElement(ContentContainer, {\n        elTag: \"td\",\n        elClasses: ['fc-datagrid-cell', 'fc-resource-group'],\n        elAttrs: {\n          role: 'gridcell',\n          rowSpan: props.rowSpan\n        },\n        renderProps: renderProps,\n        generatorName: \"resourceGroupLabelContent\",\n        customGenerator: colSpec.cellContent,\n        defaultGenerator: renderGroupInner,\n        classNameGenerator: colSpec.cellClassNames,\n        didMount: colSpec.cellDidMount,\n        willUnmount: colSpec.cellWillUnmount\n      }, function (InnerContent) {\n        return createElement(\"div\", {\n          className: \"fc-datagrid-cell-frame fc-datagrid-cell-frame-liquid\"\n        }, createElement(InnerContent, {\n          elTag: \"div\",\n          elClasses: ['fc-datagrid-cell-cushion', 'fc-sticky']\n        }));\n      });\n    }\n  }]);\n  return SpreadsheetGroupCell;\n}(BaseComponent);\nfunction renderGroupInner(renderProps) {\n  return renderProps.groupValue || createElement(Fragment, null, \"\\xA0\");\n}\nvar SpreadsheetRow = /*#__PURE__*/function (_BaseComponent3) {\n  _inherits(SpreadsheetRow, _BaseComponent3);\n  var _super3 = _createSuper(SpreadsheetRow);\n  function SpreadsheetRow() {\n    _classCallCheck(this, SpreadsheetRow);\n    return _super3.apply(this, arguments);\n  }\n  _createClass(SpreadsheetRow, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      var resource = props.resource,\n        rowSpans = props.rowSpans,\n        depth = props.depth;\n      var resourceFields = buildResourceFields(resource); // slightly inefficient. already done up the call stack\n      return createElement(\"tr\", {\n        role: \"row\"\n      }, props.colSpecs.map(function (colSpec, i) {\n        var rowSpan = rowSpans[i];\n        if (rowSpan === 0) {\n          // not responsible for group-based rows. VRowGroup is\n          return null;\n        }\n        if (rowSpan == null) {\n          rowSpan = 1;\n        }\n        var fieldValue = colSpec.field ? resourceFields[colSpec.field] : resource.title || getPublicId(resource.id);\n        if (rowSpan > 1) {\n          return createElement(SpreadsheetGroupCell, {\n            key: i,\n            colSpec: colSpec,\n            fieldValue: fieldValue,\n            rowSpan: rowSpan\n          });\n        }\n        return createElement(SpreadsheetIndividualCell, {\n          key: i,\n          colSpec: colSpec,\n          resource: resource,\n          fieldValue: fieldValue,\n          depth: depth,\n          hasChildren: props.hasChildren,\n          isExpanded: props.isExpanded,\n          innerHeight: props.innerHeight\n        });\n      }));\n    }\n  }]);\n  return SpreadsheetRow;\n}(BaseComponent);\nSpreadsheetRow.addPropsEquality({\n  rowSpans: isArraysEqual\n});\n\n// for HORIZONTAL cell grouping, in spreadsheet area\nvar SpreadsheetGroupRow = /*#__PURE__*/function (_BaseComponent4) {\n  _inherits(SpreadsheetGroupRow, _BaseComponent4);\n  var _super4 = _createSuper(SpreadsheetGroupRow);\n  function SpreadsheetGroupRow() {\n    var _this3;\n    _classCallCheck(this, SpreadsheetGroupRow);\n    _this3 = _super4.apply(this, arguments);\n    _this3.innerInnerRef = createRef();\n    _this3.onExpanderClick = function () {\n      var _assertThisInitialize2 = _assertThisInitialized(_this3),\n        props = _assertThisInitialize2.props;\n      _this3.context.dispatch({\n        type: 'SET_RESOURCE_ENTITY_EXPANDED',\n        id: props.id,\n        isExpanded: !props.isExpanded\n      });\n    };\n    return _this3;\n  }\n  _createClass(SpreadsheetGroupRow, [{\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n      var props = this.props,\n        context = this.context;\n      var renderProps = {\n        groupValue: props.group.value,\n        view: context.viewApi\n      };\n      var spec = props.group.spec;\n      return createElement(\"tr\", {\n        role: \"row\"\n      }, createElement(ContentContainer, {\n        elTag: \"th\",\n        elClasses: ['fc-datagrid-cell', 'fc-resource-group', context.theme.getClass('tableCellShaded')],\n        elAttrs: {\n          // ARIA TODO: not really a columnheader\n          // extremely tedious to make this aria-compliant,\n          // to assign multiple headers to each cell\n          // https://www.w3.org/WAI/tutorials/tables/multi-level/\n          role: 'columnheader',\n          scope: 'colgroup',\n          colSpan: props.spreadsheetColCnt\n        },\n        renderProps: renderProps,\n        generatorName: \"resourceGroupLabelContent\",\n        customGenerator: spec.labelContent,\n        defaultGenerator: renderCellInner,\n        classNameGenerator: spec.labelClassNames,\n        didMount: spec.labelDidMount,\n        willUnmount: spec.labelWillUnmount\n      }, function (InnerContent) {\n        return createElement(\"div\", {\n          className: \"fc-datagrid-cell-frame\",\n          style: {\n            height: props.innerHeight\n          }\n        }, createElement(\"div\", {\n          className: \"fc-datagrid-cell-cushion fc-scrollgrid-sync-inner\",\n          ref: _this4.innerInnerRef\n        }, createElement(ExpanderIcon, {\n          depth: 0,\n          hasChildren: true,\n          isExpanded: props.isExpanded,\n          onExpanderClick: _this4.onExpanderClick\n        }), createElement(InnerContent, {\n          elTag: \"span\",\n          elClasses: ['fc-datagrid-cell-main']\n        })));\n      }));\n    }\n  }]);\n  return SpreadsheetGroupRow;\n}(BaseComponent);\nSpreadsheetGroupRow.addPropsEquality({\n  group: isGroupsEqual\n});\nfunction renderCellInner(renderProps) {\n  return renderProps.groupValue || createElement(Fragment, null, \"\\xA0\");\n}\nvar SPREADSHEET_COL_MIN_WIDTH = 20;\nvar SpreadsheetHeader = /*#__PURE__*/function (_BaseComponent5) {\n  _inherits(SpreadsheetHeader, _BaseComponent5);\n  var _super5 = _createSuper(SpreadsheetHeader);\n  function SpreadsheetHeader() {\n    var _this5;\n    _classCallCheck(this, SpreadsheetHeader);\n    _this5 = _super5.apply(this, arguments);\n    _this5.resizerElRefs = new RefMap(_this5._handleColResizerEl.bind(_assertThisInitialized(_this5)));\n    _this5.colDraggings = {};\n    return _this5;\n  }\n  _createClass(SpreadsheetHeader, [{\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n      var _this$props = this.props,\n        colSpecs = _this$props.colSpecs,\n        superHeaderRendering = _this$props.superHeaderRendering,\n        rowInnerHeights = _this$props.rowInnerHeights;\n      var renderProps = {\n        view: this.context.viewApi\n      };\n      var rowNodes = [];\n      rowInnerHeights = rowInnerHeights.slice(); // copy, because we're gonna pop\n      if (superHeaderRendering) {\n        var _rowInnerHeight = rowInnerHeights.shift();\n        rowNodes.push(createElement(\"tr\", {\n          key: \"row-super\",\n          role: \"row\"\n        }, createElement(ContentContainer, {\n          elTag: \"th\",\n          elClasses: ['fc-datagrid-cell', 'fc-datagrid-cell-super'],\n          elAttrs: {\n            role: 'columnheader',\n            scope: 'colgroup',\n            colSpan: colSpecs.length\n          },\n          renderProps: renderProps,\n          generatorName: \"resourceAreaHeaderContent\",\n          customGenerator: superHeaderRendering.headerContent,\n          defaultGenerator: superHeaderRendering.headerDefault,\n          classNameGenerator: superHeaderRendering.headerClassNames,\n          didMount: superHeaderRendering.headerDidMount,\n          willUnmount: superHeaderRendering.headerWillUnmount\n        }, function (InnerContent) {\n          return createElement(\"div\", {\n            className: \"fc-datagrid-cell-frame\",\n            style: {\n              height: _rowInnerHeight\n            }\n          }, createElement(InnerContent, {\n            elTag: \"div\",\n            elClasses: ['fc-datagrid-cell-cushion', 'fc-scrollgrid-sync-inner']\n          }));\n        })));\n      }\n      var rowInnerHeight = rowInnerHeights.shift();\n      rowNodes.push(createElement(\"tr\", {\n        key: \"row\",\n        role: \"row\"\n      }, colSpecs.map(function (colSpec, i) {\n        var isLastCol = i === colSpecs.length - 1;\n        // need empty inner div for abs positioning for resizer\n        return createElement(ContentContainer, {\n          key: i,\n          elTag: \"th\",\n          elClasses: ['fc-datagrid-cell'],\n          elAttrs: {\n            role: 'columnheader'\n          },\n          renderProps: renderProps,\n          generatorName: \"resourceAreaHeaderContent\",\n          customGenerator: colSpec.headerContent,\n          defaultGenerator: colSpec.headerDefault,\n          classNameGenerator: colSpec.headerClassNames,\n          didMount: colSpec.headerDidMount,\n          willUnmount: colSpec.headerWillUnmount\n        }, function (InnerContent) {\n          return createElement(\"div\", {\n            className: \"fc-datagrid-cell-frame\",\n            style: {\n              height: rowInnerHeight\n            }\n          }, createElement(\"div\", {\n            className: \"fc-datagrid-cell-cushion fc-scrollgrid-sync-inner\"\n          }, colSpec.isMain && createElement(\"span\", {\n            className: \"fc-datagrid-expander fc-datagrid-expander-placeholder\"\n          }, createElement(\"span\", {\n            className: \"fc-icon\"\n          })), createElement(InnerContent, {\n            elTag: \"span\",\n            elClasses: ['fc-datagrid-cell-main']\n          })), !isLastCol && createElement(\"div\", {\n            className: \"fc-datagrid-cell-resizer\",\n            ref: _this6.resizerElRefs.createRef(i)\n          }));\n        });\n      })));\n      return createElement(Fragment, null, rowNodes);\n    }\n  }, {\n    key: \"_handleColResizerEl\",\n    value: function _handleColResizerEl(resizerEl, index) {\n      var colDraggings = this.colDraggings;\n      if (!resizerEl) {\n        var dragging = colDraggings[index];\n        if (dragging) {\n          dragging.destroy();\n          delete colDraggings[index];\n        }\n      } else {\n        var _dragging = this.initColResizing(resizerEl, parseInt(index, 10));\n        if (_dragging) {\n          colDraggings[index] = _dragging;\n        }\n      }\n    }\n  }, {\n    key: \"initColResizing\",\n    value: function initColResizing(resizerEl, index) {\n      var _this$context = this.context,\n        pluginHooks = _this$context.pluginHooks,\n        isRtl = _this$context.isRtl;\n      var onColWidthChange = this.props.onColWidthChange;\n      var ElementDraggingImpl = pluginHooks.elementDraggingImpl;\n      if (ElementDraggingImpl) {\n        var dragging = new ElementDraggingImpl(resizerEl);\n        var startWidth; // of just the single column\n        var currentWidths; // of all columns\n        dragging.emitter.on('dragstart', function () {\n          var allCells = findElements(elementClosest(resizerEl, 'tr'), 'th');\n          currentWidths = allCells.map(function (cellEl) {\n            return cellEl.getBoundingClientRect().width;\n          });\n          startWidth = currentWidths[index];\n        });\n        dragging.emitter.on('dragmove', function (pev) {\n          currentWidths[index] = Math.max(startWidth + pev.deltaX * (isRtl ? -1 : 1), SPREADSHEET_COL_MIN_WIDTH);\n          if (onColWidthChange) {\n            onColWidthChange(currentWidths.slice()); // send a copy since currentWidths continues to be mutated\n          }\n        });\n\n        dragging.setAutoScrollEnabled(false); // because gets weird with auto-scrolling time area\n        return dragging;\n      }\n      return null;\n    }\n  }]);\n  return SpreadsheetHeader;\n}(BaseComponent);\nvar ResourceTimelineLane = /*#__PURE__*/function (_BaseComponent6) {\n  _inherits(ResourceTimelineLane, _BaseComponent6);\n  var _super6 = _createSuper(ResourceTimelineLane);\n  function ResourceTimelineLane() {\n    var _this7;\n    _classCallCheck(this, ResourceTimelineLane);\n    _this7 = _super6.apply(this, arguments);\n    _this7.refineRenderProps = memoizeObjArg(refineRenderProps$1);\n    _this7.handleHeightChange = function (innerEl, isStable) {\n      if (_this7.props.onHeightChange) {\n        _this7.props.onHeightChange(\n        // would want to use own <tr> ref, but not guaranteed to be ready when this fires\n        elementClosest(innerEl, 'tr'), isStable);\n      }\n    };\n    return _this7;\n  }\n  _createClass(ResourceTimelineLane, [{\n    key: \"render\",\n    value: function render() {\n      var _this8 = this;\n      var props = this.props,\n        context = this.context;\n      var options = context.options;\n      var renderProps = this.refineRenderProps({\n        resource: props.resource,\n        context: context\n      });\n      return createElement(\"tr\", {\n        ref: props.elRef\n      }, createElement(ContentContainer, {\n        elTag: \"td\",\n        elClasses: ['fc-timeline-lane', 'fc-resource'],\n        elAttrs: {\n          'data-resource-id': props.resource.id\n        },\n        renderProps: renderProps,\n        generatorName: \"resourceLaneContent\",\n        customGenerator: options.resourceLaneContent,\n        classNameGenerator: options.resourceLaneClassNames,\n        didMount: options.resourceLaneDidMount,\n        willUnmount: options.resourceLaneWillUnmount\n      }, function (InnerContent) {\n        return createElement(\"div\", {\n          className: \"fc-timeline-lane-frame\",\n          style: {\n            height: props.innerHeight\n          }\n        }, createElement(InnerContent, {\n          elTag: \"div\",\n          elClasses: ['fc-timeline-lane-misc']\n        }), createElement(TimelineLane, {\n          dateProfile: props.dateProfile,\n          tDateProfile: props.tDateProfile,\n          nowDate: props.nowDate,\n          todayRange: props.todayRange,\n          nextDayThreshold: props.nextDayThreshold,\n          businessHours: props.businessHours,\n          eventStore: props.eventStore,\n          eventUiBases: props.eventUiBases,\n          dateSelection: props.dateSelection,\n          eventSelection: props.eventSelection,\n          eventDrag: props.eventDrag,\n          eventResize: props.eventResize,\n          timelineCoords: props.timelineCoords,\n          onHeightChange: _this8.handleHeightChange,\n          resourceId: props.resource.id\n        }));\n      })); // important NOT to do liquid-height. dont want to shrink height smaller than content\n    }\n  }]);\n  return ResourceTimelineLane;\n}(BaseComponent);\n/*\nparallels the SpreadsheetGroupRow\n*/\nvar DividerRow = /*#__PURE__*/function (_BaseComponent7) {\n  _inherits(DividerRow, _BaseComponent7);\n  var _super7 = _createSuper(DividerRow);\n  function DividerRow() {\n    _classCallCheck(this, DividerRow);\n    return _super7.apply(this, arguments);\n  }\n  _createClass(DividerRow, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props,\n        context = this.context;\n      var renderHooks = props.renderHooks;\n      var renderProps = {\n        groupValue: props.groupValue,\n        view: context.viewApi\n      };\n      return createElement(\"tr\", {\n        ref: props.elRef\n      }, createElement(ContentContainer, {\n        elTag: \"td\",\n        elRef: props.elRef,\n        elClasses: ['fc-timeline-lane', 'fc-resource-group', context.theme.getClass('tableCellShaded')],\n        renderProps: renderProps,\n        generatorName: \"resourceGroupLaneContent\",\n        customGenerator: renderHooks.laneContent,\n        classNameGenerator: renderHooks.laneClassNames,\n        didMount: renderHooks.laneDidMount,\n        willUnmount: renderHooks.laneWillUnmount\n      }, function (InnerContainer) {\n        return createElement(InnerContainer, {\n          elTag: \"div\",\n          elStyle: {\n            height: props.innerHeight\n          }\n        });\n      }));\n    }\n  }]);\n  return DividerRow;\n}(BaseComponent);\nvar ResourceTimelineLanesBody = /*#__PURE__*/function (_BaseComponent8) {\n  _inherits(ResourceTimelineLanesBody, _BaseComponent8);\n  var _super8 = _createSuper(ResourceTimelineLanesBody);\n  function ResourceTimelineLanesBody() {\n    _classCallCheck(this, ResourceTimelineLanesBody);\n    return _super8.apply(this, arguments);\n  }\n  _createClass(ResourceTimelineLanesBody, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props,\n        context = this.context;\n      var rowElRefs = props.rowElRefs,\n        innerHeights = props.innerHeights;\n      return createElement(\"tbody\", null, props.rowNodes.map(function (node, index) {\n        if (node.group) {\n          return createElement(DividerRow, {\n            key: node.id,\n            elRef: rowElRefs.createRef(node.id),\n            groupValue: node.group.value,\n            renderHooks: node.group.spec,\n            innerHeight: innerHeights[index] || ''\n          });\n        }\n        if (node.resource) {\n          var resource = node.resource;\n          return createElement(ResourceTimelineLane, Object.assign({\n            key: node.id,\n            elRef: rowElRefs.createRef(node.id)\n          }, props.splitProps[resource.id], {\n            resource: resource,\n            dateProfile: props.dateProfile,\n            tDateProfile: props.tDateProfile,\n            nowDate: props.nowDate,\n            todayRange: props.todayRange,\n            nextDayThreshold: context.options.nextDayThreshold,\n            businessHours: resource.businessHours || props.fallbackBusinessHours,\n            innerHeight: innerHeights[index] || '',\n            timelineCoords: props.slatCoords,\n            onHeightChange: props.onRowHeightChange\n          }));\n        }\n        return null;\n      }));\n    }\n  }]);\n  return ResourceTimelineLanesBody;\n}(BaseComponent);\nvar ResourceTimelineLanes = /*#__PURE__*/function (_BaseComponent9) {\n  _inherits(ResourceTimelineLanes, _BaseComponent9);\n  var _super9 = _createSuper(ResourceTimelineLanes);\n  function ResourceTimelineLanes() {\n    var _this9;\n    _classCallCheck(this, ResourceTimelineLanes);\n    _this9 = _super9.apply(this, arguments);\n    _this9.rootElRef = createRef();\n    _this9.rowElRefs = new RefMap();\n    return _this9;\n  }\n  _createClass(ResourceTimelineLanes, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props,\n        context = this.context;\n      return createElement(\"table\", {\n        ref: this.rootElRef,\n        \"aria-hidden\": true,\n        className: 'fc-scrollgrid-sync-table ' + context.theme.getClass('table'),\n        style: {\n          minWidth: props.tableMinWidth,\n          width: props.clientWidth,\n          height: props.minHeight\n        }\n      }, createElement(ResourceTimelineLanesBody, {\n        rowElRefs: this.rowElRefs,\n        rowNodes: props.rowNodes,\n        dateProfile: props.dateProfile,\n        tDateProfile: props.tDateProfile,\n        nowDate: props.nowDate,\n        todayRange: props.todayRange,\n        splitProps: props.splitProps,\n        fallbackBusinessHours: props.fallbackBusinessHours,\n        slatCoords: props.slatCoords,\n        innerHeights: props.innerHeights,\n        onRowHeightChange: props.onRowHeightChange\n      }));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateCoords();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.updateCoords();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.props.onRowCoords) {\n        this.props.onRowCoords(null);\n      }\n    }\n  }, {\n    key: \"updateCoords\",\n    value: function updateCoords() {\n      var props = this.props;\n      if (props.onRowCoords && props.clientWidth !== null) {\n        // a populated clientWidth means sizing has stabilized\n        this.props.onRowCoords(new PositionCache(this.rootElRef.current, collectRowEls(this.rowElRefs.currentMap, props.rowNodes), false, true));\n      }\n    }\n  }]);\n  return ResourceTimelineLanes;\n}(BaseComponent);\nfunction collectRowEls(elMap, rowNodes) {\n  return rowNodes.map(function (rowNode) {\n    return elMap[rowNode.id];\n  });\n}\nvar ResourceTimelineGrid = /*#__PURE__*/function (_DateComponent) {\n  _inherits(ResourceTimelineGrid, _DateComponent);\n  var _super10 = _createSuper(ResourceTimelineGrid);\n  function ResourceTimelineGrid() {\n    var _this10;\n    _classCallCheck(this, ResourceTimelineGrid);\n    _this10 = _super10.apply(this, arguments);\n    _this10.computeHasResourceBusinessHours = memoize(computeHasResourceBusinessHours);\n    _this10.resourceSplitter = new ResourceSplitter(); // doesn't let it do businessHours tho\n    _this10.bgSlicer = new TimelineLaneSlicer();\n    _this10.slatsRef = createRef(); // needed for Hit creation :(\n    _this10.state = {\n      slatCoords: null\n    };\n    _this10.handleEl = function (el) {\n      if (el) {\n        _this10.context.registerInteractiveComponent(_assertThisInitialized(_this10), {\n          el: el\n        });\n      } else {\n        _this10.context.unregisterInteractiveComponent(_assertThisInitialized(_this10));\n      }\n    };\n    _this10.handleSlatCoords = function (slatCoords) {\n      _this10.setState({\n        slatCoords: slatCoords\n      });\n      if (_this10.props.onSlatCoords) {\n        _this10.props.onSlatCoords(slatCoords);\n      }\n    };\n    _this10.handleRowCoords = function (rowCoords) {\n      _this10.rowCoords = rowCoords;\n      if (_this10.props.onRowCoords) {\n        _this10.props.onRowCoords(rowCoords);\n      }\n    };\n    return _this10;\n  }\n  _createClass(ResourceTimelineGrid, [{\n    key: \"render\",\n    value: function render() {\n      var _this11 = this;\n      var props = this.props,\n        state = this.state,\n        context = this.context;\n      var dateProfile = props.dateProfile,\n        tDateProfile = props.tDateProfile;\n      var timerUnit = greatestDurationDenominator(tDateProfile.slotDuration).unit;\n      var hasResourceBusinessHours = this.computeHasResourceBusinessHours(props.rowNodes);\n      var splitProps = this.resourceSplitter.splitProps(props);\n      var bgLaneProps = splitProps[''];\n      var bgSlicedProps = this.bgSlicer.sliceProps(bgLaneProps, dateProfile, tDateProfile.isTimeScale ? null : props.nextDayThreshold, context,\n      // wish we didn't need to pass in the rest of these args...\n      dateProfile, context.dateProfileGenerator, tDateProfile, context.dateEnv);\n      // WORKAROUND: make ignore slatCoords when out of sync with dateProfile\n      var slatCoords = state.slatCoords && state.slatCoords.dateProfile === props.dateProfile ? state.slatCoords : null;\n      return createElement(\"div\", {\n        ref: this.handleEl,\n        className: ['fc-timeline-body', props.expandRows ? 'fc-timeline-body-expandrows' : ''].join(' '),\n        style: {\n          minWidth: props.tableMinWidth\n        }\n      }, createElement(NowTimer, {\n        unit: timerUnit\n      }, function (nowDate, todayRange) {\n        return createElement(Fragment, null, createElement(TimelineSlats, {\n          ref: _this11.slatsRef,\n          dateProfile: dateProfile,\n          tDateProfile: tDateProfile,\n          nowDate: nowDate,\n          todayRange: todayRange,\n          clientWidth: props.clientWidth,\n          tableColGroupNode: props.tableColGroupNode,\n          tableMinWidth: props.tableMinWidth,\n          onCoords: _this11.handleSlatCoords,\n          onScrollLeftRequest: props.onScrollLeftRequest\n        }), createElement(TimelineLaneBg, {\n          businessHourSegs: hasResourceBusinessHours ? null : bgSlicedProps.businessHourSegs,\n          bgEventSegs: bgSlicedProps.bgEventSegs,\n          timelineCoords: slatCoords,\n          // empty array will result in unnecessary rerenders?\n          eventResizeSegs: bgSlicedProps.eventResize ? bgSlicedProps.eventResize.segs : [],\n          dateSelectionSegs: bgSlicedProps.dateSelectionSegs,\n          nowDate: nowDate,\n          todayRange: todayRange\n        }), createElement(ResourceTimelineLanes, {\n          rowNodes: props.rowNodes,\n          dateProfile: dateProfile,\n          tDateProfile: props.tDateProfile,\n          nowDate: nowDate,\n          todayRange: todayRange,\n          splitProps: splitProps,\n          fallbackBusinessHours: hasResourceBusinessHours ? props.businessHours : null,\n          clientWidth: props.clientWidth,\n          minHeight: props.expandRows ? props.clientHeight : '',\n          tableMinWidth: props.tableMinWidth,\n          innerHeights: props.rowInnerHeights,\n          slatCoords: slatCoords,\n          onRowCoords: _this11.handleRowCoords,\n          onRowHeightChange: props.onRowHeightChange\n        }), context.options.nowIndicator && slatCoords && slatCoords.isDateInRange(nowDate) && createElement(\"div\", {\n          className: \"fc-timeline-now-indicator-container\"\n        }, createElement(NowIndicatorContainer, {\n          elClasses: ['fc-timeline-now-indicator-line'],\n          elStyle: coordToCss(slatCoords.dateToCoord(nowDate), context.isRtl),\n          isAxis: false,\n          date: nowDate\n        })));\n      }));\n    }\n    // Hit System\n    // ------------------------------------------------------------------------------------------\n  }, {\n    key: \"queryHit\",\n    value: function queryHit(positionLeft, positionTop) {\n      var rowCoords = this.rowCoords;\n      var rowIndex = rowCoords.topToIndex(positionTop);\n      if (rowIndex != null) {\n        var resource = this.props.rowNodes[rowIndex].resource;\n        if (resource) {\n          // not a group\n          var slatHit = this.slatsRef.current.positionToHit(positionLeft);\n          if (slatHit) {\n            return {\n              dateProfile: this.props.dateProfile,\n              dateSpan: {\n                range: slatHit.dateSpan.range,\n                allDay: slatHit.dateSpan.allDay,\n                resourceId: resource.id\n              },\n              rect: {\n                left: slatHit.left,\n                right: slatHit.right,\n                top: rowCoords.tops[rowIndex],\n                bottom: rowCoords.bottoms[rowIndex]\n              },\n              dayEl: slatHit.dayEl,\n              layer: 0\n            };\n          }\n        }\n      }\n      return null;\n    }\n  }]);\n  return ResourceTimelineGrid;\n}(DateComponent);\nfunction computeHasResourceBusinessHours(rowNodes) {\n  var _iterator = _createForOfIteratorHelper(rowNodes),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var node = _step.value;\n      var resource = node.resource;\n      if (resource && resource.businessHours) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return false;\n}\nvar MIN_RESOURCE_AREA_WIDTH = 30; // definitely bigger than scrollbars\n// RENAME?\nvar ResourceTimelineViewLayout = /*#__PURE__*/function (_BaseComponent10) {\n  _inherits(ResourceTimelineViewLayout, _BaseComponent10);\n  var _super11 = _createSuper(ResourceTimelineViewLayout);\n  function ResourceTimelineViewLayout() {\n    var _this12;\n    _classCallCheck(this, ResourceTimelineViewLayout);\n    _this12 = _super11.apply(this, arguments);\n    _this12.scrollGridRef = createRef();\n    _this12.timeBodyScrollerElRef = createRef();\n    _this12.spreadsheetHeaderChunkElRef = createRef();\n    _this12.rootElRef = createRef();\n    _this12.ensureScrollGridResizeId = 0;\n    _this12.state = {\n      resourceAreaWidthOverride: null\n    };\n    /*\n    ghetto debounce. don't race with ScrollGrid's resizing delay. solves #6140\n    */\n    _this12.ensureScrollGridResize = function () {\n      if (_this12.ensureScrollGridResizeId) {\n        clearTimeout(_this12.ensureScrollGridResizeId);\n      }\n      _this12.ensureScrollGridResizeId = setTimeout(function () {\n        _this12.scrollGridRef.current.handleSizing(false);\n      }, config.SCROLLGRID_RESIZE_INTERVAL + 1);\n    };\n    return _this12;\n  }\n  _createClass(ResourceTimelineViewLayout, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props,\n        state = this.state,\n        context = this.context;\n      var options = context.options;\n      var stickyHeaderDates = !props.forPrint && getStickyHeaderDates(options);\n      var stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(options);\n      var sections = [{\n        type: 'header',\n        key: 'header',\n        syncRowHeights: true,\n        isSticky: stickyHeaderDates,\n        chunks: [{\n          key: 'datagrid',\n          elRef: this.spreadsheetHeaderChunkElRef,\n          // TODO: allow the content to specify this. have general-purpose 'content' with obj with keys\n          tableClassName: 'fc-datagrid-header',\n          rowContent: props.spreadsheetHeaderRows\n        }, {\n          key: 'divider',\n          outerContent: createElement(\"td\", {\n            role: \"presentation\",\n            className: 'fc-resource-timeline-divider ' + context.theme.getClass('tableCellShaded')\n          })\n        }, {\n          key: 'timeline',\n          content: props.timeHeaderContent\n        }]\n      }, {\n        type: 'body',\n        key: 'body',\n        syncRowHeights: true,\n        liquid: true,\n        expandRows: Boolean(options.expandRows),\n        chunks: [{\n          key: 'datagrid',\n          tableClassName: 'fc-datagrid-body',\n          rowContent: props.spreadsheetBodyRows\n        }, {\n          key: 'divider',\n          outerContent: createElement(\"td\", {\n            role: \"presentation\",\n            className: 'fc-resource-timeline-divider ' + context.theme.getClass('tableCellShaded')\n          })\n        }, {\n          key: 'timeline',\n          scrollerElRef: this.timeBodyScrollerElRef,\n          content: props.timeBodyContent\n        }]\n      }];\n      if (stickyFooterScrollbar) {\n        sections.push({\n          type: 'footer',\n          key: 'footer',\n          isSticky: true,\n          chunks: [{\n            key: 'datagrid',\n            content: renderScrollShim\n          }, {\n            key: 'divider',\n            outerContent: createElement(\"td\", {\n              role: \"presentation\",\n              className: 'fc-resource-timeline-divider ' + context.theme.getClass('tableCellShaded')\n            })\n          }, {\n            key: 'timeline',\n            content: renderScrollShim\n          }]\n        });\n      }\n      var resourceAreaWidth = state.resourceAreaWidthOverride != null ? state.resourceAreaWidthOverride : options.resourceAreaWidth;\n      return createElement(ScrollGrid, {\n        ref: this.scrollGridRef,\n        elRef: this.rootElRef,\n        liquid: !props.isHeightAuto && !props.forPrint,\n        forPrint: props.forPrint,\n        collapsibleWidth: false,\n        colGroups: [{\n          cols: props.spreadsheetCols,\n          width: resourceAreaWidth\n        }, {\n          cols: []\n        }, {\n          cols: props.timeCols\n        }],\n        sections: sections\n      });\n    }\n  }, {\n    key: \"forceTimeScroll\",\n    value: function forceTimeScroll(left) {\n      var scrollGrid = this.scrollGridRef.current;\n      scrollGrid.forceScrollLeft(2, left); // 2 = the time area\n    }\n  }, {\n    key: \"forceResourceScroll\",\n    value: function forceResourceScroll(top) {\n      var scrollGrid = this.scrollGridRef.current;\n      scrollGrid.forceScrollTop(1, top); // 1 = the body\n    }\n  }, {\n    key: \"getResourceScroll\",\n    value: function getResourceScroll() {\n      var timeBodyScrollerEl = this.timeBodyScrollerElRef.current;\n      return timeBodyScrollerEl.scrollTop;\n    }\n    // Resource Area Resizing\n    // ------------------------------------------------------------------------------------------\n    // NOTE: a callback Ref for the resizer was firing multiple times with same elements (Preact)\n    // that's why we use spreadsheetResizerElRef instead\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.initSpreadsheetResizing();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.destroySpreadsheetResizing();\n    }\n  }, {\n    key: \"initSpreadsheetResizing\",\n    value: function initSpreadsheetResizing() {\n      var _this13 = this;\n      var _this$context2 = this.context,\n        isRtl = _this$context2.isRtl,\n        pluginHooks = _this$context2.pluginHooks;\n      var ElementDraggingImpl = pluginHooks.elementDraggingImpl;\n      var spreadsheetHeadEl = this.spreadsheetHeaderChunkElRef.current;\n      if (ElementDraggingImpl) {\n        var rootEl = this.rootElRef.current;\n        var dragging = this.spreadsheetResizerDragging = new ElementDraggingImpl(rootEl, '.fc-resource-timeline-divider');\n        var dragStartWidth;\n        var viewWidth;\n        dragging.emitter.on('dragstart', function () {\n          dragStartWidth = spreadsheetHeadEl.getBoundingClientRect().width;\n          viewWidth = rootEl.getBoundingClientRect().width;\n        });\n        dragging.emitter.on('dragmove', function (pev) {\n          var newWidth = dragStartWidth + pev.deltaX * (isRtl ? -1 : 1);\n          newWidth = Math.max(newWidth, MIN_RESOURCE_AREA_WIDTH);\n          newWidth = Math.min(newWidth, viewWidth - MIN_RESOURCE_AREA_WIDTH);\n          // scrollgrid will ignore resize requests if there are too many :|\n          _this13.setState({\n            resourceAreaWidthOverride: newWidth\n          }, _this13.ensureScrollGridResize);\n        });\n        dragging.setAutoScrollEnabled(false); // because gets weird with auto-scrolling time area\n      }\n    }\n  }, {\n    key: \"destroySpreadsheetResizing\",\n    value: function destroySpreadsheetResizing() {\n      if (this.spreadsheetResizerDragging) {\n        this.spreadsheetResizerDragging.destroy();\n      }\n    }\n  }]);\n  return ResourceTimelineViewLayout;\n}(BaseComponent);\nvar ResourceTimelineView = /*#__PURE__*/function (_BaseComponent11) {\n  _inherits(ResourceTimelineView, _BaseComponent11);\n  var _super12 = _createSuper(ResourceTimelineView);\n  function ResourceTimelineView(props, context) {\n    var _this14;\n    _classCallCheck(this, ResourceTimelineView);\n    _this14 = _super12.call(this, props, context);\n    _this14.processColOptions = memoize(processColOptions);\n    _this14.buildTimelineDateProfile = memoize(buildTimelineDateProfile);\n    _this14.hasNesting = memoize(hasNesting);\n    _this14.buildRowNodes = memoize(buildRowNodes);\n    _this14.layoutRef = createRef();\n    _this14.rowNodes = [];\n    _this14.renderedRowNodes = [];\n    _this14.buildRowIndex = memoize(buildRowIndex);\n    _this14.handleSlatCoords = function (slatCoords) {\n      _this14.setState({\n        slatCoords: slatCoords\n      });\n    };\n    _this14.handleRowCoords = function (rowCoords) {\n      _this14.rowCoords = rowCoords;\n      _this14.scrollResponder.update(false); // TODO: could eliminate this if rowCoords lived in state\n    };\n\n    _this14.handleMaxCushionWidth = function (slotCushionMaxWidth) {\n      _this14.setState({\n        slotCushionMaxWidth: Math.ceil(slotCushionMaxWidth) // for less rerendering TODO: DRY\n      });\n    };\n    // Scrolling\n    // ------------------------------------------------------------------------------------------------------------------\n    // this is useful for scrolling prev/next dates while resource is scrolled down\n    _this14.handleScrollLeftRequest = function (scrollLeft) {\n      var layout = _this14.layoutRef.current;\n      layout.forceTimeScroll(scrollLeft);\n    };\n    _this14.handleScrollRequest = function (request) {\n      var _assertThisInitialize3 = _assertThisInitialized(_this14),\n        rowCoords = _assertThisInitialize3.rowCoords;\n      var layout = _this14.layoutRef.current;\n      var rowId = request.rowId || request.resourceId;\n      if (rowCoords) {\n        if (rowId) {\n          var rowIdToIndex = _this14.buildRowIndex(_this14.renderedRowNodes);\n          var index = rowIdToIndex[rowId];\n          if (index != null) {\n            var scrollTop = request.fromBottom != null ? rowCoords.bottoms[index] - request.fromBottom :\n            // pixels from bottom edge\n            rowCoords.tops[index] // just use top edge\n            ;\n\n            layout.forceResourceScroll(scrollTop);\n          }\n        }\n        return true;\n      }\n      return null;\n    };\n    // Resource INDIVIDUAL-Column Area Resizing\n    // ------------------------------------------------------------------------------------------\n    _this14.handleColWidthChange = function (colWidths) {\n      _this14.setState({\n        spreadsheetColWidths: colWidths\n      });\n    };\n    _this14.state = {\n      resourceAreaWidth: context.options.resourceAreaWidth,\n      spreadsheetColWidths: []\n    };\n    return _this14;\n  }\n  _createClass(ResourceTimelineView, [{\n    key: \"render\",\n    value: function render() {\n      var _this15 = this;\n      var props = this.props,\n        state = this.state,\n        context = this.context;\n      var options = context.options,\n        viewSpec = context.viewSpec;\n      var _this$processColOptio = this.processColOptions(context.options),\n        superHeaderRendering = _this$processColOptio.superHeaderRendering,\n        groupSpecs = _this$processColOptio.groupSpecs,\n        orderSpecs = _this$processColOptio.orderSpecs,\n        isVGrouping = _this$processColOptio.isVGrouping,\n        colSpecs = _this$processColOptio.colSpecs;\n      var tDateProfile = this.buildTimelineDateProfile(props.dateProfile, context.dateEnv, options, context.dateProfileGenerator);\n      var rowNodes = this.rowNodes = this.buildRowNodes(props.resourceStore, groupSpecs, orderSpecs, isVGrouping, props.resourceEntityExpansions, options.resourcesInitiallyExpanded);\n      var slotMinWidth = options.slotMinWidth;\n      var slatCols = buildSlatCols(tDateProfile, slotMinWidth || this.computeFallbackSlotMinWidth(tDateProfile));\n      return createElement(ViewContainer, {\n        elClasses: ['fc-resource-timeline', !this.hasNesting(rowNodes) && 'fc-resource-timeline-flat', 'fc-timeline', options.eventOverlap === false ? 'fc-timeline-overlap-disabled' : 'fc-timeline-overlap-enabled'],\n        viewSpec: viewSpec\n      }, createElement(ResourceTimelineViewLayout, {\n        ref: this.layoutRef,\n        forPrint: props.forPrint,\n        isHeightAuto: props.isHeightAuto,\n        spreadsheetCols: buildSpreadsheetCols(colSpecs, state.spreadsheetColWidths, ''),\n        spreadsheetHeaderRows: function spreadsheetHeaderRows(contentArg) {\n          return createElement(SpreadsheetHeader // TODO: rename to SpreadsheetHeaderRows\n          , {\n            superHeaderRendering: superHeaderRendering,\n            colSpecs: colSpecs,\n            onColWidthChange: _this15.handleColWidthChange,\n            rowInnerHeights: contentArg.rowSyncHeights\n          });\n        },\n        spreadsheetBodyRows: function spreadsheetBodyRows(contentArg) {\n          return createElement(Fragment, null, _this15.renderSpreadsheetRows(rowNodes, colSpecs, contentArg.rowSyncHeights));\n        },\n        timeCols: slatCols,\n        timeHeaderContent: function timeHeaderContent(contentArg) {\n          return createElement(TimelineHeader, {\n            clientWidth: contentArg.clientWidth,\n            clientHeight: contentArg.clientHeight,\n            tableMinWidth: contentArg.tableMinWidth,\n            tableColGroupNode: contentArg.tableColGroupNode,\n            dateProfile: props.dateProfile,\n            tDateProfile: tDateProfile,\n            slatCoords: state.slatCoords,\n            rowInnerHeights: contentArg.rowSyncHeights,\n            onMaxCushionWidth: slotMinWidth ? null : _this15.handleMaxCushionWidth\n          });\n        },\n        timeBodyContent: function timeBodyContent(contentArg) {\n          return createElement(ResourceTimelineGrid, {\n            dateProfile: props.dateProfile,\n            clientWidth: contentArg.clientWidth,\n            clientHeight: contentArg.clientHeight,\n            tableMinWidth: contentArg.tableMinWidth,\n            tableColGroupNode: contentArg.tableColGroupNode,\n            expandRows: contentArg.expandRows,\n            tDateProfile: tDateProfile,\n            rowNodes: rowNodes,\n            businessHours: props.businessHours,\n            dateSelection: props.dateSelection,\n            eventStore: props.eventStore,\n            eventUiBases: props.eventUiBases,\n            eventSelection: props.eventSelection,\n            eventDrag: props.eventDrag,\n            eventResize: props.eventResize,\n            resourceStore: props.resourceStore,\n            nextDayThreshold: context.options.nextDayThreshold,\n            rowInnerHeights: contentArg.rowSyncHeights,\n            onSlatCoords: _this15.handleSlatCoords,\n            onRowCoords: _this15.handleRowCoords,\n            onScrollLeftRequest: _this15.handleScrollLeftRequest,\n            onRowHeightChange: contentArg.reportRowHeightChange\n          });\n        }\n      }));\n    }\n  }, {\n    key: \"renderSpreadsheetRows\",\n    value: function renderSpreadsheetRows(nodes, colSpecs, rowSyncHeights) {\n      return nodes.map(function (node, index) {\n        if (node.group) {\n          return createElement(SpreadsheetGroupRow, {\n            key: node.id,\n            id: node.id,\n            spreadsheetColCnt: colSpecs.length,\n            isExpanded: node.isExpanded,\n            group: node.group,\n            innerHeight: rowSyncHeights[index] || ''\n          });\n        }\n        if (node.resource) {\n          return createElement(SpreadsheetRow, {\n            key: node.id,\n            colSpecs: colSpecs,\n            rowSpans: node.rowSpans,\n            depth: node.depth,\n            isExpanded: node.isExpanded,\n            hasChildren: node.hasChildren,\n            resource: node.resource,\n            innerHeight: rowSyncHeights[index] || ''\n          });\n        }\n        return null;\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.renderedRowNodes = this.rowNodes;\n      this.scrollResponder = this.context.createScrollResponder(this.handleScrollRequest);\n    }\n  }, {\n    key: \"getSnapshotBeforeUpdate\",\n    value: function getSnapshotBeforeUpdate() {\n      if (!this.props.forPrint) {\n        // because print-view is always zero?\n        return {\n          resourceScroll: this.queryResourceScroll()\n        };\n      }\n      return {};\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      this.renderedRowNodes = this.rowNodes;\n      this.scrollResponder.update(prevProps.dateProfile !== this.props.dateProfile);\n      if (snapshot.resourceScroll) {\n        this.handleScrollRequest(snapshot.resourceScroll); // TODO: this gets triggered too often\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.scrollResponder.detach();\n    }\n  }, {\n    key: \"computeFallbackSlotMinWidth\",\n    value: function computeFallbackSlotMinWidth(tDateProfile) {\n      return Math.max(30, (this.state.slotCushionMaxWidth || 0) / tDateProfile.slotsPerLabel);\n    }\n  }, {\n    key: \"queryResourceScroll\",\n    value: function queryResourceScroll() {\n      var rowCoords = this.rowCoords,\n        renderedRowNodes = this.renderedRowNodes;\n      if (rowCoords) {\n        var layout = this.layoutRef.current;\n        var trBottoms = rowCoords.bottoms;\n        var scrollTop = layout.getResourceScroll();\n        var scroll = {};\n        for (var i = 0; i < trBottoms.length; i += 1) {\n          var rowNode = renderedRowNodes[i];\n          var elBottom = trBottoms[i] - scrollTop; // from the top of the scroller\n          if (elBottom > 0) {\n            scroll.rowId = rowNode.id;\n            scroll.fromBottom = elBottom;\n            break;\n          }\n        }\n        return scroll;\n      }\n      return null;\n    }\n  }]);\n  return ResourceTimelineView;\n}(BaseComponent);\nResourceTimelineView.addStateEquality({\n  spreadsheetColWidths: isArraysEqual\n});\nfunction buildRowIndex(rowNodes) {\n  var rowIdToIndex = {};\n  for (var i = 0; i < rowNodes.length; i += 1) {\n    rowIdToIndex[rowNodes[i].id] = i;\n  }\n  return rowIdToIndex;\n}\nfunction buildSpreadsheetCols(colSpecs, forcedWidths) {\n  var fallbackWidth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  return colSpecs.map(function (colSpec, i) {\n    return {\n      className: colSpec.isMain ? 'fc-main-col' : '',\n      width: forcedWidths[i] || colSpec.width || fallbackWidth\n    };\n  });\n}\nfunction hasNesting(nodes) {\n  var _iterator2 = _createForOfIteratorHelper(nodes),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var node = _step2.value;\n      if (node.group) {\n        return true;\n      }\n      if (node.resource) {\n        if (node.hasChildren) {\n          return true;\n        }\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return false;\n}\nfunction processColOptions(options) {\n  var allColSpecs = options.resourceAreaColumns || [];\n  var superHeaderRendering = null;\n  if (!allColSpecs.length) {\n    allColSpecs.push({\n      headerClassNames: options.resourceAreaHeaderClassNames,\n      headerContent: options.resourceAreaHeaderContent,\n      headerDefault: function headerDefault() {\n        return 'Resources';\n      },\n      headerDidMount: options.resourceAreaHeaderDidMount,\n      headerWillUnmount: options.resourceAreaHeaderWillUnmount\n    });\n  } else if (options.resourceAreaHeaderContent) {\n    // weird way to determine if content\n    superHeaderRendering = {\n      headerClassNames: options.resourceAreaHeaderClassNames,\n      headerContent: options.resourceAreaHeaderContent,\n      headerDidMount: options.resourceAreaHeaderDidMount,\n      headerWillUnmount: options.resourceAreaHeaderWillUnmount\n    };\n  }\n  var plainColSpecs = [];\n  var groupColSpecs = []; // part of the colSpecs, but filtered out in order to put first\n  var groupSpecs = [];\n  var isVGrouping = false;\n  var _iterator3 = _createForOfIteratorHelper(allColSpecs),\n    _step3;\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var colSpec = _step3.value;\n      if (colSpec.group) {\n        groupColSpecs.push(Object.assign(Object.assign({}, colSpec), {\n          cellClassNames: colSpec.cellClassNames || options.resourceGroupLabelClassNames,\n          cellContent: colSpec.cellContent || options.resourceGroupLabelContent,\n          cellDidMount: colSpec.cellDidMount || options.resourceGroupLabelDidMount,\n          cellWillUnmount: colSpec.cellWillUnmount || options.resourceGroupLaneWillUnmount\n        }));\n      } else {\n        plainColSpecs.push(colSpec);\n      }\n    }\n    // BAD: mutates a user-supplied option\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n  var mainColSpec = plainColSpecs[0];\n  mainColSpec.isMain = true;\n  mainColSpec.cellClassNames = mainColSpec.cellClassNames || options.resourceLabelClassNames;\n  mainColSpec.cellContent = mainColSpec.cellContent || options.resourceLabelContent;\n  mainColSpec.cellDidMount = mainColSpec.cellDidMount || options.resourceLabelDidMount;\n  mainColSpec.cellWillUnmount = mainColSpec.cellWillUnmount || options.resourceLabelWillUnmount;\n  if (groupColSpecs.length) {\n    groupSpecs = groupColSpecs;\n    isVGrouping = true;\n  } else {\n    var hGroupField = options.resourceGroupField;\n    if (hGroupField) {\n      groupSpecs.push({\n        field: hGroupField,\n        labelClassNames: options.resourceGroupLabelClassNames,\n        labelContent: options.resourceGroupLabelContent,\n        labelDidMount: options.resourceGroupLabelDidMount,\n        labelWillUnmount: options.resourceGroupLabelWillUnmount,\n        laneClassNames: options.resourceGroupLaneClassNames,\n        laneContent: options.resourceGroupLaneContent,\n        laneDidMount: options.resourceGroupLaneDidMount,\n        laneWillUnmount: options.resourceGroupLaneWillUnmount\n      });\n    }\n  }\n  var allOrderSpecs = options.resourceOrder || DEFAULT_RESOURCE_ORDER;\n  var plainOrderSpecs = [];\n  var _iterator4 = _createForOfIteratorHelper(allOrderSpecs),\n    _step4;\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var orderSpec = _step4.value;\n      var isGroup = false;\n      var _iterator5 = _createForOfIteratorHelper(groupSpecs),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var groupSpec = _step5.value;\n          if (groupSpec.field === orderSpec.field) {\n            groupSpec.order = orderSpec.order; // -1, 0, 1\n            isGroup = true;\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n      if (!isGroup) {\n        plainOrderSpecs.push(orderSpec);\n      }\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n  return {\n    superHeaderRendering: superHeaderRendering,\n    isVGrouping: isVGrouping,\n    groupSpecs: groupSpecs,\n    colSpecs: groupColSpecs.concat(plainColSpecs),\n    orderSpecs: plainOrderSpecs\n  };\n}\nexport { ResourceTimelineLane, ResourceTimelineView, SpreadsheetRow };","map":{"version":3,"names":["injectStyles","BaseComponent","memoizeObjArg","ContentContainer","isArraysEqual","RefMap","findElements","elementClosest","PositionCache","DateComponent","memoize","greatestDurationDenominator","NowTimer","NowIndicatorContainer","config","getStickyHeaderDates","getStickyFooterScrollbar","renderScrollShim","ViewContainer","createElement","Fragment","createRef","TimelineLane","TimelineLaneSlicer","TimelineSlats","TimelineLaneBg","coordToCss","buildTimelineDateProfile","buildSlatCols","TimelineHeader","buildResourceFields","getPublicId","isGroupsEqual","refineRenderProps","refineRenderProps$1","ResourceSplitter","buildRowNodes","DEFAULT_RESOURCE_ORDER","ResourceApi","ScrollGrid","css_248z","ExpanderIcon","_ref","depth","hasChildren","isExpanded","onExpanderClick","nodes","i","push","className","iconClassNames","onClick","join","apply","concat","SpreadsheetIndividualCell","_BaseComponent","_inherits","_super","_createSuper","_this","_classCallCheck","arguments","ev","_assertThisInitialize","_assertThisInitialized","props","context","dispatch","type","id","resource","_createClass","key","value","render","_this2","colSpec","renderProps","fieldValue","elTag","elClasses","elAttrs","role","generatorName","isMain","undefined","customGenerator","cellContent","defaultGenerator","renderResourceInner","classNameGenerator","cellClassNames","didMount","cellDidMount","willUnmount","cellWillUnmount","InnerContent","style","height","innerHeight","input","view","viewApi","SpreadsheetGroupCell","_BaseComponent2","_super2","groupValue","rowSpan","renderGroupInner","SpreadsheetRow","_BaseComponent3","_super3","rowSpans","resourceFields","colSpecs","map","field","title","addPropsEquality","SpreadsheetGroupRow","_BaseComponent4","_super4","_this3","innerInnerRef","_assertThisInitialize2","_this4","group","spec","theme","getClass","scope","colSpan","spreadsheetColCnt","labelContent","renderCellInner","labelClassNames","labelDidMount","labelWillUnmount","ref","SPREADSHEET_COL_MIN_WIDTH","SpreadsheetHeader","_BaseComponent5","_super5","_this5","resizerElRefs","_handleColResizerEl","bind","colDraggings","_this6","_this$props","superHeaderRendering","rowInnerHeights","rowNodes","slice","rowInnerHeight","shift","length","headerContent","headerDefault","headerClassNames","headerDidMount","headerWillUnmount","isLastCol","resizerEl","index","dragging","destroy","initColResizing","parseInt","_this$context","pluginHooks","isRtl","onColWidthChange","ElementDraggingImpl","elementDraggingImpl","startWidth","currentWidths","emitter","on","allCells","cellEl","getBoundingClientRect","width","pev","Math","max","deltaX","setAutoScrollEnabled","ResourceTimelineLane","_BaseComponent6","_super6","_this7","handleHeightChange","innerEl","isStable","onHeightChange","_this8","options","elRef","resourceLaneContent","resourceLaneClassNames","resourceLaneDidMount","resourceLaneWillUnmount","dateProfile","tDateProfile","nowDate","todayRange","nextDayThreshold","businessHours","eventStore","eventUiBases","dateSelection","eventSelection","eventDrag","eventResize","timelineCoords","resourceId","DividerRow","_BaseComponent7","_super7","renderHooks","laneContent","laneClassNames","laneDidMount","laneWillUnmount","InnerContainer","elStyle","ResourceTimelineLanesBody","_BaseComponent8","_super8","rowElRefs","innerHeights","node","Object","assign","splitProps","fallbackBusinessHours","slatCoords","onRowHeightChange","ResourceTimelineLanes","_BaseComponent9","_super9","_this9","rootElRef","minWidth","tableMinWidth","clientWidth","minHeight","componentDidMount","updateCoords","componentDidUpdate","componentWillUnmount","onRowCoords","current","collectRowEls","currentMap","elMap","rowNode","ResourceTimelineGrid","_DateComponent","_super10","_this10","computeHasResourceBusinessHours","resourceSplitter","bgSlicer","slatsRef","state","handleEl","el","registerInteractiveComponent","unregisterInteractiveComponent","handleSlatCoords","setState","onSlatCoords","handleRowCoords","rowCoords","_this11","timerUnit","slotDuration","unit","hasResourceBusinessHours","bgLaneProps","bgSlicedProps","sliceProps","isTimeScale","dateProfileGenerator","dateEnv","expandRows","tableColGroupNode","onCoords","onScrollLeftRequest","businessHourSegs","bgEventSegs","eventResizeSegs","segs","dateSelectionSegs","clientHeight","nowIndicator","isDateInRange","dateToCoord","isAxis","date","queryHit","positionLeft","positionTop","rowIndex","topToIndex","slatHit","positionToHit","dateSpan","range","allDay","rect","left","right","top","tops","bottom","bottoms","dayEl","layer","_iterator","_createForOfIteratorHelper","_step","s","n","done","err","e","f","MIN_RESOURCE_AREA_WIDTH","ResourceTimelineViewLayout","_BaseComponent10","_super11","_this12","scrollGridRef","timeBodyScrollerElRef","spreadsheetHeaderChunkElRef","ensureScrollGridResizeId","resourceAreaWidthOverride","ensureScrollGridResize","clearTimeout","setTimeout","handleSizing","SCROLLGRID_RESIZE_INTERVAL","stickyHeaderDates","forPrint","stickyFooterScrollbar","sections","syncRowHeights","isSticky","chunks","tableClassName","rowContent","spreadsheetHeaderRows","outerContent","content","timeHeaderContent","liquid","Boolean","spreadsheetBodyRows","scrollerElRef","timeBodyContent","resourceAreaWidth","isHeightAuto","collapsibleWidth","colGroups","cols","spreadsheetCols","timeCols","forceTimeScroll","scrollGrid","forceScrollLeft","forceResourceScroll","forceScrollTop","getResourceScroll","timeBodyScrollerEl","scrollTop","initSpreadsheetResizing","destroySpreadsheetResizing","_this13","_this$context2","spreadsheetHeadEl","rootEl","spreadsheetResizerDragging","dragStartWidth","viewWidth","newWidth","min","ResourceTimelineView","_BaseComponent11","_super12","_this14","call","processColOptions","hasNesting","layoutRef","renderedRowNodes","buildRowIndex","scrollResponder","update","handleMaxCushionWidth","slotCushionMaxWidth","ceil","handleScrollLeftRequest","scrollLeft","layout","handleScrollRequest","request","_assertThisInitialize3","rowId","rowIdToIndex","fromBottom","handleColWidthChange","colWidths","spreadsheetColWidths","_this15","viewSpec","_this$processColOptio","groupSpecs","orderSpecs","isVGrouping","resourceStore","resourceEntityExpansions","resourcesInitiallyExpanded","slotMinWidth","slatCols","computeFallbackSlotMinWidth","eventOverlap","buildSpreadsheetCols","contentArg","rowSyncHeights","renderSpreadsheetRows","onMaxCushionWidth","reportRowHeightChange","createScrollResponder","getSnapshotBeforeUpdate","resourceScroll","queryResourceScroll","prevProps","prevState","snapshot","detach","slotsPerLabel","trBottoms","scroll","elBottom","addStateEquality","forcedWidths","fallbackWidth","_iterator2","_step2","allColSpecs","resourceAreaColumns","resourceAreaHeaderClassNames","resourceAreaHeaderContent","resourceAreaHeaderDidMount","resourceAreaHeaderWillUnmount","plainColSpecs","groupColSpecs","_iterator3","_step3","resourceGroupLabelClassNames","resourceGroupLabelContent","resourceGroupLabelDidMount","resourceGroupLaneWillUnmount","mainColSpec","resourceLabelClassNames","resourceLabelContent","resourceLabelDidMount","resourceLabelWillUnmount","hGroupField","resourceGroupField","resourceGroupLabelWillUnmount","resourceGroupLaneClassNames","resourceGroupLaneContent","resourceGroupLaneDidMount","allOrderSpecs","resourceOrder","plainOrderSpecs","_iterator4","_step4","orderSpec","isGroup","_iterator5","_step5","groupSpec","order"],"sources":["C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@fullcalendar/resource-timeline/internal.js"],"sourcesContent":["import { injectStyles, BaseComponent, memoizeObjArg, ContentContainer, isArraysEqual, RefMap, findElements, elementClosest, PositionCache, DateComponent, memoize, greatestDurationDenominator, NowTimer, NowIndicatorContainer, config, getStickyHeaderDates, getStickyFooterScrollbar, renderScrollShim, ViewContainer } from '@fullcalendar/core/internal.js';\nimport { createElement, Fragment, createRef } from '@fullcalendar/core/preact.js';\nimport { TimelineLane, TimelineLaneSlicer, TimelineSlats, TimelineLaneBg, coordToCss, buildTimelineDateProfile, buildSlatCols, TimelineHeader } from '@fullcalendar/timeline/internal.js';\nimport { buildResourceFields, getPublicId, isGroupsEqual, refineRenderProps as refineRenderProps$1, ResourceSplitter, buildRowNodes, DEFAULT_RESOURCE_ORDER } from '@fullcalendar/resource/internal.js';\nimport { ResourceApi } from '@fullcalendar/resource/index.js';\nimport { ScrollGrid } from '@fullcalendar/scrollgrid/internal.js';\n\nvar css_248z = \".fc .fc-resource-timeline-divider{cursor:col-resize;width:3px}.fc .fc-resource-group{font-weight:inherit;text-align:inherit}.fc .fc-resource-timeline .fc-resource-group:not([rowspan]){background:var(--fc-neutral-bg-color)}.fc .fc-timeline-lane-frame{position:relative}.fc .fc-timeline-overlap-enabled .fc-timeline-lane-frame .fc-timeline-events{box-sizing:content-box;padding-bottom:10px}.fc-timeline-body-expandrows td.fc-timeline-lane{position:relative}.fc-timeline-body-expandrows .fc-timeline-lane-frame{position:static}.fc-datagrid-cell-frame-liquid{height:100%}.fc-liquid-hack .fc-datagrid-cell-frame-liquid{bottom:0;height:auto;left:0;position:absolute;right:0;top:0}.fc .fc-datagrid-header .fc-datagrid-cell-frame{align-items:center;display:flex;justify-content:flex-start;position:relative}.fc .fc-datagrid-cell-resizer{bottom:0;cursor:col-resize;position:absolute;top:0;width:5px;z-index:1}.fc .fc-datagrid-cell-cushion{overflow:hidden;padding:8px;white-space:nowrap}.fc .fc-datagrid-expander{cursor:pointer;opacity:.65}.fc .fc-datagrid-expander .fc-icon{display:inline-block;width:1em}.fc .fc-datagrid-expander-placeholder{cursor:auto}.fc .fc-resource-timeline-flat .fc-datagrid-expander-placeholder{display:none}.fc-direction-ltr .fc-datagrid-cell-resizer{right:-3px}.fc-direction-rtl .fc-datagrid-cell-resizer{left:-3px}.fc-direction-ltr .fc-datagrid-expander{margin-right:3px}.fc-direction-rtl .fc-datagrid-expander{margin-left:3px}\";\ninjectStyles(css_248z);\n\n/*\nRenders the DOM responsible for the subrow expander area,\nas well as the space before it (used to align expanders of similar depths)\n*/\nfunction ExpanderIcon({ depth, hasChildren, isExpanded, onExpanderClick }) {\n    let nodes = [];\n    for (let i = 0; i < depth; i += 1) {\n        nodes.push(createElement(\"span\", { className: \"fc-icon\" }));\n    }\n    let iconClassNames = ['fc-icon'];\n    if (hasChildren) {\n        if (isExpanded) {\n            iconClassNames.push('fc-icon-minus-square');\n        }\n        else {\n            iconClassNames.push('fc-icon-plus-square');\n        }\n    }\n    nodes.push(createElement(\"span\", { className: 'fc-datagrid-expander' + (hasChildren ? '' : ' fc-datagrid-expander-placeholder'), onClick: onExpanderClick },\n        createElement(\"span\", { className: iconClassNames.join(' ') })));\n    return createElement(Fragment, {}, ...nodes);\n}\n\n// worth making a PureComponent? (because of innerHeight)\nclass SpreadsheetIndividualCell extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.refineRenderProps = memoizeObjArg(refineRenderProps);\n        this.onExpanderClick = (ev) => {\n            let { props } = this;\n            if (props.hasChildren) {\n                this.context.dispatch({\n                    type: 'SET_RESOURCE_ENTITY_EXPANDED',\n                    id: props.resource.id,\n                    isExpanded: !props.isExpanded,\n                });\n            }\n        };\n    }\n    render() {\n        let { props, context } = this;\n        let { colSpec } = props;\n        let renderProps = this.refineRenderProps({\n            resource: props.resource,\n            fieldValue: props.fieldValue,\n            context,\n        });\n        return (createElement(ContentContainer, { elTag: \"td\", elClasses: [\n                'fc-datagrid-cell',\n                'fc-resource',\n            ], elAttrs: {\n                role: 'gridcell',\n                'data-resource-id': props.resource.id,\n            }, renderProps: renderProps, generatorName: colSpec.isMain ? 'resourceLabelContent' : undefined, customGenerator: colSpec.cellContent, defaultGenerator: renderResourceInner, classNameGenerator: colSpec.cellClassNames, didMount: colSpec.cellDidMount, willUnmount: colSpec.cellWillUnmount }, (InnerContent) => (createElement(\"div\", { className: \"fc-datagrid-cell-frame\", style: { height: props.innerHeight } },\n            createElement(\"div\", { className: \"fc-datagrid-cell-cushion fc-scrollgrid-sync-inner\" },\n                colSpec.isMain && (createElement(ExpanderIcon, { depth: props.depth, hasChildren: props.hasChildren, isExpanded: props.isExpanded, onExpanderClick: this.onExpanderClick })),\n                createElement(InnerContent, { elTag: \"span\", elClasses: ['fc-datagrid-cell-main'] }))))));\n    }\n}\nfunction renderResourceInner(renderProps) {\n    return renderProps.fieldValue || createElement(Fragment, null, \"\\u00A0\");\n}\nfunction refineRenderProps(input) {\n    return {\n        resource: new ResourceApi(input.context, input.resource),\n        fieldValue: input.fieldValue,\n        view: input.context.viewApi,\n    };\n}\n\n// for VERTICAL cell grouping, in spreadsheet area\nclass SpreadsheetGroupCell extends BaseComponent {\n    render() {\n        let { props, context } = this;\n        let { colSpec } = props;\n        let renderProps = {\n            groupValue: props.fieldValue,\n            view: context.viewApi,\n        };\n        // a grouped cell. no data that is specific to this specific resource\n        // `colSpec` is for the group. a GroupSpec :(\n        return (createElement(ContentContainer, { elTag: \"td\", elClasses: [\n                'fc-datagrid-cell',\n                'fc-resource-group',\n            ], elAttrs: {\n                role: 'gridcell',\n                rowSpan: props.rowSpan,\n            }, renderProps: renderProps, generatorName: \"resourceGroupLabelContent\", customGenerator: colSpec.cellContent, defaultGenerator: renderGroupInner, classNameGenerator: colSpec.cellClassNames, didMount: colSpec.cellDidMount, willUnmount: colSpec.cellWillUnmount }, (InnerContent) => (createElement(\"div\", { className: \"fc-datagrid-cell-frame fc-datagrid-cell-frame-liquid\" },\n            createElement(InnerContent, { elTag: \"div\", elClasses: ['fc-datagrid-cell-cushion', 'fc-sticky'] })))));\n    }\n}\nfunction renderGroupInner(renderProps) {\n    return renderProps.groupValue || createElement(Fragment, null, \"\\u00A0\");\n}\n\nclass SpreadsheetRow extends BaseComponent {\n    render() {\n        let { props } = this;\n        let { resource, rowSpans, depth } = props;\n        let resourceFields = buildResourceFields(resource); // slightly inefficient. already done up the call stack\n        return (createElement(\"tr\", { role: \"row\" }, props.colSpecs.map((colSpec, i) => {\n            let rowSpan = rowSpans[i];\n            if (rowSpan === 0) { // not responsible for group-based rows. VRowGroup is\n                return null;\n            }\n            if (rowSpan == null) {\n                rowSpan = 1;\n            }\n            let fieldValue = colSpec.field ? resourceFields[colSpec.field] :\n                (resource.title || getPublicId(resource.id));\n            if (rowSpan > 1) {\n                return (createElement(SpreadsheetGroupCell, { key: i, colSpec: colSpec, fieldValue: fieldValue, rowSpan: rowSpan }));\n            }\n            return (createElement(SpreadsheetIndividualCell, { key: i, colSpec: colSpec, resource: resource, fieldValue: fieldValue, depth: depth, hasChildren: props.hasChildren, isExpanded: props.isExpanded, innerHeight: props.innerHeight }));\n        })));\n    }\n}\nSpreadsheetRow.addPropsEquality({\n    rowSpans: isArraysEqual,\n});\n\n// for HORIZONTAL cell grouping, in spreadsheet area\nclass SpreadsheetGroupRow extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.innerInnerRef = createRef();\n        this.onExpanderClick = () => {\n            let { props } = this;\n            this.context.dispatch({\n                type: 'SET_RESOURCE_ENTITY_EXPANDED',\n                id: props.id,\n                isExpanded: !props.isExpanded,\n            });\n        };\n    }\n    render() {\n        let { props, context } = this;\n        let renderProps = { groupValue: props.group.value, view: context.viewApi };\n        let spec = props.group.spec;\n        return (createElement(\"tr\", { role: \"row\" },\n            createElement(ContentContainer, { elTag: \"th\", elClasses: [\n                    'fc-datagrid-cell',\n                    'fc-resource-group',\n                    context.theme.getClass('tableCellShaded'),\n                ], elAttrs: {\n                    // ARIA TODO: not really a columnheader\n                    // extremely tedious to make this aria-compliant,\n                    // to assign multiple headers to each cell\n                    // https://www.w3.org/WAI/tutorials/tables/multi-level/\n                    role: 'columnheader',\n                    scope: 'colgroup',\n                    colSpan: props.spreadsheetColCnt,\n                }, renderProps: renderProps, generatorName: \"resourceGroupLabelContent\", customGenerator: spec.labelContent, defaultGenerator: renderCellInner, classNameGenerator: spec.labelClassNames, didMount: spec.labelDidMount, willUnmount: spec.labelWillUnmount }, (InnerContent) => (createElement(\"div\", { className: \"fc-datagrid-cell-frame\", style: { height: props.innerHeight } },\n                createElement(\"div\", { className: \"fc-datagrid-cell-cushion fc-scrollgrid-sync-inner\", ref: this.innerInnerRef },\n                    createElement(ExpanderIcon, { depth: 0, hasChildren: true, isExpanded: props.isExpanded, onExpanderClick: this.onExpanderClick }),\n                    createElement(InnerContent, { elTag: \"span\", elClasses: ['fc-datagrid-cell-main'] })))))));\n    }\n}\nSpreadsheetGroupRow.addPropsEquality({\n    group: isGroupsEqual,\n});\nfunction renderCellInner(renderProps) {\n    return renderProps.groupValue || createElement(Fragment, null, \"\\u00A0\");\n}\n\nconst SPREADSHEET_COL_MIN_WIDTH = 20;\nclass SpreadsheetHeader extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.resizerElRefs = new RefMap(this._handleColResizerEl.bind(this));\n        this.colDraggings = {};\n    }\n    render() {\n        let { colSpecs, superHeaderRendering, rowInnerHeights } = this.props;\n        let renderProps = { view: this.context.viewApi };\n        let rowNodes = [];\n        rowInnerHeights = rowInnerHeights.slice(); // copy, because we're gonna pop\n        if (superHeaderRendering) {\n            let rowInnerHeight = rowInnerHeights.shift();\n            rowNodes.push(createElement(\"tr\", { key: \"row-super\", role: \"row\" },\n                createElement(ContentContainer, { elTag: \"th\", elClasses: [\n                        'fc-datagrid-cell',\n                        'fc-datagrid-cell-super',\n                    ], elAttrs: {\n                        role: 'columnheader',\n                        scope: 'colgroup',\n                        colSpan: colSpecs.length,\n                    }, renderProps: renderProps, generatorName: \"resourceAreaHeaderContent\", customGenerator: superHeaderRendering.headerContent, defaultGenerator: superHeaderRendering.headerDefault, classNameGenerator: superHeaderRendering.headerClassNames, didMount: superHeaderRendering.headerDidMount, willUnmount: superHeaderRendering.headerWillUnmount }, (InnerContent) => (createElement(\"div\", { className: \"fc-datagrid-cell-frame\", style: { height: rowInnerHeight } },\n                    createElement(InnerContent, { elTag: \"div\", elClasses: ['fc-datagrid-cell-cushion', 'fc-scrollgrid-sync-inner'] }))))));\n        }\n        let rowInnerHeight = rowInnerHeights.shift();\n        rowNodes.push(createElement(\"tr\", { key: \"row\", role: \"row\" }, colSpecs.map((colSpec, i) => {\n            let isLastCol = i === (colSpecs.length - 1);\n            // need empty inner div for abs positioning for resizer\n            return (createElement(ContentContainer, { key: i, elTag: \"th\", elClasses: ['fc-datagrid-cell'], elAttrs: { role: 'columnheader' }, renderProps: renderProps, generatorName: \"resourceAreaHeaderContent\", customGenerator: colSpec.headerContent, defaultGenerator: colSpec.headerDefault, classNameGenerator: colSpec.headerClassNames, didMount: colSpec.headerDidMount, willUnmount: colSpec.headerWillUnmount }, (InnerContent) => (createElement(\"div\", { className: \"fc-datagrid-cell-frame\", style: { height: rowInnerHeight } },\n                createElement(\"div\", { className: \"fc-datagrid-cell-cushion fc-scrollgrid-sync-inner\" },\n                    colSpec.isMain && (createElement(\"span\", { className: \"fc-datagrid-expander fc-datagrid-expander-placeholder\" },\n                        createElement(\"span\", { className: \"fc-icon\" }))),\n                    createElement(InnerContent, { elTag: \"span\", elClasses: ['fc-datagrid-cell-main'] })),\n                !isLastCol && (createElement(\"div\", { className: \"fc-datagrid-cell-resizer\", ref: this.resizerElRefs.createRef(i) }))))));\n        })));\n        return (createElement(Fragment, null, rowNodes));\n    }\n    _handleColResizerEl(resizerEl, index) {\n        let { colDraggings } = this;\n        if (!resizerEl) {\n            let dragging = colDraggings[index];\n            if (dragging) {\n                dragging.destroy();\n                delete colDraggings[index];\n            }\n        }\n        else {\n            let dragging = this.initColResizing(resizerEl, parseInt(index, 10));\n            if (dragging) {\n                colDraggings[index] = dragging;\n            }\n        }\n    }\n    initColResizing(resizerEl, index) {\n        let { pluginHooks, isRtl } = this.context;\n        let { onColWidthChange } = this.props;\n        let ElementDraggingImpl = pluginHooks.elementDraggingImpl;\n        if (ElementDraggingImpl) {\n            let dragging = new ElementDraggingImpl(resizerEl);\n            let startWidth; // of just the single column\n            let currentWidths; // of all columns\n            dragging.emitter.on('dragstart', () => {\n                let allCells = findElements(elementClosest(resizerEl, 'tr'), 'th');\n                currentWidths = allCells.map((cellEl) => (cellEl.getBoundingClientRect().width));\n                startWidth = currentWidths[index];\n            });\n            dragging.emitter.on('dragmove', (pev) => {\n                currentWidths[index] = Math.max(startWidth + pev.deltaX * (isRtl ? -1 : 1), SPREADSHEET_COL_MIN_WIDTH);\n                if (onColWidthChange) {\n                    onColWidthChange(currentWidths.slice()); // send a copy since currentWidths continues to be mutated\n                }\n            });\n            dragging.setAutoScrollEnabled(false); // because gets weird with auto-scrolling time area\n            return dragging;\n        }\n        return null;\n    }\n}\n\nclass ResourceTimelineLane extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.refineRenderProps = memoizeObjArg(refineRenderProps$1);\n        this.handleHeightChange = (innerEl, isStable) => {\n            if (this.props.onHeightChange) {\n                this.props.onHeightChange(\n                // would want to use own <tr> ref, but not guaranteed to be ready when this fires\n                elementClosest(innerEl, 'tr'), isStable);\n            }\n        };\n    }\n    render() {\n        let { props, context } = this;\n        let { options } = context;\n        let renderProps = this.refineRenderProps({ resource: props.resource, context });\n        return (createElement(\"tr\", { ref: props.elRef },\n            createElement(ContentContainer, { elTag: \"td\", elClasses: [\n                    'fc-timeline-lane',\n                    'fc-resource',\n                ], elAttrs: {\n                    'data-resource-id': props.resource.id,\n                }, renderProps: renderProps, generatorName: \"resourceLaneContent\", customGenerator: options.resourceLaneContent, classNameGenerator: options.resourceLaneClassNames, didMount: options.resourceLaneDidMount, willUnmount: options.resourceLaneWillUnmount }, (InnerContent) => (createElement(\"div\", { className: \"fc-timeline-lane-frame\", style: { height: props.innerHeight } },\n                createElement(InnerContent, { elTag: \"div\", elClasses: ['fc-timeline-lane-misc'] }),\n                createElement(TimelineLane, { dateProfile: props.dateProfile, tDateProfile: props.tDateProfile, nowDate: props.nowDate, todayRange: props.todayRange, nextDayThreshold: props.nextDayThreshold, businessHours: props.businessHours, eventStore: props.eventStore, eventUiBases: props.eventUiBases, dateSelection: props.dateSelection, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, timelineCoords: props.timelineCoords, onHeightChange: this.handleHeightChange, resourceId: props.resource.id })))))); // important NOT to do liquid-height. dont want to shrink height smaller than content\n    }\n}\n\n/*\nparallels the SpreadsheetGroupRow\n*/\nclass DividerRow extends BaseComponent {\n    render() {\n        let { props, context } = this;\n        let { renderHooks } = props;\n        let renderProps = {\n            groupValue: props.groupValue,\n            view: context.viewApi,\n        };\n        return (createElement(\"tr\", { ref: props.elRef },\n            createElement(ContentContainer, { elTag: \"td\", elRef: props.elRef, elClasses: [\n                    'fc-timeline-lane',\n                    'fc-resource-group',\n                    context.theme.getClass('tableCellShaded'),\n                ], renderProps: renderProps, generatorName: \"resourceGroupLaneContent\", customGenerator: renderHooks.laneContent, classNameGenerator: renderHooks.laneClassNames, didMount: renderHooks.laneDidMount, willUnmount: renderHooks.laneWillUnmount }, (InnerContainer) => (createElement(InnerContainer, { elTag: \"div\", elStyle: { height: props.innerHeight } })))));\n    }\n}\n\nclass ResourceTimelineLanesBody extends BaseComponent {\n    render() {\n        let { props, context } = this;\n        let { rowElRefs, innerHeights } = props;\n        return (createElement(\"tbody\", null, props.rowNodes.map((node, index) => {\n            if (node.group) {\n                return (createElement(DividerRow, { key: node.id, elRef: rowElRefs.createRef(node.id), groupValue: node.group.value, renderHooks: node.group.spec, innerHeight: innerHeights[index] || '' }));\n            }\n            if (node.resource) {\n                let resource = node.resource;\n                return (createElement(ResourceTimelineLane, Object.assign({ key: node.id, elRef: rowElRefs.createRef(node.id) }, props.splitProps[resource.id], { resource: resource, dateProfile: props.dateProfile, tDateProfile: props.tDateProfile, nowDate: props.nowDate, todayRange: props.todayRange, nextDayThreshold: context.options.nextDayThreshold, businessHours: resource.businessHours || props.fallbackBusinessHours, innerHeight: innerHeights[index] || '', timelineCoords: props.slatCoords, onHeightChange: props.onRowHeightChange })));\n            }\n            return null;\n        })));\n    }\n}\n\nclass ResourceTimelineLanes extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.rootElRef = createRef();\n        this.rowElRefs = new RefMap();\n    }\n    render() {\n        let { props, context } = this;\n        return (createElement(\"table\", { ref: this.rootElRef, \"aria-hidden\": true, className: 'fc-scrollgrid-sync-table ' + context.theme.getClass('table'), style: {\n                minWidth: props.tableMinWidth,\n                width: props.clientWidth,\n                height: props.minHeight,\n            } },\n            createElement(ResourceTimelineLanesBody, { rowElRefs: this.rowElRefs, rowNodes: props.rowNodes, dateProfile: props.dateProfile, tDateProfile: props.tDateProfile, nowDate: props.nowDate, todayRange: props.todayRange, splitProps: props.splitProps, fallbackBusinessHours: props.fallbackBusinessHours, slatCoords: props.slatCoords, innerHeights: props.innerHeights, onRowHeightChange: props.onRowHeightChange })));\n    }\n    componentDidMount() {\n        this.updateCoords();\n    }\n    componentDidUpdate() {\n        this.updateCoords();\n    }\n    componentWillUnmount() {\n        if (this.props.onRowCoords) {\n            this.props.onRowCoords(null);\n        }\n    }\n    updateCoords() {\n        let { props } = this;\n        if (props.onRowCoords && props.clientWidth !== null) { // a populated clientWidth means sizing has stabilized\n            this.props.onRowCoords(new PositionCache(this.rootElRef.current, collectRowEls(this.rowElRefs.currentMap, props.rowNodes), false, true));\n        }\n    }\n}\nfunction collectRowEls(elMap, rowNodes) {\n    return rowNodes.map((rowNode) => elMap[rowNode.id]);\n}\n\nclass ResourceTimelineGrid extends DateComponent {\n    constructor() {\n        super(...arguments);\n        this.computeHasResourceBusinessHours = memoize(computeHasResourceBusinessHours);\n        this.resourceSplitter = new ResourceSplitter(); // doesn't let it do businessHours tho\n        this.bgSlicer = new TimelineLaneSlicer();\n        this.slatsRef = createRef(); // needed for Hit creation :(\n        this.state = {\n            slatCoords: null,\n        };\n        this.handleEl = (el) => {\n            if (el) {\n                this.context.registerInteractiveComponent(this, { el });\n            }\n            else {\n                this.context.unregisterInteractiveComponent(this);\n            }\n        };\n        this.handleSlatCoords = (slatCoords) => {\n            this.setState({ slatCoords });\n            if (this.props.onSlatCoords) {\n                this.props.onSlatCoords(slatCoords);\n            }\n        };\n        this.handleRowCoords = (rowCoords) => {\n            this.rowCoords = rowCoords;\n            if (this.props.onRowCoords) {\n                this.props.onRowCoords(rowCoords);\n            }\n        };\n    }\n    render() {\n        let { props, state, context } = this;\n        let { dateProfile, tDateProfile } = props;\n        let timerUnit = greatestDurationDenominator(tDateProfile.slotDuration).unit;\n        let hasResourceBusinessHours = this.computeHasResourceBusinessHours(props.rowNodes);\n        let splitProps = this.resourceSplitter.splitProps(props);\n        let bgLaneProps = splitProps[''];\n        let bgSlicedProps = this.bgSlicer.sliceProps(bgLaneProps, dateProfile, tDateProfile.isTimeScale ? null : props.nextDayThreshold, context, // wish we didn't need to pass in the rest of these args...\n        dateProfile, context.dateProfileGenerator, tDateProfile, context.dateEnv);\n        // WORKAROUND: make ignore slatCoords when out of sync with dateProfile\n        let slatCoords = state.slatCoords && state.slatCoords.dateProfile === props.dateProfile ? state.slatCoords : null;\n        return (createElement(\"div\", { ref: this.handleEl, className: [\n                'fc-timeline-body',\n                props.expandRows ? 'fc-timeline-body-expandrows' : '',\n            ].join(' '), style: { minWidth: props.tableMinWidth } },\n            createElement(NowTimer, { unit: timerUnit }, (nowDate, todayRange) => (createElement(Fragment, null,\n                createElement(TimelineSlats, { ref: this.slatsRef, dateProfile: dateProfile, tDateProfile: tDateProfile, nowDate: nowDate, todayRange: todayRange, clientWidth: props.clientWidth, tableColGroupNode: props.tableColGroupNode, tableMinWidth: props.tableMinWidth, onCoords: this.handleSlatCoords, onScrollLeftRequest: props.onScrollLeftRequest }),\n                createElement(TimelineLaneBg, { businessHourSegs: hasResourceBusinessHours ? null : bgSlicedProps.businessHourSegs, bgEventSegs: bgSlicedProps.bgEventSegs, timelineCoords: slatCoords, \n                    // empty array will result in unnecessary rerenders?\n                    eventResizeSegs: (bgSlicedProps.eventResize ? bgSlicedProps.eventResize.segs : []), dateSelectionSegs: bgSlicedProps.dateSelectionSegs, nowDate: nowDate, todayRange: todayRange }),\n                createElement(ResourceTimelineLanes, { rowNodes: props.rowNodes, dateProfile: dateProfile, tDateProfile: props.tDateProfile, nowDate: nowDate, todayRange: todayRange, splitProps: splitProps, fallbackBusinessHours: hasResourceBusinessHours ? props.businessHours : null, clientWidth: props.clientWidth, minHeight: props.expandRows ? props.clientHeight : '', tableMinWidth: props.tableMinWidth, innerHeights: props.rowInnerHeights, slatCoords: slatCoords, onRowCoords: this.handleRowCoords, onRowHeightChange: props.onRowHeightChange }),\n                (context.options.nowIndicator && slatCoords && slatCoords.isDateInRange(nowDate)) && (createElement(\"div\", { className: \"fc-timeline-now-indicator-container\" },\n                    createElement(NowIndicatorContainer, { elClasses: ['fc-timeline-now-indicator-line'], elStyle: coordToCss(slatCoords.dateToCoord(nowDate), context.isRtl), isAxis: false, date: nowDate }))))))));\n    }\n    // Hit System\n    // ------------------------------------------------------------------------------------------\n    queryHit(positionLeft, positionTop) {\n        let rowCoords = this.rowCoords;\n        let rowIndex = rowCoords.topToIndex(positionTop);\n        if (rowIndex != null) {\n            let resource = this.props.rowNodes[rowIndex].resource;\n            if (resource) { // not a group\n                let slatHit = this.slatsRef.current.positionToHit(positionLeft);\n                if (slatHit) {\n                    return {\n                        dateProfile: this.props.dateProfile,\n                        dateSpan: {\n                            range: slatHit.dateSpan.range,\n                            allDay: slatHit.dateSpan.allDay,\n                            resourceId: resource.id,\n                        },\n                        rect: {\n                            left: slatHit.left,\n                            right: slatHit.right,\n                            top: rowCoords.tops[rowIndex],\n                            bottom: rowCoords.bottoms[rowIndex],\n                        },\n                        dayEl: slatHit.dayEl,\n                        layer: 0,\n                    };\n                }\n            }\n        }\n        return null;\n    }\n}\nfunction computeHasResourceBusinessHours(rowNodes) {\n    for (let node of rowNodes) {\n        let resource = node.resource;\n        if (resource && resource.businessHours) {\n            return true;\n        }\n    }\n    return false;\n}\n\nconst MIN_RESOURCE_AREA_WIDTH = 30; // definitely bigger than scrollbars\n// RENAME?\nclass ResourceTimelineViewLayout extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.scrollGridRef = createRef();\n        this.timeBodyScrollerElRef = createRef();\n        this.spreadsheetHeaderChunkElRef = createRef();\n        this.rootElRef = createRef();\n        this.ensureScrollGridResizeId = 0;\n        this.state = {\n            resourceAreaWidthOverride: null,\n        };\n        /*\n        ghetto debounce. don't race with ScrollGrid's resizing delay. solves #6140\n        */\n        this.ensureScrollGridResize = () => {\n            if (this.ensureScrollGridResizeId) {\n                clearTimeout(this.ensureScrollGridResizeId);\n            }\n            this.ensureScrollGridResizeId = setTimeout(() => {\n                this.scrollGridRef.current.handleSizing(false);\n            }, config.SCROLLGRID_RESIZE_INTERVAL + 1);\n        };\n    }\n    render() {\n        let { props, state, context } = this;\n        let { options } = context;\n        let stickyHeaderDates = !props.forPrint && getStickyHeaderDates(options);\n        let stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(options);\n        let sections = [\n            {\n                type: 'header',\n                key: 'header',\n                syncRowHeights: true,\n                isSticky: stickyHeaderDates,\n                chunks: [\n                    {\n                        key: 'datagrid',\n                        elRef: this.spreadsheetHeaderChunkElRef,\n                        // TODO: allow the content to specify this. have general-purpose 'content' with obj with keys\n                        tableClassName: 'fc-datagrid-header',\n                        rowContent: props.spreadsheetHeaderRows,\n                    },\n                    {\n                        key: 'divider',\n                        outerContent: (createElement(\"td\", { role: \"presentation\", className: 'fc-resource-timeline-divider ' + context.theme.getClass('tableCellShaded') })),\n                    },\n                    {\n                        key: 'timeline',\n                        content: props.timeHeaderContent,\n                    },\n                ],\n            },\n            {\n                type: 'body',\n                key: 'body',\n                syncRowHeights: true,\n                liquid: true,\n                expandRows: Boolean(options.expandRows),\n                chunks: [\n                    {\n                        key: 'datagrid',\n                        tableClassName: 'fc-datagrid-body',\n                        rowContent: props.spreadsheetBodyRows,\n                    },\n                    {\n                        key: 'divider',\n                        outerContent: (createElement(\"td\", { role: \"presentation\", className: 'fc-resource-timeline-divider ' + context.theme.getClass('tableCellShaded') })),\n                    },\n                    {\n                        key: 'timeline',\n                        scrollerElRef: this.timeBodyScrollerElRef,\n                        content: props.timeBodyContent,\n                    },\n                ],\n            },\n        ];\n        if (stickyFooterScrollbar) {\n            sections.push({\n                type: 'footer',\n                key: 'footer',\n                isSticky: true,\n                chunks: [\n                    {\n                        key: 'datagrid',\n                        content: renderScrollShim,\n                    },\n                    {\n                        key: 'divider',\n                        outerContent: (createElement(\"td\", { role: \"presentation\", className: 'fc-resource-timeline-divider ' + context.theme.getClass('tableCellShaded') })),\n                    },\n                    {\n                        key: 'timeline',\n                        content: renderScrollShim,\n                    },\n                ],\n            });\n        }\n        let resourceAreaWidth = state.resourceAreaWidthOverride != null\n            ? state.resourceAreaWidthOverride\n            : options.resourceAreaWidth;\n        return (createElement(ScrollGrid, { ref: this.scrollGridRef, elRef: this.rootElRef, liquid: !props.isHeightAuto && !props.forPrint, forPrint: props.forPrint, collapsibleWidth: false, colGroups: [\n                { cols: props.spreadsheetCols, width: resourceAreaWidth },\n                { cols: [] },\n                { cols: props.timeCols },\n            ], sections: sections }));\n    }\n    forceTimeScroll(left) {\n        let scrollGrid = this.scrollGridRef.current;\n        scrollGrid.forceScrollLeft(2, left); // 2 = the time area\n    }\n    forceResourceScroll(top) {\n        let scrollGrid = this.scrollGridRef.current;\n        scrollGrid.forceScrollTop(1, top); // 1 = the body\n    }\n    getResourceScroll() {\n        let timeBodyScrollerEl = this.timeBodyScrollerElRef.current;\n        return timeBodyScrollerEl.scrollTop;\n    }\n    // Resource Area Resizing\n    // ------------------------------------------------------------------------------------------\n    // NOTE: a callback Ref for the resizer was firing multiple times with same elements (Preact)\n    // that's why we use spreadsheetResizerElRef instead\n    componentDidMount() {\n        this.initSpreadsheetResizing();\n    }\n    componentWillUnmount() {\n        this.destroySpreadsheetResizing();\n    }\n    initSpreadsheetResizing() {\n        let { isRtl, pluginHooks } = this.context;\n        let ElementDraggingImpl = pluginHooks.elementDraggingImpl;\n        let spreadsheetHeadEl = this.spreadsheetHeaderChunkElRef.current;\n        if (ElementDraggingImpl) {\n            let rootEl = this.rootElRef.current;\n            let dragging = this.spreadsheetResizerDragging = new ElementDraggingImpl(rootEl, '.fc-resource-timeline-divider');\n            let dragStartWidth;\n            let viewWidth;\n            dragging.emitter.on('dragstart', () => {\n                dragStartWidth = spreadsheetHeadEl.getBoundingClientRect().width;\n                viewWidth = rootEl.getBoundingClientRect().width;\n            });\n            dragging.emitter.on('dragmove', (pev) => {\n                let newWidth = dragStartWidth + pev.deltaX * (isRtl ? -1 : 1);\n                newWidth = Math.max(newWidth, MIN_RESOURCE_AREA_WIDTH);\n                newWidth = Math.min(newWidth, viewWidth - MIN_RESOURCE_AREA_WIDTH);\n                // scrollgrid will ignore resize requests if there are too many :|\n                this.setState({\n                    resourceAreaWidthOverride: newWidth,\n                }, this.ensureScrollGridResize);\n            });\n            dragging.setAutoScrollEnabled(false); // because gets weird with auto-scrolling time area\n        }\n    }\n    destroySpreadsheetResizing() {\n        if (this.spreadsheetResizerDragging) {\n            this.spreadsheetResizerDragging.destroy();\n        }\n    }\n}\n\nclass ResourceTimelineView extends BaseComponent {\n    constructor(props, context) {\n        super(props, context);\n        this.processColOptions = memoize(processColOptions);\n        this.buildTimelineDateProfile = memoize(buildTimelineDateProfile);\n        this.hasNesting = memoize(hasNesting);\n        this.buildRowNodes = memoize(buildRowNodes);\n        this.layoutRef = createRef();\n        this.rowNodes = [];\n        this.renderedRowNodes = [];\n        this.buildRowIndex = memoize(buildRowIndex);\n        this.handleSlatCoords = (slatCoords) => {\n            this.setState({ slatCoords });\n        };\n        this.handleRowCoords = (rowCoords) => {\n            this.rowCoords = rowCoords;\n            this.scrollResponder.update(false); // TODO: could eliminate this if rowCoords lived in state\n        };\n        this.handleMaxCushionWidth = (slotCushionMaxWidth) => {\n            this.setState({\n                slotCushionMaxWidth: Math.ceil(slotCushionMaxWidth), // for less rerendering TODO: DRY\n            });\n        };\n        // Scrolling\n        // ------------------------------------------------------------------------------------------------------------------\n        // this is useful for scrolling prev/next dates while resource is scrolled down\n        this.handleScrollLeftRequest = (scrollLeft) => {\n            let layout = this.layoutRef.current;\n            layout.forceTimeScroll(scrollLeft);\n        };\n        this.handleScrollRequest = (request) => {\n            let { rowCoords } = this;\n            let layout = this.layoutRef.current;\n            let rowId = request.rowId || request.resourceId;\n            if (rowCoords) {\n                if (rowId) {\n                    let rowIdToIndex = this.buildRowIndex(this.renderedRowNodes);\n                    let index = rowIdToIndex[rowId];\n                    if (index != null) {\n                        let scrollTop = (request.fromBottom != null ?\n                            rowCoords.bottoms[index] - request.fromBottom : // pixels from bottom edge\n                            rowCoords.tops[index] // just use top edge\n                        );\n                        layout.forceResourceScroll(scrollTop);\n                    }\n                }\n                return true;\n            }\n            return null;\n        };\n        // Resource INDIVIDUAL-Column Area Resizing\n        // ------------------------------------------------------------------------------------------\n        this.handleColWidthChange = (colWidths) => {\n            this.setState({\n                spreadsheetColWidths: colWidths,\n            });\n        };\n        this.state = {\n            resourceAreaWidth: context.options.resourceAreaWidth,\n            spreadsheetColWidths: [],\n        };\n    }\n    render() {\n        let { props, state, context } = this;\n        let { options, viewSpec } = context;\n        let { superHeaderRendering, groupSpecs, orderSpecs, isVGrouping, colSpecs } = this.processColOptions(context.options);\n        let tDateProfile = this.buildTimelineDateProfile(props.dateProfile, context.dateEnv, options, context.dateProfileGenerator);\n        let rowNodes = this.rowNodes = this.buildRowNodes(props.resourceStore, groupSpecs, orderSpecs, isVGrouping, props.resourceEntityExpansions, options.resourcesInitiallyExpanded);\n        let { slotMinWidth } = options;\n        let slatCols = buildSlatCols(tDateProfile, slotMinWidth || this.computeFallbackSlotMinWidth(tDateProfile));\n        return (createElement(ViewContainer, { elClasses: [\n                'fc-resource-timeline',\n                !this.hasNesting(rowNodes) && 'fc-resource-timeline-flat',\n                'fc-timeline',\n                options.eventOverlap === false ?\n                    'fc-timeline-overlap-disabled' :\n                    'fc-timeline-overlap-enabled',\n            ], viewSpec: viewSpec },\n            createElement(ResourceTimelineViewLayout, { ref: this.layoutRef, forPrint: props.forPrint, isHeightAuto: props.isHeightAuto, spreadsheetCols: buildSpreadsheetCols(colSpecs, state.spreadsheetColWidths, ''), spreadsheetHeaderRows: (contentArg) => (createElement(SpreadsheetHeader // TODO: rename to SpreadsheetHeaderRows\n                , { superHeaderRendering: superHeaderRendering, colSpecs: colSpecs, onColWidthChange: this.handleColWidthChange, rowInnerHeights: contentArg.rowSyncHeights })), spreadsheetBodyRows: (contentArg) => (createElement(Fragment, null, this.renderSpreadsheetRows(rowNodes, colSpecs, contentArg.rowSyncHeights))), timeCols: slatCols, timeHeaderContent: (contentArg) => (createElement(TimelineHeader, { clientWidth: contentArg.clientWidth, clientHeight: contentArg.clientHeight, tableMinWidth: contentArg.tableMinWidth, tableColGroupNode: contentArg.tableColGroupNode, dateProfile: props.dateProfile, tDateProfile: tDateProfile, slatCoords: state.slatCoords, rowInnerHeights: contentArg.rowSyncHeights, onMaxCushionWidth: slotMinWidth ? null : this.handleMaxCushionWidth })), timeBodyContent: (contentArg) => (createElement(ResourceTimelineGrid, { dateProfile: props.dateProfile, clientWidth: contentArg.clientWidth, clientHeight: contentArg.clientHeight, tableMinWidth: contentArg.tableMinWidth, tableColGroupNode: contentArg.tableColGroupNode, expandRows: contentArg.expandRows, tDateProfile: tDateProfile, rowNodes: rowNodes, businessHours: props.businessHours, dateSelection: props.dateSelection, eventStore: props.eventStore, eventUiBases: props.eventUiBases, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, resourceStore: props.resourceStore, nextDayThreshold: context.options.nextDayThreshold, rowInnerHeights: contentArg.rowSyncHeights, onSlatCoords: this.handleSlatCoords, onRowCoords: this.handleRowCoords, onScrollLeftRequest: this.handleScrollLeftRequest, onRowHeightChange: contentArg.reportRowHeightChange })) })));\n    }\n    renderSpreadsheetRows(nodes, colSpecs, rowSyncHeights) {\n        return nodes.map((node, index) => {\n            if (node.group) {\n                return (createElement(SpreadsheetGroupRow, { key: node.id, id: node.id, spreadsheetColCnt: colSpecs.length, isExpanded: node.isExpanded, group: node.group, innerHeight: rowSyncHeights[index] || '' }));\n            }\n            if (node.resource) {\n                return (createElement(SpreadsheetRow, { key: node.id, colSpecs: colSpecs, rowSpans: node.rowSpans, depth: node.depth, isExpanded: node.isExpanded, hasChildren: node.hasChildren, resource: node.resource, innerHeight: rowSyncHeights[index] || '' }));\n            }\n            return null;\n        });\n    }\n    componentDidMount() {\n        this.renderedRowNodes = this.rowNodes;\n        this.scrollResponder = this.context.createScrollResponder(this.handleScrollRequest);\n    }\n    getSnapshotBeforeUpdate() {\n        if (!this.props.forPrint) { // because print-view is always zero?\n            return { resourceScroll: this.queryResourceScroll() };\n        }\n        return {};\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.renderedRowNodes = this.rowNodes;\n        this.scrollResponder.update(prevProps.dateProfile !== this.props.dateProfile);\n        if (snapshot.resourceScroll) {\n            this.handleScrollRequest(snapshot.resourceScroll); // TODO: this gets triggered too often\n        }\n    }\n    componentWillUnmount() {\n        this.scrollResponder.detach();\n    }\n    computeFallbackSlotMinWidth(tDateProfile) {\n        return Math.max(30, ((this.state.slotCushionMaxWidth || 0) / tDateProfile.slotsPerLabel));\n    }\n    queryResourceScroll() {\n        let { rowCoords, renderedRowNodes } = this;\n        if (rowCoords) {\n            let layout = this.layoutRef.current;\n            let trBottoms = rowCoords.bottoms;\n            let scrollTop = layout.getResourceScroll();\n            let scroll = {};\n            for (let i = 0; i < trBottoms.length; i += 1) {\n                let rowNode = renderedRowNodes[i];\n                let elBottom = trBottoms[i] - scrollTop; // from the top of the scroller\n                if (elBottom > 0) {\n                    scroll.rowId = rowNode.id;\n                    scroll.fromBottom = elBottom;\n                    break;\n                }\n            }\n            return scroll;\n        }\n        return null;\n    }\n}\nResourceTimelineView.addStateEquality({\n    spreadsheetColWidths: isArraysEqual,\n});\nfunction buildRowIndex(rowNodes) {\n    let rowIdToIndex = {};\n    for (let i = 0; i < rowNodes.length; i += 1) {\n        rowIdToIndex[rowNodes[i].id] = i;\n    }\n    return rowIdToIndex;\n}\nfunction buildSpreadsheetCols(colSpecs, forcedWidths, fallbackWidth = '') {\n    return colSpecs.map((colSpec, i) => ({\n        className: colSpec.isMain ? 'fc-main-col' : '',\n        width: forcedWidths[i] || colSpec.width || fallbackWidth,\n    }));\n}\nfunction hasNesting(nodes) {\n    for (let node of nodes) {\n        if (node.group) {\n            return true;\n        }\n        if (node.resource) {\n            if (node.hasChildren) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction processColOptions(options) {\n    let allColSpecs = options.resourceAreaColumns || [];\n    let superHeaderRendering = null;\n    if (!allColSpecs.length) {\n        allColSpecs.push({\n            headerClassNames: options.resourceAreaHeaderClassNames,\n            headerContent: options.resourceAreaHeaderContent,\n            headerDefault: () => 'Resources',\n            headerDidMount: options.resourceAreaHeaderDidMount,\n            headerWillUnmount: options.resourceAreaHeaderWillUnmount,\n        });\n    }\n    else if (options.resourceAreaHeaderContent) { // weird way to determine if content\n        superHeaderRendering = {\n            headerClassNames: options.resourceAreaHeaderClassNames,\n            headerContent: options.resourceAreaHeaderContent,\n            headerDidMount: options.resourceAreaHeaderDidMount,\n            headerWillUnmount: options.resourceAreaHeaderWillUnmount,\n        };\n    }\n    let plainColSpecs = [];\n    let groupColSpecs = []; // part of the colSpecs, but filtered out in order to put first\n    let groupSpecs = [];\n    let isVGrouping = false;\n    for (let colSpec of allColSpecs) {\n        if (colSpec.group) {\n            groupColSpecs.push(Object.assign(Object.assign({}, colSpec), { cellClassNames: colSpec.cellClassNames || options.resourceGroupLabelClassNames, cellContent: colSpec.cellContent || options.resourceGroupLabelContent, cellDidMount: colSpec.cellDidMount || options.resourceGroupLabelDidMount, cellWillUnmount: colSpec.cellWillUnmount || options.resourceGroupLaneWillUnmount }));\n        }\n        else {\n            plainColSpecs.push(colSpec);\n        }\n    }\n    // BAD: mutates a user-supplied option\n    let mainColSpec = plainColSpecs[0];\n    mainColSpec.isMain = true;\n    mainColSpec.cellClassNames = mainColSpec.cellClassNames || options.resourceLabelClassNames;\n    mainColSpec.cellContent = mainColSpec.cellContent || options.resourceLabelContent;\n    mainColSpec.cellDidMount = mainColSpec.cellDidMount || options.resourceLabelDidMount;\n    mainColSpec.cellWillUnmount = mainColSpec.cellWillUnmount || options.resourceLabelWillUnmount;\n    if (groupColSpecs.length) {\n        groupSpecs = groupColSpecs;\n        isVGrouping = true;\n    }\n    else {\n        let hGroupField = options.resourceGroupField;\n        if (hGroupField) {\n            groupSpecs.push({\n                field: hGroupField,\n                labelClassNames: options.resourceGroupLabelClassNames,\n                labelContent: options.resourceGroupLabelContent,\n                labelDidMount: options.resourceGroupLabelDidMount,\n                labelWillUnmount: options.resourceGroupLabelWillUnmount,\n                laneClassNames: options.resourceGroupLaneClassNames,\n                laneContent: options.resourceGroupLaneContent,\n                laneDidMount: options.resourceGroupLaneDidMount,\n                laneWillUnmount: options.resourceGroupLaneWillUnmount,\n            });\n        }\n    }\n    let allOrderSpecs = options.resourceOrder || DEFAULT_RESOURCE_ORDER;\n    let plainOrderSpecs = [];\n    for (let orderSpec of allOrderSpecs) {\n        let isGroup = false;\n        for (let groupSpec of groupSpecs) {\n            if (groupSpec.field === orderSpec.field) {\n                groupSpec.order = orderSpec.order; // -1, 0, 1\n                isGroup = true;\n                break;\n            }\n        }\n        if (!isGroup) {\n            plainOrderSpecs.push(orderSpec);\n        }\n    }\n    return {\n        superHeaderRendering,\n        isVGrouping,\n        groupSpecs,\n        colSpecs: groupColSpecs.concat(plainColSpecs),\n        orderSpecs: plainOrderSpecs,\n    };\n}\n\nexport { ResourceTimelineLane, ResourceTimelineView, SpreadsheetRow };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}