{"ast":null,"code":"import _inherits from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _classCallCheck from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nvar _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u;\nimport { BigInt64Array, BigUint64Array } from './util/compat.mjs';\nimport { Type, Precision, UnionMode, DateUnit, TimeUnit, IntervalUnit } from './enum.mjs';\n/**\n * An abstract base class for classes that encapsulate metadata about each of\n * the logical types that Arrow can represent.\n */\nexport var DataType = /*#__PURE__*/function () {\n  function DataType() {\n    _classCallCheck(this, DataType);\n  }\n  _createClass(DataType, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.NONE;\n    }\n  }], [{\n    key: \"isNull\",\n    value: /** @nocollapse */function isNull(x) {\n      return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Null;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isInt\",\n    value: function isInt(x) {\n      return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Int;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isFloat\",\n    value: function isFloat(x) {\n      return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Float;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isBinary\",\n    value: function isBinary(x) {\n      return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Binary;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isUtf8\",\n    value: function isUtf8(x) {\n      return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Utf8;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isBool\",\n    value: function isBool(x) {\n      return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Bool;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isDecimal\",\n    value: function isDecimal(x) {\n      return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Decimal;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isDate\",\n    value: function isDate(x) {\n      return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Date;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isTime\",\n    value: function isTime(x) {\n      return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Time;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isTimestamp\",\n    value: function isTimestamp(x) {\n      return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Timestamp;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isInterval\",\n    value: function isInterval(x) {\n      return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Interval;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isList\",\n    value: function isList(x) {\n      return (x === null || x === void 0 ? void 0 : x.typeId) === Type.List;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isStruct\",\n    value: function isStruct(x) {\n      return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Struct;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isUnion\",\n    value: function isUnion(x) {\n      return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Union;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isFixedSizeBinary\",\n    value: function isFixedSizeBinary(x) {\n      return (x === null || x === void 0 ? void 0 : x.typeId) === Type.FixedSizeBinary;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isFixedSizeList\",\n    value: function isFixedSizeList(x) {\n      return (x === null || x === void 0 ? void 0 : x.typeId) === Type.FixedSizeList;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isMap\",\n    value: function isMap(x) {\n      return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Map;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isDictionary\",\n    value: function isDictionary(x) {\n      return (x === null || x === void 0 ? void 0 : x.typeId) === Type.Dictionary;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isDenseUnion\",\n    value: function isDenseUnion(x) {\n      return DataType.isUnion(x) && x.mode === UnionMode.Dense;\n    }\n    /** @nocollapse */\n  }, {\n    key: \"isSparseUnion\",\n    value: function isSparseUnion(x) {\n      return DataType.isUnion(x) && x.mode === UnionMode.Sparse;\n    }\n  }]);\n  return DataType;\n}();\n_a = Symbol.toStringTag;\nDataType[_a] = function (proto) {\n  proto.children = null;\n  proto.ArrayType = Array;\n  return proto[Symbol.toStringTag] = 'DataType';\n}(DataType.prototype);\n/** @ignore */\nexport var Null = /*#__PURE__*/function (_DataType) {\n  _inherits(Null, _DataType);\n  var _super = _createSuper(Null);\n  function Null() {\n    _classCallCheck(this, Null);\n    return _super.apply(this, arguments);\n  }\n  _createClass(Null, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"Null\";\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Null;\n    }\n  }]);\n  return Null;\n}(DataType);\n_b = Symbol.toStringTag;\nNull[_b] = function (proto) {\n  return proto[Symbol.toStringTag] = 'Null';\n}(Null.prototype);\n/** @ignore */\nvar Int_ = /*#__PURE__*/function (_DataType2) {\n  _inherits(Int_, _DataType2);\n  var _super2 = _createSuper(Int_);\n  function Int_(isSigned, bitWidth) {\n    var _this;\n    _classCallCheck(this, Int_);\n    _this = _super2.call(this);\n    _this.isSigned = isSigned;\n    _this.bitWidth = bitWidth;\n    return _this;\n  }\n  _createClass(Int_, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.Int;\n    }\n  }, {\n    key: \"ArrayType\",\n    get: function get() {\n      switch (this.bitWidth) {\n        case 8:\n          return this.isSigned ? Int8Array : Uint8Array;\n        case 16:\n          return this.isSigned ? Int16Array : Uint16Array;\n        case 32:\n          return this.isSigned ? Int32Array : Uint32Array;\n        case 64:\n          return this.isSigned ? BigInt64Array : BigUint64Array;\n      }\n      throw new Error(\"Unrecognized \".concat(this[Symbol.toStringTag], \" type\"));\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.isSigned ? \"I\" : \"Ui\", \"nt\").concat(this.bitWidth);\n    }\n  }]);\n  return Int_;\n}(DataType);\n_c = Symbol.toStringTag;\nInt_[_c] = function (proto) {\n  proto.isSigned = null;\n  proto.bitWidth = null;\n  return proto[Symbol.toStringTag] = 'Int';\n}(Int_.prototype);\nexport { Int_ as Int };\n/** @ignore */\nexport var Int8 = /*#__PURE__*/function (_Int_) {\n  _inherits(Int8, _Int_);\n  var _super3 = _createSuper(Int8);\n  function Int8() {\n    _classCallCheck(this, Int8);\n    return _super3.call(this, true, 8);\n  }\n  _createClass(Int8, [{\n    key: \"ArrayType\",\n    get: function get() {\n      return Int8Array;\n    }\n  }]);\n  return Int8;\n}(Int_);\n/** @ignore */\nexport var Int16 = /*#__PURE__*/function (_Int_2) {\n  _inherits(Int16, _Int_2);\n  var _super4 = _createSuper(Int16);\n  function Int16() {\n    _classCallCheck(this, Int16);\n    return _super4.call(this, true, 16);\n  }\n  _createClass(Int16, [{\n    key: \"ArrayType\",\n    get: function get() {\n      return Int16Array;\n    }\n  }]);\n  return Int16;\n}(Int_);\n/** @ignore */\nexport var Int32 = /*#__PURE__*/function (_Int_3) {\n  _inherits(Int32, _Int_3);\n  var _super5 = _createSuper(Int32);\n  function Int32() {\n    _classCallCheck(this, Int32);\n    return _super5.call(this, true, 32);\n  }\n  _createClass(Int32, [{\n    key: \"ArrayType\",\n    get: function get() {\n      return Int32Array;\n    }\n  }]);\n  return Int32;\n}(Int_);\n/** @ignore */\nexport var Int64 = /*#__PURE__*/function (_Int_4) {\n  _inherits(Int64, _Int_4);\n  var _super6 = _createSuper(Int64);\n  function Int64() {\n    _classCallCheck(this, Int64);\n    return _super6.call(this, true, 64);\n  }\n  _createClass(Int64, [{\n    key: \"ArrayType\",\n    get: function get() {\n      return BigInt64Array;\n    }\n  }]);\n  return Int64;\n}(Int_);\n/** @ignore */\nexport var Uint8 = /*#__PURE__*/function (_Int_5) {\n  _inherits(Uint8, _Int_5);\n  var _super7 = _createSuper(Uint8);\n  function Uint8() {\n    _classCallCheck(this, Uint8);\n    return _super7.call(this, false, 8);\n  }\n  _createClass(Uint8, [{\n    key: \"ArrayType\",\n    get: function get() {\n      return Uint8Array;\n    }\n  }]);\n  return Uint8;\n}(Int_);\n/** @ignore */\nexport var Uint16 = /*#__PURE__*/function (_Int_6) {\n  _inherits(Uint16, _Int_6);\n  var _super8 = _createSuper(Uint16);\n  function Uint16() {\n    _classCallCheck(this, Uint16);\n    return _super8.call(this, false, 16);\n  }\n  _createClass(Uint16, [{\n    key: \"ArrayType\",\n    get: function get() {\n      return Uint16Array;\n    }\n  }]);\n  return Uint16;\n}(Int_);\n/** @ignore */\nexport var Uint32 = /*#__PURE__*/function (_Int_7) {\n  _inherits(Uint32, _Int_7);\n  var _super9 = _createSuper(Uint32);\n  function Uint32() {\n    _classCallCheck(this, Uint32);\n    return _super9.call(this, false, 32);\n  }\n  _createClass(Uint32, [{\n    key: \"ArrayType\",\n    get: function get() {\n      return Uint32Array;\n    }\n  }]);\n  return Uint32;\n}(Int_);\n/** @ignore */\nexport var Uint64 = /*#__PURE__*/function (_Int_8) {\n  _inherits(Uint64, _Int_8);\n  var _super10 = _createSuper(Uint64);\n  function Uint64() {\n    _classCallCheck(this, Uint64);\n    return _super10.call(this, false, 64);\n  }\n  _createClass(Uint64, [{\n    key: \"ArrayType\",\n    get: function get() {\n      return BigUint64Array;\n    }\n  }]);\n  return Uint64;\n}(Int_);\nObject.defineProperty(Int8.prototype, 'ArrayType', {\n  value: Int8Array\n});\nObject.defineProperty(Int16.prototype, 'ArrayType', {\n  value: Int16Array\n});\nObject.defineProperty(Int32.prototype, 'ArrayType', {\n  value: Int32Array\n});\nObject.defineProperty(Int64.prototype, 'ArrayType', {\n  value: BigInt64Array\n});\nObject.defineProperty(Uint8.prototype, 'ArrayType', {\n  value: Uint8Array\n});\nObject.defineProperty(Uint16.prototype, 'ArrayType', {\n  value: Uint16Array\n});\nObject.defineProperty(Uint32.prototype, 'ArrayType', {\n  value: Uint32Array\n});\nObject.defineProperty(Uint64.prototype, 'ArrayType', {\n  value: BigUint64Array\n});\n/** @ignore */\nexport var Float = /*#__PURE__*/function (_DataType3) {\n  _inherits(Float, _DataType3);\n  var _super11 = _createSuper(Float);\n  function Float(precision) {\n    var _this2;\n    _classCallCheck(this, Float);\n    _this2 = _super11.call(this);\n    _this2.precision = precision;\n    return _this2;\n  }\n  _createClass(Float, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.Float;\n    }\n  }, {\n    key: \"ArrayType\",\n    get: function get() {\n      switch (this.precision) {\n        case Precision.HALF:\n          return Uint16Array;\n        case Precision.SINGLE:\n          return Float32Array;\n        case Precision.DOUBLE:\n          return Float64Array;\n      }\n      // @ts-ignore\n      throw new Error(\"Unrecognized \".concat(this[Symbol.toStringTag], \" type\"));\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Float\".concat(this.precision << 5 || 16);\n    }\n  }]);\n  return Float;\n}(DataType);\n_d = Symbol.toStringTag;\nFloat[_d] = function (proto) {\n  proto.precision = null;\n  return proto[Symbol.toStringTag] = 'Float';\n}(Float.prototype);\n/** @ignore */\nexport var Float16 = /*#__PURE__*/function (_Float) {\n  _inherits(Float16, _Float);\n  var _super12 = _createSuper(Float16);\n  function Float16() {\n    _classCallCheck(this, Float16);\n    return _super12.call(this, Precision.HALF);\n  }\n  return _createClass(Float16);\n}(Float);\n/** @ignore */\nexport var Float32 = /*#__PURE__*/function (_Float2) {\n  _inherits(Float32, _Float2);\n  var _super13 = _createSuper(Float32);\n  function Float32() {\n    _classCallCheck(this, Float32);\n    return _super13.call(this, Precision.SINGLE);\n  }\n  return _createClass(Float32);\n}(Float);\n/** @ignore */\nexport var Float64 = /*#__PURE__*/function (_Float3) {\n  _inherits(Float64, _Float3);\n  var _super14 = _createSuper(Float64);\n  function Float64() {\n    _classCallCheck(this, Float64);\n    return _super14.call(this, Precision.DOUBLE);\n  }\n  return _createClass(Float64);\n}(Float);\nObject.defineProperty(Float16.prototype, 'ArrayType', {\n  value: Uint16Array\n});\nObject.defineProperty(Float32.prototype, 'ArrayType', {\n  value: Float32Array\n});\nObject.defineProperty(Float64.prototype, 'ArrayType', {\n  value: Float64Array\n});\n/** @ignore */\nexport var Binary = /*#__PURE__*/function (_DataType4) {\n  _inherits(Binary, _DataType4);\n  var _super15 = _createSuper(Binary);\n  function Binary() {\n    _classCallCheck(this, Binary);\n    return _super15.call(this);\n  }\n  _createClass(Binary, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.Binary;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Binary\";\n    }\n  }]);\n  return Binary;\n}(DataType);\n_e = Symbol.toStringTag;\nBinary[_e] = function (proto) {\n  proto.ArrayType = Uint8Array;\n  return proto[Symbol.toStringTag] = 'Binary';\n}(Binary.prototype);\n/** @ignore */\nexport var Utf8 = /*#__PURE__*/function (_DataType5) {\n  _inherits(Utf8, _DataType5);\n  var _super16 = _createSuper(Utf8);\n  function Utf8() {\n    _classCallCheck(this, Utf8);\n    return _super16.call(this);\n  }\n  _createClass(Utf8, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.Utf8;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Utf8\";\n    }\n  }]);\n  return Utf8;\n}(DataType);\n_f = Symbol.toStringTag;\nUtf8[_f] = function (proto) {\n  proto.ArrayType = Uint8Array;\n  return proto[Symbol.toStringTag] = 'Utf8';\n}(Utf8.prototype);\n/** @ignore */\nexport var Bool = /*#__PURE__*/function (_DataType6) {\n  _inherits(Bool, _DataType6);\n  var _super17 = _createSuper(Bool);\n  function Bool() {\n    _classCallCheck(this, Bool);\n    return _super17.call(this);\n  }\n  _createClass(Bool, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.Bool;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Bool\";\n    }\n  }]);\n  return Bool;\n}(DataType);\n_g = Symbol.toStringTag;\nBool[_g] = function (proto) {\n  proto.ArrayType = Uint8Array;\n  return proto[Symbol.toStringTag] = 'Bool';\n}(Bool.prototype);\n/** @ignore */\nexport var Decimal = /*#__PURE__*/function (_DataType7) {\n  _inherits(Decimal, _DataType7);\n  var _super18 = _createSuper(Decimal);\n  function Decimal(scale, precision) {\n    var _this3;\n    var bitWidth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 128;\n    _classCallCheck(this, Decimal);\n    _this3 = _super18.call(this);\n    _this3.scale = scale;\n    _this3.precision = precision;\n    _this3.bitWidth = bitWidth;\n    return _this3;\n  }\n  _createClass(Decimal, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.Decimal;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Decimal[\".concat(this.precision, \"e\").concat(this.scale > 0 ? \"+\" : \"\").concat(this.scale, \"]\");\n    }\n  }]);\n  return Decimal;\n}(DataType);\n_h = Symbol.toStringTag;\nDecimal[_h] = function (proto) {\n  proto.scale = null;\n  proto.precision = null;\n  proto.ArrayType = Uint32Array;\n  return proto[Symbol.toStringTag] = 'Decimal';\n}(Decimal.prototype);\n/** @ignore */\nexport var Date_ = /*#__PURE__*/function (_DataType8) {\n  _inherits(Date_, _DataType8);\n  var _super19 = _createSuper(Date_);\n  function Date_(unit) {\n    var _this4;\n    _classCallCheck(this, Date_);\n    _this4 = _super19.call(this);\n    _this4.unit = unit;\n    return _this4;\n  }\n  _createClass(Date_, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.Date;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Date\".concat((this.unit + 1) * 32, \"<\").concat(DateUnit[this.unit], \">\");\n    }\n  }]);\n  return Date_;\n}(DataType);\n_j = Symbol.toStringTag;\nDate_[_j] = function (proto) {\n  proto.unit = null;\n  proto.ArrayType = Int32Array;\n  return proto[Symbol.toStringTag] = 'Date';\n}(Date_.prototype);\n/** @ignore */\nexport var DateDay = /*#__PURE__*/function (_Date_) {\n  _inherits(DateDay, _Date_);\n  var _super20 = _createSuper(DateDay);\n  function DateDay() {\n    _classCallCheck(this, DateDay);\n    return _super20.call(this, DateUnit.DAY);\n  }\n  return _createClass(DateDay);\n}(Date_);\n/** @ignore */\nexport var DateMillisecond = /*#__PURE__*/function (_Date_2) {\n  _inherits(DateMillisecond, _Date_2);\n  var _super21 = _createSuper(DateMillisecond);\n  function DateMillisecond() {\n    _classCallCheck(this, DateMillisecond);\n    return _super21.call(this, DateUnit.MILLISECOND);\n  }\n  return _createClass(DateMillisecond);\n}(Date_);\n/** @ignore */\nvar Time_ = /*#__PURE__*/function (_DataType9) {\n  _inherits(Time_, _DataType9);\n  var _super22 = _createSuper(Time_);\n  function Time_(unit, bitWidth) {\n    var _this5;\n    _classCallCheck(this, Time_);\n    _this5 = _super22.call(this);\n    _this5.unit = unit;\n    _this5.bitWidth = bitWidth;\n    return _this5;\n  }\n  _createClass(Time_, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.Time;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Time\".concat(this.bitWidth, \"<\").concat(TimeUnit[this.unit], \">\");\n    }\n  }, {\n    key: \"ArrayType\",\n    get: function get() {\n      switch (this.bitWidth) {\n        case 32:\n          return Int32Array;\n        case 64:\n          return BigInt64Array;\n      }\n      // @ts-ignore\n      throw new Error(\"Unrecognized \".concat(this[Symbol.toStringTag], \" type\"));\n    }\n  }]);\n  return Time_;\n}(DataType);\n_k = Symbol.toStringTag;\nTime_[_k] = function (proto) {\n  proto.unit = null;\n  proto.bitWidth = null;\n  return proto[Symbol.toStringTag] = 'Time';\n}(Time_.prototype);\nexport { Time_ as Time };\n/** @ignore */\nexport var TimeSecond = /*#__PURE__*/function (_Time_) {\n  _inherits(TimeSecond, _Time_);\n  var _super23 = _createSuper(TimeSecond);\n  function TimeSecond() {\n    _classCallCheck(this, TimeSecond);\n    return _super23.call(this, TimeUnit.SECOND, 32);\n  }\n  return _createClass(TimeSecond);\n}(Time_);\n/** @ignore */\nexport var TimeMillisecond = /*#__PURE__*/function (_Time_2) {\n  _inherits(TimeMillisecond, _Time_2);\n  var _super24 = _createSuper(TimeMillisecond);\n  function TimeMillisecond() {\n    _classCallCheck(this, TimeMillisecond);\n    return _super24.call(this, TimeUnit.MILLISECOND, 32);\n  }\n  return _createClass(TimeMillisecond);\n}(Time_);\n/** @ignore */\nexport var TimeMicrosecond = /*#__PURE__*/function (_Time_3) {\n  _inherits(TimeMicrosecond, _Time_3);\n  var _super25 = _createSuper(TimeMicrosecond);\n  function TimeMicrosecond() {\n    _classCallCheck(this, TimeMicrosecond);\n    return _super25.call(this, TimeUnit.MICROSECOND, 64);\n  }\n  return _createClass(TimeMicrosecond);\n}(Time_);\n/** @ignore */\nexport var TimeNanosecond = /*#__PURE__*/function (_Time_4) {\n  _inherits(TimeNanosecond, _Time_4);\n  var _super26 = _createSuper(TimeNanosecond);\n  function TimeNanosecond() {\n    _classCallCheck(this, TimeNanosecond);\n    return _super26.call(this, TimeUnit.NANOSECOND, 64);\n  }\n  return _createClass(TimeNanosecond);\n}(Time_);\n/** @ignore */\nvar Timestamp_ = /*#__PURE__*/function (_DataType10) {\n  _inherits(Timestamp_, _DataType10);\n  var _super27 = _createSuper(Timestamp_);\n  function Timestamp_(unit, timezone) {\n    var _this6;\n    _classCallCheck(this, Timestamp_);\n    _this6 = _super27.call(this);\n    _this6.unit = unit;\n    _this6.timezone = timezone;\n    return _this6;\n  }\n  _createClass(Timestamp_, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.Timestamp;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Timestamp<\".concat(TimeUnit[this.unit]).concat(this.timezone ? \", \".concat(this.timezone) : \"\", \">\");\n    }\n  }]);\n  return Timestamp_;\n}(DataType);\n_l = Symbol.toStringTag;\nTimestamp_[_l] = function (proto) {\n  proto.unit = null;\n  proto.timezone = null;\n  proto.ArrayType = Int32Array;\n  return proto[Symbol.toStringTag] = 'Timestamp';\n}(Timestamp_.prototype);\nexport { Timestamp_ as Timestamp };\n/** @ignore */\nexport var TimestampSecond = /*#__PURE__*/function (_Timestamp_) {\n  _inherits(TimestampSecond, _Timestamp_);\n  var _super28 = _createSuper(TimestampSecond);\n  function TimestampSecond(timezone) {\n    _classCallCheck(this, TimestampSecond);\n    return _super28.call(this, TimeUnit.SECOND, timezone);\n  }\n  return _createClass(TimestampSecond);\n}(Timestamp_);\n/** @ignore */\nexport var TimestampMillisecond = /*#__PURE__*/function (_Timestamp_2) {\n  _inherits(TimestampMillisecond, _Timestamp_2);\n  var _super29 = _createSuper(TimestampMillisecond);\n  function TimestampMillisecond(timezone) {\n    _classCallCheck(this, TimestampMillisecond);\n    return _super29.call(this, TimeUnit.MILLISECOND, timezone);\n  }\n  return _createClass(TimestampMillisecond);\n}(Timestamp_);\n/** @ignore */\nexport var TimestampMicrosecond = /*#__PURE__*/function (_Timestamp_3) {\n  _inherits(TimestampMicrosecond, _Timestamp_3);\n  var _super30 = _createSuper(TimestampMicrosecond);\n  function TimestampMicrosecond(timezone) {\n    _classCallCheck(this, TimestampMicrosecond);\n    return _super30.call(this, TimeUnit.MICROSECOND, timezone);\n  }\n  return _createClass(TimestampMicrosecond);\n}(Timestamp_);\n/** @ignore */\nexport var TimestampNanosecond = /*#__PURE__*/function (_Timestamp_4) {\n  _inherits(TimestampNanosecond, _Timestamp_4);\n  var _super31 = _createSuper(TimestampNanosecond);\n  function TimestampNanosecond(timezone) {\n    _classCallCheck(this, TimestampNanosecond);\n    return _super31.call(this, TimeUnit.NANOSECOND, timezone);\n  }\n  return _createClass(TimestampNanosecond);\n}(Timestamp_);\n/** @ignore */\nvar Interval_ = /*#__PURE__*/function (_DataType11) {\n  _inherits(Interval_, _DataType11);\n  var _super32 = _createSuper(Interval_);\n  function Interval_(unit) {\n    var _this7;\n    _classCallCheck(this, Interval_);\n    _this7 = _super32.call(this);\n    _this7.unit = unit;\n    return _this7;\n  }\n  _createClass(Interval_, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.Interval;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Interval<\".concat(IntervalUnit[this.unit], \">\");\n    }\n  }]);\n  return Interval_;\n}(DataType);\n_m = Symbol.toStringTag;\nInterval_[_m] = function (proto) {\n  proto.unit = null;\n  proto.ArrayType = Int32Array;\n  return proto[Symbol.toStringTag] = 'Interval';\n}(Interval_.prototype);\nexport { Interval_ as Interval };\n/** @ignore */\nexport var IntervalDayTime = /*#__PURE__*/function (_Interval_) {\n  _inherits(IntervalDayTime, _Interval_);\n  var _super33 = _createSuper(IntervalDayTime);\n  function IntervalDayTime() {\n    _classCallCheck(this, IntervalDayTime);\n    return _super33.call(this, IntervalUnit.DAY_TIME);\n  }\n  return _createClass(IntervalDayTime);\n}(Interval_);\n/** @ignore */\nexport var IntervalYearMonth = /*#__PURE__*/function (_Interval_2) {\n  _inherits(IntervalYearMonth, _Interval_2);\n  var _super34 = _createSuper(IntervalYearMonth);\n  function IntervalYearMonth() {\n    _classCallCheck(this, IntervalYearMonth);\n    return _super34.call(this, IntervalUnit.YEAR_MONTH);\n  }\n  return _createClass(IntervalYearMonth);\n}(Interval_);\n/** @ignore */\nexport var List = /*#__PURE__*/function (_DataType12) {\n  _inherits(List, _DataType12);\n  var _super35 = _createSuper(List);\n  function List(child) {\n    var _this8;\n    _classCallCheck(this, List);\n    _this8 = _super35.call(this);\n    _this8.children = [child];\n    return _this8;\n  }\n  _createClass(List, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.List;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"List<\".concat(this.valueType, \">\");\n    }\n  }, {\n    key: \"valueType\",\n    get: function get() {\n      return this.children[0].type;\n    }\n  }, {\n    key: \"valueField\",\n    get: function get() {\n      return this.children[0];\n    }\n  }, {\n    key: \"ArrayType\",\n    get: function get() {\n      return this.valueType.ArrayType;\n    }\n  }]);\n  return List;\n}(DataType);\n_o = Symbol.toStringTag;\nList[_o] = function (proto) {\n  proto.children = null;\n  return proto[Symbol.toStringTag] = 'List';\n}(List.prototype);\n/** @ignore */\nexport var Struct = /*#__PURE__*/function (_DataType13) {\n  _inherits(Struct, _DataType13);\n  var _super36 = _createSuper(Struct);\n  function Struct(children) {\n    var _this9;\n    _classCallCheck(this, Struct);\n    _this9 = _super36.call(this);\n    _this9.children = children;\n    return _this9;\n  }\n  _createClass(Struct, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.Struct;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Struct<{\".concat(this.children.map(function (f) {\n        return \"\".concat(f.name, \":\").concat(f.type);\n      }).join(\", \"), \"}>\");\n    }\n  }]);\n  return Struct;\n}(DataType);\n_p = Symbol.toStringTag;\nStruct[_p] = function (proto) {\n  proto.children = null;\n  return proto[Symbol.toStringTag] = 'Struct';\n}(Struct.prototype);\n/** @ignore */\nvar Union_ = /*#__PURE__*/function (_DataType14) {\n  _inherits(Union_, _DataType14);\n  var _super37 = _createSuper(Union_);\n  function Union_(mode, typeIds, children) {\n    var _this10;\n    _classCallCheck(this, Union_);\n    _this10 = _super37.call(this);\n    _this10.mode = mode;\n    _this10.children = children;\n    _this10.typeIds = typeIds = Int32Array.from(typeIds);\n    _this10.typeIdToChildIndex = typeIds.reduce(function (typeIdToChildIndex, typeId, idx) {\n      return (typeIdToChildIndex[typeId] = idx) && typeIdToChildIndex || typeIdToChildIndex;\n    }, Object.create(null));\n    return _this10;\n  }\n  _createClass(Union_, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.Union;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this[Symbol.toStringTag], \"<\").concat(this.children.map(function (x) {\n        return \"\".concat(x.type);\n      }).join(\" | \"), \">\");\n    }\n  }]);\n  return Union_;\n}(DataType);\n_q = Symbol.toStringTag;\nUnion_[_q] = function (proto) {\n  proto.mode = null;\n  proto.typeIds = null;\n  proto.children = null;\n  proto.typeIdToChildIndex = null;\n  proto.ArrayType = Int8Array;\n  return proto[Symbol.toStringTag] = 'Union';\n}(Union_.prototype);\nexport { Union_ as Union };\n/** @ignore */\nexport var DenseUnion = /*#__PURE__*/function (_Union_) {\n  _inherits(DenseUnion, _Union_);\n  var _super38 = _createSuper(DenseUnion);\n  function DenseUnion(typeIds, children) {\n    _classCallCheck(this, DenseUnion);\n    return _super38.call(this, UnionMode.Dense, typeIds, children);\n  }\n  return _createClass(DenseUnion);\n}(Union_);\n/** @ignore */\nexport var SparseUnion = /*#__PURE__*/function (_Union_2) {\n  _inherits(SparseUnion, _Union_2);\n  var _super39 = _createSuper(SparseUnion);\n  function SparseUnion(typeIds, children) {\n    _classCallCheck(this, SparseUnion);\n    return _super39.call(this, UnionMode.Sparse, typeIds, children);\n  }\n  return _createClass(SparseUnion);\n}(Union_);\n/** @ignore */\nexport var FixedSizeBinary = /*#__PURE__*/function (_DataType15) {\n  _inherits(FixedSizeBinary, _DataType15);\n  var _super40 = _createSuper(FixedSizeBinary);\n  function FixedSizeBinary(byteWidth) {\n    var _this11;\n    _classCallCheck(this, FixedSizeBinary);\n    _this11 = _super40.call(this);\n    _this11.byteWidth = byteWidth;\n    return _this11;\n  }\n  _createClass(FixedSizeBinary, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.FixedSizeBinary;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"FixedSizeBinary[\".concat(this.byteWidth, \"]\");\n    }\n  }]);\n  return FixedSizeBinary;\n}(DataType);\n_r = Symbol.toStringTag;\nFixedSizeBinary[_r] = function (proto) {\n  proto.byteWidth = null;\n  proto.ArrayType = Uint8Array;\n  return proto[Symbol.toStringTag] = 'FixedSizeBinary';\n}(FixedSizeBinary.prototype);\n/** @ignore */\nexport var FixedSizeList = /*#__PURE__*/function (_DataType16) {\n  _inherits(FixedSizeList, _DataType16);\n  var _super41 = _createSuper(FixedSizeList);\n  function FixedSizeList(listSize, child) {\n    var _this12;\n    _classCallCheck(this, FixedSizeList);\n    _this12 = _super41.call(this);\n    _this12.listSize = listSize;\n    _this12.children = [child];\n    return _this12;\n  }\n  _createClass(FixedSizeList, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.FixedSizeList;\n    }\n  }, {\n    key: \"valueType\",\n    get: function get() {\n      return this.children[0].type;\n    }\n  }, {\n    key: \"valueField\",\n    get: function get() {\n      return this.children[0];\n    }\n  }, {\n    key: \"ArrayType\",\n    get: function get() {\n      return this.valueType.ArrayType;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"FixedSizeList[\".concat(this.listSize, \"]<\").concat(this.valueType, \">\");\n    }\n  }]);\n  return FixedSizeList;\n}(DataType);\n_s = Symbol.toStringTag;\nFixedSizeList[_s] = function (proto) {\n  proto.children = null;\n  proto.listSize = null;\n  return proto[Symbol.toStringTag] = 'FixedSizeList';\n}(FixedSizeList.prototype);\n/** @ignore */\nexport var Map_ = /*#__PURE__*/function (_DataType17) {\n  _inherits(Map_, _DataType17);\n  var _super42 = _createSuper(Map_);\n  function Map_(child) {\n    var _this13;\n    var keysSorted = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    _classCallCheck(this, Map_);\n    _this13 = _super42.call(this);\n    _this13.children = [child];\n    _this13.keysSorted = keysSorted;\n    return _this13;\n  }\n  _createClass(Map_, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.Map;\n    }\n  }, {\n    key: \"keyType\",\n    get: function get() {\n      return this.children[0].type.children[0].type;\n    }\n  }, {\n    key: \"valueType\",\n    get: function get() {\n      return this.children[0].type.children[1].type;\n    }\n  }, {\n    key: \"childType\",\n    get: function get() {\n      return this.children[0].type;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Map<{\".concat(this.children[0].type.children.map(function (f) {\n        return \"\".concat(f.name, \":\").concat(f.type);\n      }).join(\", \"), \"}>\");\n    }\n  }]);\n  return Map_;\n}(DataType);\n_t = Symbol.toStringTag;\nMap_[_t] = function (proto) {\n  proto.children = null;\n  proto.keysSorted = null;\n  return proto[Symbol.toStringTag] = 'Map_';\n}(Map_.prototype);\n/** @ignore */\nvar getId = function (atomicDictionaryId) {\n  return function () {\n    return ++atomicDictionaryId;\n  };\n}(-1);\n/** @ignore */\nexport var Dictionary = /*#__PURE__*/function (_DataType18) {\n  _inherits(Dictionary, _DataType18);\n  var _super43 = _createSuper(Dictionary);\n  function Dictionary(dictionary, indices, id, isOrdered) {\n    var _this14;\n    _classCallCheck(this, Dictionary);\n    _this14 = _super43.call(this);\n    _this14.indices = indices;\n    _this14.dictionary = dictionary;\n    _this14.isOrdered = isOrdered || false;\n    _this14.id = id == null ? getId() : typeof id === 'number' ? id : id.low;\n    return _this14;\n  }\n  _createClass(Dictionary, [{\n    key: \"typeId\",\n    get: function get() {\n      return Type.Dictionary;\n    }\n  }, {\n    key: \"children\",\n    get: function get() {\n      return this.dictionary.children;\n    }\n  }, {\n    key: \"valueType\",\n    get: function get() {\n      return this.dictionary;\n    }\n  }, {\n    key: \"ArrayType\",\n    get: function get() {\n      return this.dictionary.ArrayType;\n    }\n  }, {\n    key: \"toString\",\n    value: function toString() {\n      return \"Dictionary<\".concat(this.indices, \", \").concat(this.dictionary, \">\");\n    }\n  }]);\n  return Dictionary;\n}(DataType);\n_u = Symbol.toStringTag;\nDictionary[_u] = function (proto) {\n  proto.id = null;\n  proto.indices = null;\n  proto.isOrdered = null;\n  proto.dictionary = null;\n  return proto[Symbol.toStringTag] = 'Dictionary';\n}(Dictionary.prototype);\n/** @ignore */\nexport function strideForType(type) {\n  var t = type;\n  switch (type.typeId) {\n    case Type.Decimal:\n      return type.bitWidth / 32;\n    case Type.Timestamp:\n      return 2;\n    case Type.Date:\n      return 1 + t.unit;\n    case Type.Interval:\n      return 1 + t.unit;\n    // case Type.Int: return 1 + +((t as Int_).bitWidth > 32);\n    // case Type.Time: return 1 + +((t as Time_).bitWidth > 32);\n    case Type.FixedSizeList:\n      return t.listSize;\n    case Type.FixedSizeBinary:\n      return t.byteWidth;\n    default:\n      return 1;\n  }\n}","map":{"version":3,"names":["BigInt64Array","BigUint64Array","Type","Precision","UnionMode","DateUnit","TimeUnit","IntervalUnit","DataType","_classCallCheck","_createClass","key","get","NONE","value","isNull","x","typeId","Null","isInt","Int","isFloat","Float","isBinary","Binary","isUtf8","Utf8","isBool","Bool","isDecimal","Decimal","isDate","Date","isTime","Time","isTimestamp","Timestamp","isInterval","Interval","isList","List","isStruct","Struct","isUnion","Union","isFixedSizeBinary","FixedSizeBinary","isFixedSizeList","FixedSizeList","isMap","Map","isDictionary","Dictionary","isDenseUnion","mode","Dense","isSparseUnion","Sparse","Symbol","toStringTag","_a","proto","children","ArrayType","Array","prototype","_DataType","_inherits","_super","_createSuper","apply","arguments","toString","_b","Int_","_DataType2","_super2","isSigned","bitWidth","_this","call","Int8Array","Uint8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Error","concat","_c","Int8","_Int_","_super3","Int16","_Int_2","_super4","Int32","_Int_3","_super5","Int64","_Int_4","_super6","Uint8","_Int_5","_super7","Uint16","_Int_6","_super8","Uint32","_Int_7","_super9","Uint64","_Int_8","_super10","Object","defineProperty","_DataType3","_super11","precision","_this2","HALF","SINGLE","Float32Array","DOUBLE","Float64Array","_d","Float16","_Float","_super12","Float32","_Float2","_super13","Float64","_Float3","_super14","_DataType4","_super15","_e","_DataType5","_super16","_f","_DataType6","_super17","_g","_DataType7","_super18","scale","_this3","length","undefined","_h","Date_","_DataType8","_super19","unit","_this4","_j","DateDay","_Date_","_super20","DAY","DateMillisecond","_Date_2","_super21","MILLISECOND","Time_","_DataType9","_super22","_this5","_k","TimeSecond","_Time_","_super23","SECOND","TimeMillisecond","_Time_2","_super24","TimeMicrosecond","_Time_3","_super25","MICROSECOND","TimeNanosecond","_Time_4","_super26","NANOSECOND","Timestamp_","_DataType10","_super27","timezone","_this6","_l","TimestampSecond","_Timestamp_","_super28","TimestampMillisecond","_Timestamp_2","_super29","TimestampMicrosecond","_Timestamp_3","_super30","TimestampNanosecond","_Timestamp_4","_super31","Interval_","_DataType11","_super32","_this7","_m","IntervalDayTime","_Interval_","_super33","DAY_TIME","IntervalYearMonth","_Interval_2","_super34","YEAR_MONTH","_DataType12","_super35","child","_this8","valueType","type","_o","_DataType13","_super36","_this9","map","f","name","join","_p","Union_","_DataType14","_super37","typeIds","_this10","from","typeIdToChildIndex","reduce","idx","create","_q","DenseUnion","_Union_","_super38","SparseUnion","_Union_2","_super39","_DataType15","_super40","byteWidth","_this11","_r","_DataType16","_super41","listSize","_this12","_s","Map_","_DataType17","_super42","_this13","keysSorted","_t","getId","atomicDictionaryId","_DataType18","_super43","dictionary","indices","id","isOrdered","_this14","low","_u","strideForType","t"],"sources":["C:\\Users\\erden\\OneDrive\\Documents\\GitHub\\techclubsite\\streamlit_calendar\\frontend\\node_modules\\apache-arrow\\src\\type.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Field } from './schema.js';\nimport { Vector } from './vector.js';\nimport { MapRow } from './row/map.js';\nimport { StructRow, StructRowProxy } from './row/struct.js';\nimport { Long } from 'flatbuffers';\nimport { TypedArrayConstructor } from './interfaces.js';\nimport { BigInt64Array, BigUint64Array } from './util/compat.js';\n\nimport {\n    Type,\n    Precision, UnionMode,\n    DateUnit, TimeUnit, IntervalUnit\n} from './enum.js';\n\n/** @ignore */\nexport type TimeBitWidth = 32 | 64;\n/** @ignore */\nexport type IntBitWidth = 8 | 16 | 32 | 64;\n/** @ignore */\nexport type IsSigned = { 'true': true; 'false': false };\n\nexport interface DataType<TType extends Type = Type, TChildren extends TypeMap = any> {\n    readonly TType: TType;\n    readonly TArray: any;\n    readonly TValue: any;\n    readonly TChildren: TChildren;\n    readonly ArrayType: any;\n    readonly children: Field<TChildren[keyof TChildren]>[];\n}\n\n/**\n * An abstract base class for classes that encapsulate metadata about each of\n * the logical types that Arrow can represent.\n */\nexport abstract class DataType<TType extends Type = Type, TChildren extends TypeMap = any> {\n\n    declare public [Symbol.toStringTag]: string;\n\n    /** @nocollapse */ static isNull(x: any): x is Null { return x?.typeId === Type.Null; }\n    /** @nocollapse */ static isInt(x: any): x is Int_ { return x?.typeId === Type.Int; }\n    /** @nocollapse */ static isFloat(x: any): x is Float { return x?.typeId === Type.Float; }\n    /** @nocollapse */ static isBinary(x: any): x is Binary { return x?.typeId === Type.Binary; }\n    /** @nocollapse */ static isUtf8(x: any): x is Utf8 { return x?.typeId === Type.Utf8; }\n    /** @nocollapse */ static isBool(x: any): x is Bool { return x?.typeId === Type.Bool; }\n    /** @nocollapse */ static isDecimal(x: any): x is Decimal { return x?.typeId === Type.Decimal; }\n    /** @nocollapse */ static isDate(x: any): x is Date_ { return x?.typeId === Type.Date; }\n    /** @nocollapse */ static isTime(x: any): x is Time_ { return x?.typeId === Type.Time; }\n    /** @nocollapse */ static isTimestamp(x: any): x is Timestamp_ { return x?.typeId === Type.Timestamp; }\n    /** @nocollapse */ static isInterval(x: any): x is Interval_ { return x?.typeId === Type.Interval; }\n    /** @nocollapse */ static isList(x: any): x is List { return x?.typeId === Type.List; }\n    /** @nocollapse */ static isStruct(x: any): x is Struct { return x?.typeId === Type.Struct; }\n    /** @nocollapse */ static isUnion(x: any): x is Union_ { return x?.typeId === Type.Union; }\n    /** @nocollapse */ static isFixedSizeBinary(x: any): x is FixedSizeBinary { return x?.typeId === Type.FixedSizeBinary; }\n    /** @nocollapse */ static isFixedSizeList(x: any): x is FixedSizeList { return x?.typeId === Type.FixedSizeList; }\n    /** @nocollapse */ static isMap(x: any): x is Map_ { return x?.typeId === Type.Map; }\n    /** @nocollapse */ static isDictionary(x: any): x is Dictionary { return x?.typeId === Type.Dictionary; }\n\n    /** @nocollapse */ static isDenseUnion(x: any): x is DenseUnion { return DataType.isUnion(x) && x.mode === UnionMode.Dense; }\n    /** @nocollapse */ static isSparseUnion(x: any): x is SparseUnion { return DataType.isUnion(x) && x.mode === UnionMode.Sparse; }\n\n    public get typeId(): TType { return <any>Type.NONE; }\n\n    protected static [Symbol.toStringTag] = ((proto: DataType) => {\n        (<any>proto).children = null;\n        (<any>proto).ArrayType = Array;\n        return proto[Symbol.toStringTag] = 'DataType';\n    })(DataType.prototype);\n}\n\n/** @ignore */\nexport interface Null extends DataType<Type.Null> { TArray: void; TValue: null }\n/** @ignore */\nexport class Null extends DataType<Type.Null> {\n    public toString() { return `Null`; }\n    public get typeId() { return Type.Null as Type.Null; }\n    protected static [Symbol.toStringTag] = ((proto: Null) => proto[Symbol.toStringTag] = 'Null')(Null.prototype);\n}\n\n/** @ignore */\ntype Ints = Type.Int | Type.Int8 | Type.Int16 | Type.Int32 | Type.Int64 | Type.Uint8 | Type.Uint16 | Type.Uint32 | Type.Uint64;\n/** @ignore */\ntype IType = {\n    [Type.Int]: { bitWidth: IntBitWidth; isSigned: true | false; TArray: IntArray; TValue: number | bigint };\n    [Type.Int8]: { bitWidth: 8; isSigned: true; TArray: Int8Array; TValue: number };\n    [Type.Int16]: { bitWidth: 16; isSigned: true; TArray: Int16Array; TValue: number };\n    [Type.Int32]: { bitWidth: 32; isSigned: true; TArray: Int32Array; TValue: number };\n    [Type.Int64]: { bitWidth: 64; isSigned: true; TArray: BigInt64Array; TValue: bigint };\n    [Type.Uint8]: { bitWidth: 8; isSigned: false; TArray: Uint8Array; TValue: number };\n    [Type.Uint16]: { bitWidth: 16; isSigned: false; TArray: Uint16Array; TValue: number };\n    [Type.Uint32]: { bitWidth: 32; isSigned: false; TArray: Uint32Array; TValue: number };\n    [Type.Uint64]: { bitWidth: 64; isSigned: false; TArray: BigUint64Array; TValue: bigint };\n};\n\n/** @ignore */\ninterface Int_<T extends Ints = Ints> extends DataType<T> { TArray: IType[T]['TArray']; TValue: IType[T]['TValue'] }\n/** @ignore */\nclass Int_<T extends Ints = Ints> extends DataType<T> {\n    constructor(public readonly isSigned: IType[T]['isSigned'],\n        public readonly bitWidth: IType[T]['bitWidth']) {\n        super();\n    }\n    public get typeId() { return Type.Int as T; }\n    public get ArrayType() {\n        switch (this.bitWidth) {\n            case 8: return this.isSigned ? Int8Array : Uint8Array;\n            case 16: return this.isSigned ? Int16Array : Uint16Array;\n            case 32: return this.isSigned ? Int32Array : Uint32Array;\n            case 64: return this.isSigned ? BigInt64Array : BigUint64Array;\n        }\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `${this.isSigned ? `I` : `Ui`}nt${this.bitWidth}`; }\n    protected static [Symbol.toStringTag] = ((proto: Int_) => {\n        (<any>proto).isSigned = null;\n        (<any>proto).bitWidth = null;\n        return proto[Symbol.toStringTag] = 'Int';\n    })(Int_.prototype);\n}\n\nexport { Int_ as Int };\n\n/** @ignore */\nexport class Int8 extends Int_<Type.Int8> {\n    constructor() { super(true, 8); }\n    public get ArrayType() { return Int8Array; }\n}\n/** @ignore */\nexport class Int16 extends Int_<Type.Int16> {\n    constructor() { super(true, 16); }\n    public get ArrayType() { return Int16Array; }\n}\n/** @ignore */\nexport class Int32 extends Int_<Type.Int32> {\n    constructor() { super(true, 32); }\n    public get ArrayType() { return Int32Array; }\n}\n/** @ignore */\nexport class Int64 extends Int_<Type.Int64> {\n    constructor() { super(true, 64); }\n    public get ArrayType() { return BigInt64Array; }\n}\n/** @ignore */\nexport class Uint8 extends Int_<Type.Uint8> {\n    constructor() { super(false, 8); }\n    public get ArrayType() { return Uint8Array; }\n}\n/** @ignore */\nexport class Uint16 extends Int_<Type.Uint16> {\n    constructor() { super(false, 16); }\n    public get ArrayType() { return Uint16Array; }\n}\n/** @ignore */\nexport class Uint32 extends Int_<Type.Uint32> {\n    constructor() { super(false, 32); }\n    public get ArrayType() { return Uint32Array; }\n}\n/** @ignore */\nexport class Uint64 extends Int_<Type.Uint64> {\n    constructor() { super(false, 64); }\n    public get ArrayType() { return BigUint64Array; }\n}\n\nObject.defineProperty(Int8.prototype, 'ArrayType', { value: Int8Array });\nObject.defineProperty(Int16.prototype, 'ArrayType', { value: Int16Array });\nObject.defineProperty(Int32.prototype, 'ArrayType', { value: Int32Array });\nObject.defineProperty(Int64.prototype, 'ArrayType', { value: BigInt64Array });\nObject.defineProperty(Uint8.prototype, 'ArrayType', { value: Uint8Array });\nObject.defineProperty(Uint16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Uint32.prototype, 'ArrayType', { value: Uint32Array });\nObject.defineProperty(Uint64.prototype, 'ArrayType', { value: BigUint64Array });\n\n/** @ignore */\ntype Floats = Type.Float | Type.Float16 | Type.Float32 | Type.Float64;\n/** @ignore */\ntype FType = {\n    [Type.Float]: { precision: Precision; TArray: FloatArray; TValue: number };\n    [Type.Float16]: { precision: Precision.HALF; TArray: Uint16Array; TValue: number };\n    [Type.Float32]: { precision: Precision.SINGLE; TArray: Float32Array; TValue: number };\n    [Type.Float64]: { precision: Precision.DOUBLE; TArray: Float64Array; TValue: number };\n};\n\n/** @ignore */\nexport interface Float<T extends Floats = Floats> extends DataType<T> { TArray: FType[T]['TArray']; TValue: number }\n/** @ignore */\nexport class Float<T extends Floats = Floats> extends DataType<T> {\n    constructor(public readonly precision: Precision) {\n        super();\n    }\n    public get typeId() { return Type.Float as T; }\n    public get ArrayType(): TypedArrayConstructor<FType[T]['TArray']> {\n        switch (this.precision) {\n            case Precision.HALF: return Uint16Array;\n            case Precision.SINGLE: return Float32Array;\n            case Precision.DOUBLE: return Float64Array;\n        }\n        // @ts-ignore\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    public toString() { return `Float${(this.precision << 5) || 16}`; }\n    protected static [Symbol.toStringTag] = ((proto: Float) => {\n        (<any>proto).precision = null;\n        return proto[Symbol.toStringTag] = 'Float';\n    })(Float.prototype);\n}\n\n/** @ignore */\nexport class Float16 extends Float<Type.Float16> { constructor() { super(Precision.HALF); } }\n/** @ignore */\nexport class Float32 extends Float<Type.Float32> { constructor() { super(Precision.SINGLE); } }\n/** @ignore */\nexport class Float64 extends Float<Type.Float64> { constructor() { super(Precision.DOUBLE); } }\n\nObject.defineProperty(Float16.prototype, 'ArrayType', { value: Uint16Array });\nObject.defineProperty(Float32.prototype, 'ArrayType', { value: Float32Array });\nObject.defineProperty(Float64.prototype, 'ArrayType', { value: Float64Array });\n\n/** @ignore */\nexport interface Binary extends DataType<Type.Binary> { TArray: Uint8Array; TValue: Uint8Array; ArrayType: TypedArrayConstructor<Uint8Array> }\n/** @ignore */\nexport class Binary extends DataType<Type.Binary> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Binary as Type.Binary; }\n    public toString() { return `Binary`; }\n    protected static [Symbol.toStringTag] = ((proto: Binary) => {\n        (<any>proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Binary';\n    })(Binary.prototype);\n}\n\n/** @ignore */\nexport interface Utf8 extends DataType<Type.Utf8> { TArray: Uint8Array; TValue: string; ArrayType: TypedArrayConstructor<Uint8Array> }\n/** @ignore */\nexport class Utf8 extends DataType<Type.Utf8> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Utf8 as Type.Utf8; }\n    public toString() { return `Utf8`; }\n    protected static [Symbol.toStringTag] = ((proto: Utf8) => {\n        (<any>proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Utf8';\n    })(Utf8.prototype);\n}\n\n/** @ignore */\nexport interface Bool extends DataType<Type.Bool> { TArray: Uint8Array; TValue: boolean; ArrayType: TypedArrayConstructor<Uint8Array> }\n/** @ignore */\nexport class Bool extends DataType<Type.Bool> {\n    constructor() {\n        super();\n    }\n    public get typeId() { return Type.Bool as Type.Bool; }\n    public toString() { return `Bool`; }\n    protected static [Symbol.toStringTag] = ((proto: Bool) => {\n        (<any>proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'Bool';\n    })(Bool.prototype);\n}\n\n/** @ignore */\nexport interface Decimal extends DataType<Type.Decimal> { TArray: Uint32Array; TValue: Uint32Array; ArrayType: TypedArrayConstructor<Uint32Array> }\n/** @ignore */\nexport class Decimal extends DataType<Type.Decimal> {\n    constructor(public readonly scale: number,\n        public readonly precision: number,\n        public readonly bitWidth: number = 128) {\n        super();\n    }\n    public get typeId() { return Type.Decimal as Type.Decimal; }\n    public toString() { return `Decimal[${this.precision}e${this.scale > 0 ? `+` : ``}${this.scale}]`; }\n    protected static [Symbol.toStringTag] = ((proto: Decimal) => {\n        (<any>proto).scale = null;\n        (<any>proto).precision = null;\n        (<any>proto).ArrayType = Uint32Array;\n        return proto[Symbol.toStringTag] = 'Decimal';\n    })(Decimal.prototype);\n}\n\n/** @ignore */\nexport type Dates = Type.Date | Type.DateDay | Type.DateMillisecond;\n/** @ignore */\nexport interface Date_<T extends Dates = Dates> extends DataType<T> { TArray: Int32Array; TValue: Date; ArrayType: TypedArrayConstructor<Int32Array> }\n/** @ignore */\nexport class Date_<T extends Dates = Dates> extends DataType<T> {\n    constructor(public readonly unit: DateUnit) {\n        super();\n    }\n    public get typeId() { return Type.Date as T; }\n    public toString() { return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Date_) => {\n        (<any>proto).unit = null;\n        (<any>proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Date';\n    })(Date_.prototype);\n}\n\n/** @ignore */\nexport class DateDay extends Date_<Type.DateDay> { constructor() { super(DateUnit.DAY); } }\n/** @ignore */\nexport class DateMillisecond extends Date_<Type.DateMillisecond> { constructor() { super(DateUnit.MILLISECOND); } }\n\n/** @ignore */\ntype Times = Type.Time | Type.TimeSecond | Type.TimeMillisecond | Type.TimeMicrosecond | Type.TimeNanosecond;\n/** @ignore */\ntype TimesType = {\n    [Type.Time]: { unit: TimeUnit; TValue: number | bigint; TArray: Int32Array | BigInt64Array };\n    [Type.TimeSecond]: { unit: TimeUnit.SECOND; TValue: number; TArray: Int32Array };\n    [Type.TimeMillisecond]: { unit: TimeUnit.MILLISECOND; TValue: number; TArray: Int32Array };\n    [Type.TimeMicrosecond]: { unit: TimeUnit.MICROSECOND; TValue: bigint; TArray: BigInt64Array };\n    [Type.TimeNanosecond]: { unit: TimeUnit.NANOSECOND; TValue: bigint; TArray: BigInt64Array };\n};\n\n/** @ignore */\ninterface Time_<T extends Times = Times> extends DataType<T> {\n    TArray: TimesType[T]['TArray'];\n    TValue: TimesType[T]['TValue'];\n}\n/** @ignore */\nclass Time_<T extends Times = Times> extends DataType<T> {\n    constructor(public readonly unit: TimesType[T]['unit'],\n        public readonly bitWidth: TimeBitWidth) {\n        super();\n    }\n    public get typeId() { return Type.Time as T; }\n    public toString() { return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`; }\n    public get ArrayType() {\n        switch (this.bitWidth) {\n            case 32: return Int32Array;\n            case 64: return BigInt64Array;\n        }\n        // @ts-ignore\n        throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n    }\n    protected static [Symbol.toStringTag] = ((proto: Time_) => {\n        (<any>proto).unit = null;\n        (<any>proto).bitWidth = null;\n        return proto[Symbol.toStringTag] = 'Time';\n    })(Time_.prototype);\n}\n\nexport { Time_ as Time };\n\n/** @ignore */\nexport class TimeSecond extends Time_<Type.TimeSecond> { constructor() { super(TimeUnit.SECOND, 32); } }\n/** @ignore */\nexport class TimeMillisecond extends Time_<Type.TimeMillisecond> { constructor() { super(TimeUnit.MILLISECOND, 32); } }\n/** @ignore */\nexport class TimeMicrosecond extends Time_<Type.TimeMicrosecond> { constructor() { super(TimeUnit.MICROSECOND, 64); } }\n/** @ignore */\nexport class TimeNanosecond extends Time_<Type.TimeNanosecond> { constructor() { super(TimeUnit.NANOSECOND, 64); } }\n\n/** @ignore */\ntype Timestamps = Type.Timestamp | Type.TimestampSecond | Type.TimestampMillisecond | Type.TimestampMicrosecond | Type.TimestampNanosecond;\n/** @ignore */\ninterface Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> {\n    TArray: Int32Array;\n    TValue: number;\n    ArrayType: TypedArrayConstructor<Int32Array>;\n}\n\n/** @ignore */\nclass Timestamp_<T extends Timestamps = Timestamps> extends DataType<T> {\n    constructor(public readonly unit: TimeUnit,\n        public readonly timezone?: string | null) {\n        super();\n    }\n    public get typeId() { return Type.Timestamp as T; }\n    public toString() { return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ``}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Timestamp_) => {\n        (<any>proto).unit = null;\n        (<any>proto).timezone = null;\n        (<any>proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Timestamp';\n    })(Timestamp_.prototype);\n}\n\nexport { Timestamp_ as Timestamp };\n\n/** @ignore */\nexport class TimestampSecond extends Timestamp_<Type.TimestampSecond> { constructor(timezone?: string | null) { super(TimeUnit.SECOND, timezone); } }\n/** @ignore */\nexport class TimestampMillisecond extends Timestamp_<Type.TimestampMillisecond> { constructor(timezone?: string | null) { super(TimeUnit.MILLISECOND, timezone); } }\n/** @ignore */\nexport class TimestampMicrosecond extends Timestamp_<Type.TimestampMicrosecond> { constructor(timezone?: string | null) { super(TimeUnit.MICROSECOND, timezone); } }\n/** @ignore */\nexport class TimestampNanosecond extends Timestamp_<Type.TimestampNanosecond> { constructor(timezone?: string | null) { super(TimeUnit.NANOSECOND, timezone); } }\n\n/** @ignore */\ntype Intervals = Type.Interval | Type.IntervalDayTime | Type.IntervalYearMonth;\n/** @ignore */\ninterface Interval_<T extends Intervals = Intervals> extends DataType<T> {\n    TArray: Int32Array;\n    TValue: Int32Array;\n    ArrayType: TypedArrayConstructor<Int32Array>;\n}\n\n/** @ignore */\nclass Interval_<T extends Intervals = Intervals> extends DataType<T> {\n    constructor(public readonly unit: IntervalUnit) {\n        super();\n    }\n    public get typeId() { return Type.Interval as T; }\n    public toString() { return `Interval<${IntervalUnit[this.unit]}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Interval_) => {\n        (<any>proto).unit = null;\n        (<any>proto).ArrayType = Int32Array;\n        return proto[Symbol.toStringTag] = 'Interval';\n    })(Interval_.prototype);\n}\n\nexport { Interval_ as Interval };\n\n/** @ignore */\nexport class IntervalDayTime extends Interval_<Type.IntervalDayTime> { constructor() { super(IntervalUnit.DAY_TIME); } }\n/** @ignore */\nexport class IntervalYearMonth extends Interval_<Type.IntervalYearMonth> { constructor() { super(IntervalUnit.YEAR_MONTH); } }\n\n/** @ignore */\nexport interface List<T extends DataType = any> extends DataType<Type.List, { [0]: T }> {\n    TArray: Array<T>;\n    TValue: Vector<T>;\n}\n\n/** @ignore */\nexport class List<T extends DataType = any> extends DataType<Type.List, { [0]: T }> {\n    constructor(child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public declare readonly children: Field<T>[];\n    public get typeId() { return Type.List as Type.List; }\n    public toString() { return `List<${this.valueType}>`; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    protected static [Symbol.toStringTag] = ((proto: List) => {\n        (<any>proto).children = null;\n        return proto[Symbol.toStringTag] = 'List';\n    })(List.prototype);\n}\n\n/** @ignore */\nexport interface Struct<T extends TypeMap = any> extends DataType<Type.Struct, T> {\n    TArray: Array<StructRowProxy<T>>;\n    TValue: StructRowProxy<T>;\n    dataTypes: T;\n}\n\n/** @ignore */\nexport class Struct<T extends TypeMap = any> extends DataType<Type.Struct, T> {\n    public declare _row: StructRow<T>;\n    public declare readonly children: Field<T[keyof T]>[];\n    constructor(children: Field<T[keyof T]>[]) {\n        super();\n        this.children = children;\n    }\n    public get typeId() { return Type.Struct as Type.Struct; }\n    public toString() { return `Struct<{${this.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Struct) => {\n        (<any>proto).children = null;\n        return proto[Symbol.toStringTag] = 'Struct';\n    })(Struct.prototype);\n}\n\n/** @ignore */\ntype Unions = Type.Union | Type.DenseUnion | Type.SparseUnion;\n/** @ignore */\ninterface Union_<T extends Unions = Unions> extends DataType<T> { TArray: Int8Array; TValue: any; ArrayType: TypedArrayConstructor<Int8Array> }\n/** @ignore */\nclass Union_<T extends Unions = Unions> extends DataType<T> {\n    public declare readonly mode: UnionMode;\n    public declare readonly typeIds: Int32Array;\n    public declare readonly children: Field<any>[];\n    public declare readonly typeIdToChildIndex: { [key: number]: number };\n    constructor(mode: UnionMode,\n        typeIds: number[] | Int32Array,\n        children: Field<any>[]) {\n        super();\n        this.mode = mode;\n        this.children = children;\n        this.typeIds = typeIds = Int32Array.from(typeIds);\n        this.typeIdToChildIndex = typeIds.reduce((typeIdToChildIndex, typeId, idx) => (typeIdToChildIndex[typeId] = idx) && typeIdToChildIndex || typeIdToChildIndex, Object.create(null) as { [key: number]: number });\n    }\n    public get typeId() { return Type.Union as T; }\n    public toString() {\n        return `${this[Symbol.toStringTag]}<${this.children.map((x) => `${x.type}`).join(` | `)\n            }>`;\n    }\n    protected static [Symbol.toStringTag] = ((proto: Union_) => {\n        (<any>proto).mode = null;\n        (<any>proto).typeIds = null;\n        (<any>proto).children = null;\n        (<any>proto).typeIdToChildIndex = null;\n        (<any>proto).ArrayType = Int8Array;\n        return proto[Symbol.toStringTag] = 'Union';\n    })(Union_.prototype);\n}\n\nexport { Union_ as Union };\n\n/** @ignore */\nexport class DenseUnion extends Union_<Type.DenseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Dense, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport class SparseUnion extends Union_<Type.SparseUnion> {\n    constructor(typeIds: number[] | Int32Array, children: Field[]) {\n        super(UnionMode.Sparse, typeIds, children);\n    }\n}\n\n/** @ignore */\nexport interface FixedSizeBinary extends DataType<Type.FixedSizeBinary> {\n    TArray: Uint8Array;\n    TValue: Uint8Array;\n    ArrayType: TypedArrayConstructor<Uint8Array>;\n}\n\n/** @ignore */\nexport class FixedSizeBinary extends DataType<Type.FixedSizeBinary> {\n    constructor(public readonly byteWidth: number) {\n        super();\n    }\n    public get typeId() { return Type.FixedSizeBinary as Type.FixedSizeBinary; }\n    public toString() { return `FixedSizeBinary[${this.byteWidth}]`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeBinary) => {\n        (<any>proto).byteWidth = null;\n        (<any>proto).ArrayType = Uint8Array;\n        return proto[Symbol.toStringTag] = 'FixedSizeBinary';\n    })(FixedSizeBinary.prototype);\n}\n\n/** @ignore */\nexport interface FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList, { [0]: T }> {\n    TArray: Array<T['TArray']>;\n    TValue: Vector<T>;\n}\n\n/** @ignore */\nexport class FixedSizeList<T extends DataType = any> extends DataType<Type.FixedSizeList, { [0]: T }> {\n    public declare readonly children: Field<T>[];\n    constructor(public readonly listSize: number, child: Field<T>) {\n        super();\n        this.children = [child];\n    }\n    public get typeId() { return Type.FixedSizeList as Type.FixedSizeList; }\n    public get valueType(): T { return this.children[0].type as T; }\n    public get valueField(): Field<T> { return this.children[0] as Field<T>; }\n    public get ArrayType(): T['ArrayType'] { return this.valueType.ArrayType; }\n    public toString() { return `FixedSizeList[${this.listSize}]<${this.valueType}>`; }\n    protected static [Symbol.toStringTag] = ((proto: FixedSizeList) => {\n        (<any>proto).children = null;\n        (<any>proto).listSize = null;\n        return proto[Symbol.toStringTag] = 'FixedSizeList';\n    })(FixedSizeList.prototype);\n}\n\n/** @ignore */\nexport interface Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map, { [0]: Struct<{ key: TKey; value: TValue }> }> {\n    TArray: Array<Map<TKey['TValue'], TValue['TValue'] | null>>;\n    TChild: Struct<{ key: TKey; value: TValue }>;\n    TValue: MapRow<TKey, TValue>;\n}\n\n/** @ignore */\nexport class Map_<TKey extends DataType = any, TValue extends DataType = any> extends DataType<Type.Map, { [0]: Struct<{ key: TKey; value: TValue }> }> {\n    constructor(child: Field<Struct<{ key: TKey; value: TValue }>>, keysSorted = false) {\n        super();\n        this.children = [child];\n        this.keysSorted = keysSorted;\n    }\n    public declare readonly keysSorted: boolean;\n    public declare readonly children: Field<Struct<{ key: TKey; value: TValue }>>[];\n    public get typeId() { return Type.Map as Type.Map; }\n    public get keyType(): TKey { return this.children[0].type.children[0].type as TKey; }\n    public get valueType(): TValue { return this.children[0].type.children[1].type as TValue; }\n    public get childType() { return this.children[0].type as Struct<{ key: TKey; value: TValue }>; }\n    public toString() { return `Map<{${this.children[0].type.children.map((f) => `${f.name}:${f.type}`).join(`, `)}}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Map_) => {\n        (<any>proto).children = null;\n        (<any>proto).keysSorted = null;\n        return proto[Symbol.toStringTag] = 'Map_';\n    })(Map_.prototype);\n}\n\n/** @ignore */\nconst getId = ((atomicDictionaryId) => () => ++atomicDictionaryId)(-1);\n\n/** @ignore */\nexport type TKeys = Int8 | Int16 | Int32 | Uint8 | Uint16 | Uint32;\n\n/** @ignore */\nexport interface Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> {\n    TArray: TKey['TArray'];\n    TValue: T['TValue'];\n}\n\n/** @ignore */\nexport class Dictionary<T extends DataType = any, TKey extends TKeys = TKeys> extends DataType<Type.Dictionary> {\n    public declare readonly id: number;\n    public declare readonly indices: TKey;\n    public declare readonly dictionary: T;\n    public declare readonly isOrdered: boolean;\n    constructor(dictionary: T, indices: TKey, id?: Long | number | null, isOrdered?: boolean | null) {\n        super();\n        this.indices = indices;\n        this.dictionary = dictionary;\n        this.isOrdered = isOrdered || false;\n        this.id = id == null ? getId() : (typeof id === 'number' ? id : id.low);\n    }\n    public get typeId() { return Type.Dictionary as Type.Dictionary; }\n    public get children() { return this.dictionary.children; }\n    public get valueType(): T { return this.dictionary as T; }\n    public get ArrayType(): T['ArrayType'] { return this.dictionary.ArrayType; }\n    public toString() { return `Dictionary<${this.indices}, ${this.dictionary}>`; }\n    protected static [Symbol.toStringTag] = ((proto: Dictionary) => {\n        (<any>proto).id = null;\n        (<any>proto).indices = null;\n        (<any>proto).isOrdered = null;\n        (<any>proto).dictionary = null;\n        return proto[Symbol.toStringTag] = 'Dictionary';\n    })(Dictionary.prototype);\n}\n\n/** @ignore */\nexport type FloatArray = Uint16Array | Float32Array | Float64Array;\n/** @ignore */\nexport type IntArray = Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array;\n\n/** @ignore */\nexport function strideForType(type: DataType) {\n    const t: any = type;\n    switch (type.typeId) {\n        case Type.Decimal: return (type as Decimal).bitWidth / 32;\n        case Type.Timestamp: return 2;\n        case Type.Date: return 1 + (t as Date_).unit;\n        case Type.Interval: return 1 + (t as Interval_).unit;\n        // case Type.Int: return 1 + +((t as Int_).bitWidth > 32);\n        // case Type.Time: return 1 + +((t as Time_).bitWidth > 32);\n        case Type.FixedSizeList: return (t as FixedSizeList).listSize;\n        case Type.FixedSizeBinary: return (t as FixedSizeBinary).byteWidth;\n        default: return 1;\n    }\n}\n\n/** @ignore */\nexport type TypeMap = Record<string | number | symbol, DataType>;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}