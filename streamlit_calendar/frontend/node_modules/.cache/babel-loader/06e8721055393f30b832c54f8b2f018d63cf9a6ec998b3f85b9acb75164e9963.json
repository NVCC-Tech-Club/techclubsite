{"ast":null,"code":"import ENGLISH from './i18n';\nimport { RRule } from '../rrule';\n// =============================================================================\n// Parser\n// =============================================================================\nvar Parser = /** @class */function () {\n  function Parser(rules) {\n    this.done = true;\n    this.rules = rules;\n  }\n  Parser.prototype.start = function (text) {\n    this.text = text;\n    this.done = false;\n    return this.nextSymbol();\n  };\n  Parser.prototype.isDone = function () {\n    return this.done && this.symbol === null;\n  };\n  Parser.prototype.nextSymbol = function () {\n    var best;\n    var bestSymbol;\n    this.symbol = null;\n    this.value = null;\n    do {\n      if (this.done) return false;\n      var rule = void 0;\n      best = null;\n      for (var name_1 in this.rules) {\n        rule = this.rules[name_1];\n        var match = rule.exec(this.text);\n        if (match) {\n          if (best === null || match[0].length > best[0].length) {\n            best = match;\n            bestSymbol = name_1;\n          }\n        }\n      }\n      if (best != null) {\n        this.text = this.text.substr(best[0].length);\n        if (this.text === '') this.done = true;\n      }\n      if (best == null) {\n        this.done = true;\n        this.symbol = null;\n        this.value = null;\n        return;\n      }\n    } while (bestSymbol === 'SKIP');\n    this.symbol = bestSymbol;\n    this.value = best;\n    return true;\n  };\n  Parser.prototype.accept = function (name) {\n    if (this.symbol === name) {\n      if (this.value) {\n        var v = this.value;\n        this.nextSymbol();\n        return v;\n      }\n      this.nextSymbol();\n      return true;\n    }\n    return false;\n  };\n  Parser.prototype.acceptNumber = function () {\n    return this.accept('number');\n  };\n  Parser.prototype.expect = function (name) {\n    if (this.accept(name)) return true;\n    throw new Error('expected ' + name + ' but found ' + this.symbol);\n  };\n  return Parser;\n}();\nexport default function parseText(text, language) {\n  if (language === void 0) {\n    language = ENGLISH;\n  }\n  var options = {};\n  var ttr = new Parser(language.tokens);\n  if (!ttr.start(text)) return null;\n  S();\n  return options;\n  function S() {\n    // every [n]\n    ttr.expect('every');\n    var n = ttr.acceptNumber();\n    if (n) options.interval = parseInt(n[0], 10);\n    if (ttr.isDone()) throw new Error('Unexpected end');\n    switch (ttr.symbol) {\n      case 'day(s)':\n        options.freq = RRule.DAILY;\n        if (ttr.nextSymbol()) {\n          AT();\n          F();\n        }\n        break;\n      // FIXME Note: every 2 weekdays != every two weeks on weekdays.\n      // DAILY on weekdays is not a valid rule\n      case 'weekday(s)':\n        options.freq = RRule.WEEKLY;\n        options.byweekday = [RRule.MO, RRule.TU, RRule.WE, RRule.TH, RRule.FR];\n        ttr.nextSymbol();\n        AT();\n        F();\n        break;\n      case 'week(s)':\n        options.freq = RRule.WEEKLY;\n        if (ttr.nextSymbol()) {\n          ON();\n          AT();\n          F();\n        }\n        break;\n      case 'hour(s)':\n        options.freq = RRule.HOURLY;\n        if (ttr.nextSymbol()) {\n          ON();\n          F();\n        }\n        break;\n      case 'minute(s)':\n        options.freq = RRule.MINUTELY;\n        if (ttr.nextSymbol()) {\n          ON();\n          F();\n        }\n        break;\n      case 'month(s)':\n        options.freq = RRule.MONTHLY;\n        if (ttr.nextSymbol()) {\n          ON();\n          F();\n        }\n        break;\n      case 'year(s)':\n        options.freq = RRule.YEARLY;\n        if (ttr.nextSymbol()) {\n          ON();\n          F();\n        }\n        break;\n      case 'monday':\n      case 'tuesday':\n      case 'wednesday':\n      case 'thursday':\n      case 'friday':\n      case 'saturday':\n      case 'sunday':\n        options.freq = RRule.WEEKLY;\n        var key = ttr.symbol.substr(0, 2).toUpperCase();\n        options.byweekday = [RRule[key]];\n        if (!ttr.nextSymbol()) return;\n        // TODO check for duplicates\n        while (ttr.accept('comma')) {\n          if (ttr.isDone()) throw new Error('Unexpected end');\n          var wkd = decodeWKD();\n          if (!wkd) {\n            throw new Error('Unexpected symbol ' + ttr.symbol + ', expected weekday');\n          }\n          options.byweekday.push(RRule[wkd]);\n          ttr.nextSymbol();\n        }\n        AT();\n        MDAYs();\n        F();\n        break;\n      case 'january':\n      case 'february':\n      case 'march':\n      case 'april':\n      case 'may':\n      case 'june':\n      case 'july':\n      case 'august':\n      case 'september':\n      case 'october':\n      case 'november':\n      case 'december':\n        options.freq = RRule.YEARLY;\n        options.bymonth = [decodeM()];\n        if (!ttr.nextSymbol()) return;\n        // TODO check for duplicates\n        while (ttr.accept('comma')) {\n          if (ttr.isDone()) throw new Error('Unexpected end');\n          var m = decodeM();\n          if (!m) {\n            throw new Error('Unexpected symbol ' + ttr.symbol + ', expected month');\n          }\n          options.bymonth.push(m);\n          ttr.nextSymbol();\n        }\n        ON();\n        F();\n        break;\n      default:\n        throw new Error('Unknown symbol');\n    }\n  }\n  function ON() {\n    var on = ttr.accept('on');\n    var the = ttr.accept('the');\n    if (!(on || the)) return;\n    do {\n      var nth = decodeNTH();\n      var wkd = decodeWKD();\n      var m = decodeM();\n      // nth <weekday> | <weekday>\n      if (nth) {\n        // ttr.nextSymbol()\n        if (wkd) {\n          ttr.nextSymbol();\n          if (!options.byweekday) options.byweekday = [];\n          options.byweekday.push(RRule[wkd].nth(nth));\n        } else {\n          if (!options.bymonthday) options.bymonthday = [];\n          options.bymonthday.push(nth);\n          ttr.accept('day(s)');\n        }\n        // <weekday>\n      } else if (wkd) {\n        ttr.nextSymbol();\n        if (!options.byweekday) options.byweekday = [];\n        options.byweekday.push(RRule[wkd]);\n      } else if (ttr.symbol === 'weekday(s)') {\n        ttr.nextSymbol();\n        if (!options.byweekday) {\n          options.byweekday = [RRule.MO, RRule.TU, RRule.WE, RRule.TH, RRule.FR];\n        }\n      } else if (ttr.symbol === 'week(s)') {\n        ttr.nextSymbol();\n        var n = ttr.acceptNumber();\n        if (!n) {\n          throw new Error('Unexpected symbol ' + ttr.symbol + ', expected week number');\n        }\n        options.byweekno = [parseInt(n[0], 10)];\n        while (ttr.accept('comma')) {\n          n = ttr.acceptNumber();\n          if (!n) {\n            throw new Error('Unexpected symbol ' + ttr.symbol + '; expected monthday');\n          }\n          options.byweekno.push(parseInt(n[0], 10));\n        }\n      } else if (m) {\n        ttr.nextSymbol();\n        if (!options.bymonth) options.bymonth = [];\n        options.bymonth.push(m);\n      } else {\n        return;\n      }\n    } while (ttr.accept('comma') || ttr.accept('the') || ttr.accept('on'));\n  }\n  function AT() {\n    var at = ttr.accept('at');\n    if (!at) return;\n    do {\n      var n = ttr.acceptNumber();\n      if (!n) {\n        throw new Error('Unexpected symbol ' + ttr.symbol + ', expected hour');\n      }\n      options.byhour = [parseInt(n[0], 10)];\n      while (ttr.accept('comma')) {\n        n = ttr.acceptNumber();\n        if (!n) {\n          throw new Error('Unexpected symbol ' + ttr.symbol + '; expected hour');\n        }\n        options.byhour.push(parseInt(n[0], 10));\n      }\n    } while (ttr.accept('comma') || ttr.accept('at'));\n  }\n  function decodeM() {\n    switch (ttr.symbol) {\n      case 'january':\n        return 1;\n      case 'february':\n        return 2;\n      case 'march':\n        return 3;\n      case 'april':\n        return 4;\n      case 'may':\n        return 5;\n      case 'june':\n        return 6;\n      case 'july':\n        return 7;\n      case 'august':\n        return 8;\n      case 'september':\n        return 9;\n      case 'october':\n        return 10;\n      case 'november':\n        return 11;\n      case 'december':\n        return 12;\n      default:\n        return false;\n    }\n  }\n  function decodeWKD() {\n    switch (ttr.symbol) {\n      case 'monday':\n      case 'tuesday':\n      case 'wednesday':\n      case 'thursday':\n      case 'friday':\n      case 'saturday':\n      case 'sunday':\n        return ttr.symbol.substr(0, 2).toUpperCase();\n      default:\n        return false;\n    }\n  }\n  function decodeNTH() {\n    switch (ttr.symbol) {\n      case 'last':\n        ttr.nextSymbol();\n        return -1;\n      case 'first':\n        ttr.nextSymbol();\n        return 1;\n      case 'second':\n        ttr.nextSymbol();\n        return ttr.accept('last') ? -2 : 2;\n      case 'third':\n        ttr.nextSymbol();\n        return ttr.accept('last') ? -3 : 3;\n      case 'nth':\n        var v = parseInt(ttr.value[1], 10);\n        if (v < -366 || v > 366) throw new Error('Nth out of range: ' + v);\n        ttr.nextSymbol();\n        return ttr.accept('last') ? -v : v;\n      default:\n        return false;\n    }\n  }\n  function MDAYs() {\n    ttr.accept('on');\n    ttr.accept('the');\n    var nth = decodeNTH();\n    if (!nth) return;\n    options.bymonthday = [nth];\n    ttr.nextSymbol();\n    while (ttr.accept('comma')) {\n      nth = decodeNTH();\n      if (!nth) {\n        throw new Error('Unexpected symbol ' + ttr.symbol + '; expected monthday');\n      }\n      options.bymonthday.push(nth);\n      ttr.nextSymbol();\n    }\n  }\n  function F() {\n    if (ttr.symbol === 'until') {\n      var date = Date.parse(ttr.text);\n      if (!date) throw new Error('Cannot parse until date:' + ttr.text);\n      options.until = new Date(date);\n    } else if (ttr.accept('for')) {\n      options.count = parseInt(ttr.value[0], 10);\n      ttr.expect('number');\n      // ttr.expect('times')\n    }\n  }\n}","map":{"version":3,"names":["ENGLISH","RRule","Parser","rules","done","prototype","start","text","nextSymbol","isDone","symbol","best","bestSymbol","value","rule","name_1","match","exec","length","substr","accept","name","v","acceptNumber","expect","Error","parseText","language","options","ttr","tokens","S","n","interval","parseInt","freq","DAILY","AT","F","WEEKLY","byweekday","MO","TU","WE","TH","FR","ON","HOURLY","MINUTELY","MONTHLY","YEARLY","key","toUpperCase","wkd","decodeWKD","push","MDAYs","bymonth","decodeM","m","on","the","nth","decodeNTH","bymonthday","byweekno","at","byhour","date","Date","parse","until","count"],"sources":["../../../src/nlp/parsetext.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}