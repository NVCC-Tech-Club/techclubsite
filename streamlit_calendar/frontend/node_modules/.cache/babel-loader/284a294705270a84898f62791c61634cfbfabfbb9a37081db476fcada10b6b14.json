{"ast":null,"code":"import _classCallCheck from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _get from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\nimport { makeData } from '../data.mjs';\nimport { Field } from '../schema.mjs';\nimport { DataType } from '../type.mjs';\nimport { Visitor } from '../visitor.mjs';\nimport { packBools } from '../util/bit.mjs';\nimport { encodeUtf8 } from '../util/utf8.mjs';\nimport { Int64, Int128 } from '../util/int.mjs';\nimport { UnionMode, DateUnit } from '../enum.mjs';\nimport { toArrayBufferView } from '../util/buffer.mjs';\n/** @ignore */\nexport var VectorLoader = /*#__PURE__*/function (_Visitor) {\n  _inherits(VectorLoader, _Visitor);\n  var _super = _createSuper(VectorLoader);\n  function VectorLoader(bytes, nodes, buffers, dictionaries) {\n    var _this;\n    _classCallCheck(this, VectorLoader);\n    _this = _super.call(this);\n    _this.nodesIndex = -1;\n    _this.buffersIndex = -1;\n    _this.bytes = bytes;\n    _this.nodes = nodes;\n    _this.buffers = buffers;\n    _this.dictionaries = dictionaries;\n    return _this;\n  }\n  _createClass(VectorLoader, [{\n    key: \"visit\",\n    value: function visit(node) {\n      return _get(_getPrototypeOf(VectorLoader.prototype), \"visit\", this).call(this, node instanceof Field ? node.type : node);\n    }\n  }, {\n    key: \"visitNull\",\n    value: function visitNull(type) {\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode(),\n        length = _ref.length;\n      return makeData({\n        type: type,\n        length: length\n      });\n    }\n  }, {\n    key: \"visitBool\",\n    value: function visitBool(type) {\n      var _ref2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode(),\n        length = _ref2.length,\n        nullCount = _ref2.nullCount;\n      return makeData({\n        type: type,\n        length: length,\n        nullCount: nullCount,\n        nullBitmap: this.readNullBitmap(type, nullCount),\n        data: this.readData(type)\n      });\n    }\n  }, {\n    key: \"visitInt\",\n    value: function visitInt(type) {\n      var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode(),\n        length = _ref3.length,\n        nullCount = _ref3.nullCount;\n      return makeData({\n        type: type,\n        length: length,\n        nullCount: nullCount,\n        nullBitmap: this.readNullBitmap(type, nullCount),\n        data: this.readData(type)\n      });\n    }\n  }, {\n    key: \"visitFloat\",\n    value: function visitFloat(type) {\n      var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode(),\n        length = _ref4.length,\n        nullCount = _ref4.nullCount;\n      return makeData({\n        type: type,\n        length: length,\n        nullCount: nullCount,\n        nullBitmap: this.readNullBitmap(type, nullCount),\n        data: this.readData(type)\n      });\n    }\n  }, {\n    key: \"visitUtf8\",\n    value: function visitUtf8(type) {\n      var _ref5 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode(),\n        length = _ref5.length,\n        nullCount = _ref5.nullCount;\n      return makeData({\n        type: type,\n        length: length,\n        nullCount: nullCount,\n        nullBitmap: this.readNullBitmap(type, nullCount),\n        valueOffsets: this.readOffsets(type),\n        data: this.readData(type)\n      });\n    }\n  }, {\n    key: \"visitBinary\",\n    value: function visitBinary(type) {\n      var _ref6 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode(),\n        length = _ref6.length,\n        nullCount = _ref6.nullCount;\n      return makeData({\n        type: type,\n        length: length,\n        nullCount: nullCount,\n        nullBitmap: this.readNullBitmap(type, nullCount),\n        valueOffsets: this.readOffsets(type),\n        data: this.readData(type)\n      });\n    }\n  }, {\n    key: \"visitFixedSizeBinary\",\n    value: function visitFixedSizeBinary(type) {\n      var _ref7 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode(),\n        length = _ref7.length,\n        nullCount = _ref7.nullCount;\n      return makeData({\n        type: type,\n        length: length,\n        nullCount: nullCount,\n        nullBitmap: this.readNullBitmap(type, nullCount),\n        data: this.readData(type)\n      });\n    }\n  }, {\n    key: \"visitDate\",\n    value: function visitDate(type) {\n      var _ref8 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode(),\n        length = _ref8.length,\n        nullCount = _ref8.nullCount;\n      return makeData({\n        type: type,\n        length: length,\n        nullCount: nullCount,\n        nullBitmap: this.readNullBitmap(type, nullCount),\n        data: this.readData(type)\n      });\n    }\n  }, {\n    key: \"visitTimestamp\",\n    value: function visitTimestamp(type) {\n      var _ref9 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode(),\n        length = _ref9.length,\n        nullCount = _ref9.nullCount;\n      return makeData({\n        type: type,\n        length: length,\n        nullCount: nullCount,\n        nullBitmap: this.readNullBitmap(type, nullCount),\n        data: this.readData(type)\n      });\n    }\n  }, {\n    key: \"visitTime\",\n    value: function visitTime(type) {\n      var _ref10 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode(),\n        length = _ref10.length,\n        nullCount = _ref10.nullCount;\n      return makeData({\n        type: type,\n        length: length,\n        nullCount: nullCount,\n        nullBitmap: this.readNullBitmap(type, nullCount),\n        data: this.readData(type)\n      });\n    }\n  }, {\n    key: \"visitDecimal\",\n    value: function visitDecimal(type) {\n      var _ref11 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode(),\n        length = _ref11.length,\n        nullCount = _ref11.nullCount;\n      return makeData({\n        type: type,\n        length: length,\n        nullCount: nullCount,\n        nullBitmap: this.readNullBitmap(type, nullCount),\n        data: this.readData(type)\n      });\n    }\n  }, {\n    key: \"visitList\",\n    value: function visitList(type) {\n      var _ref12 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode(),\n        length = _ref12.length,\n        nullCount = _ref12.nullCount;\n      return makeData({\n        type: type,\n        length: length,\n        nullCount: nullCount,\n        nullBitmap: this.readNullBitmap(type, nullCount),\n        valueOffsets: this.readOffsets(type),\n        'child': this.visit(type.children[0])\n      });\n    }\n  }, {\n    key: \"visitStruct\",\n    value: function visitStruct(type) {\n      var _ref13 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode(),\n        length = _ref13.length,\n        nullCount = _ref13.nullCount;\n      return makeData({\n        type: type,\n        length: length,\n        nullCount: nullCount,\n        nullBitmap: this.readNullBitmap(type, nullCount),\n        children: this.visitMany(type.children)\n      });\n    }\n  }, {\n    key: \"visitUnion\",\n    value: function visitUnion(type) {\n      return type.mode === UnionMode.Sparse ? this.visitSparseUnion(type) : this.visitDenseUnion(type);\n    }\n  }, {\n    key: \"visitDenseUnion\",\n    value: function visitDenseUnion(type) {\n      var _ref14 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode(),\n        length = _ref14.length,\n        nullCount = _ref14.nullCount;\n      return makeData({\n        type: type,\n        length: length,\n        nullCount: nullCount,\n        nullBitmap: this.readNullBitmap(type, nullCount),\n        typeIds: this.readTypeIds(type),\n        valueOffsets: this.readOffsets(type),\n        children: this.visitMany(type.children)\n      });\n    }\n  }, {\n    key: \"visitSparseUnion\",\n    value: function visitSparseUnion(type) {\n      var _ref15 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode(),\n        length = _ref15.length,\n        nullCount = _ref15.nullCount;\n      return makeData({\n        type: type,\n        length: length,\n        nullCount: nullCount,\n        nullBitmap: this.readNullBitmap(type, nullCount),\n        typeIds: this.readTypeIds(type),\n        children: this.visitMany(type.children)\n      });\n    }\n  }, {\n    key: \"visitDictionary\",\n    value: function visitDictionary(type) {\n      var _ref16 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode(),\n        length = _ref16.length,\n        nullCount = _ref16.nullCount;\n      return makeData({\n        type: type,\n        length: length,\n        nullCount: nullCount,\n        nullBitmap: this.readNullBitmap(type, nullCount),\n        data: this.readData(type.indices),\n        dictionary: this.readDictionary(type)\n      });\n    }\n  }, {\n    key: \"visitInterval\",\n    value: function visitInterval(type) {\n      var _ref17 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode(),\n        length = _ref17.length,\n        nullCount = _ref17.nullCount;\n      return makeData({\n        type: type,\n        length: length,\n        nullCount: nullCount,\n        nullBitmap: this.readNullBitmap(type, nullCount),\n        data: this.readData(type)\n      });\n    }\n  }, {\n    key: \"visitFixedSizeList\",\n    value: function visitFixedSizeList(type) {\n      var _ref18 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode(),\n        length = _ref18.length,\n        nullCount = _ref18.nullCount;\n      return makeData({\n        type: type,\n        length: length,\n        nullCount: nullCount,\n        nullBitmap: this.readNullBitmap(type, nullCount),\n        'child': this.visit(type.children[0])\n      });\n    }\n  }, {\n    key: \"visitMap\",\n    value: function visitMap(type) {\n      var _ref19 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextFieldNode(),\n        length = _ref19.length,\n        nullCount = _ref19.nullCount;\n      return makeData({\n        type: type,\n        length: length,\n        nullCount: nullCount,\n        nullBitmap: this.readNullBitmap(type, nullCount),\n        valueOffsets: this.readOffsets(type),\n        'child': this.visit(type.children[0])\n      });\n    }\n  }, {\n    key: \"nextFieldNode\",\n    value: function nextFieldNode() {\n      return this.nodes[++this.nodesIndex];\n    }\n  }, {\n    key: \"nextBufferRange\",\n    value: function nextBufferRange() {\n      return this.buffers[++this.buffersIndex];\n    }\n  }, {\n    key: \"readNullBitmap\",\n    value: function readNullBitmap(type, nullCount) {\n      var buffer = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.nextBufferRange();\n      return nullCount > 0 && this.readData(type, buffer) || new Uint8Array(0);\n    }\n  }, {\n    key: \"readOffsets\",\n    value: function readOffsets(type, buffer) {\n      return this.readData(type, buffer);\n    }\n  }, {\n    key: \"readTypeIds\",\n    value: function readTypeIds(type, buffer) {\n      return this.readData(type, buffer);\n    }\n  }, {\n    key: \"readData\",\n    value: function readData(_type) {\n      var _ref20 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextBufferRange(),\n        length = _ref20.length,\n        offset = _ref20.offset;\n      return this.bytes.subarray(offset, offset + length);\n    }\n  }, {\n    key: \"readDictionary\",\n    value: function readDictionary(type) {\n      return this.dictionaries.get(type.id);\n    }\n  }]);\n  return VectorLoader;\n}(Visitor);\n/** @ignore */\nexport var JSONVectorLoader = /*#__PURE__*/function (_VectorLoader) {\n  _inherits(JSONVectorLoader, _VectorLoader);\n  var _super2 = _createSuper(JSONVectorLoader);\n  function JSONVectorLoader(sources, nodes, buffers, dictionaries) {\n    var _this2;\n    _classCallCheck(this, JSONVectorLoader);\n    _this2 = _super2.call(this, new Uint8Array(0), nodes, buffers, dictionaries);\n    _this2.sources = sources;\n    return _this2;\n  }\n  _createClass(JSONVectorLoader, [{\n    key: \"readNullBitmap\",\n    value: function readNullBitmap(_type, nullCount) {\n      var _ref21 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.nextBufferRange(),\n        offset = _ref21.offset;\n      return nullCount <= 0 ? new Uint8Array(0) : packBools(this.sources[offset]);\n    }\n  }, {\n    key: \"readOffsets\",\n    value: function readOffsets(_type) {\n      var _ref22 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextBufferRange(),\n        offset = _ref22.offset;\n      return toArrayBufferView(Uint8Array, toArrayBufferView(Int32Array, this.sources[offset]));\n    }\n  }, {\n    key: \"readTypeIds\",\n    value: function readTypeIds(type) {\n      var _ref23 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextBufferRange(),\n        offset = _ref23.offset;\n      return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, this.sources[offset]));\n    }\n  }, {\n    key: \"readData\",\n    value: function readData(type) {\n      var _ref24 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.nextBufferRange(),\n        offset = _ref24.offset;\n      var sources = this.sources;\n      if (DataType.isTimestamp(type)) {\n        return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset]));\n      } else if ((DataType.isInt(type) || DataType.isTime(type)) && type.bitWidth === 64) {\n        return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset]));\n      } else if (DataType.isDate(type) && type.unit === DateUnit.MILLISECOND) {\n        return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset]));\n      } else if (DataType.isDecimal(type)) {\n        return toArrayBufferView(Uint8Array, Int128.convertArray(sources[offset]));\n      } else if (DataType.isBinary(type) || DataType.isFixedSizeBinary(type)) {\n        return binaryDataFromJSON(sources[offset]);\n      } else if (DataType.isBool(type)) {\n        return packBools(sources[offset]);\n      } else if (DataType.isUtf8(type)) {\n        return encodeUtf8(sources[offset].join(''));\n      }\n      return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, sources[offset].map(function (x) {\n        return +x;\n      })));\n    }\n  }]);\n  return JSONVectorLoader;\n}(VectorLoader);\n/** @ignore */\nfunction binaryDataFromJSON(values) {\n  // \"DATA\": [\"49BC7D5B6C47D2\",\"3F5FB6D9322026\"]\n  // There are definitely more efficient ways to do this... but it gets the\n  // job done.\n  var joined = values.join('');\n  var data = new Uint8Array(joined.length / 2);\n  for (var i = 0; i < joined.length; i += 2) {\n    data[i >> 1] = Number.parseInt(joined.slice(i, i + 2), 16);\n  }\n  return data;\n}","map":{"version":3,"names":["makeData","Field","DataType","Visitor","packBools","encodeUtf8","Int64","Int128","UnionMode","DateUnit","toArrayBufferView","VectorLoader","_Visitor","_inherits","_super","_createSuper","bytes","nodes","buffers","dictionaries","_this","_classCallCheck","call","nodesIndex","buffersIndex","_createClass","key","value","visit","node","_get","_getPrototypeOf","prototype","type","visitNull","_ref","arguments","length","undefined","nextFieldNode","visitBool","_ref2","nullCount","nullBitmap","readNullBitmap","data","readData","visitInt","_ref3","visitFloat","_ref4","visitUtf8","_ref5","valueOffsets","readOffsets","visitBinary","_ref6","visitFixedSizeBinary","_ref7","visitDate","_ref8","visitTimestamp","_ref9","visitTime","_ref10","visitDecimal","_ref11","visitList","_ref12","children","visitStruct","_ref13","visitMany","visitUnion","mode","Sparse","visitSparseUnion","visitDenseUnion","_ref14","typeIds","readTypeIds","_ref15","visitDictionary","_ref16","indices","dictionary","readDictionary","visitInterval","_ref17","visitFixedSizeList","_ref18","visitMap","_ref19","nextBufferRange","buffer","Uint8Array","_type","_ref20","offset","subarray","get","id","JSONVectorLoader","_VectorLoader","_super2","sources","_this2","_ref21","_ref22","Int32Array","_ref23","ArrayType","_ref24","isTimestamp","convertArray","isInt","isTime","bitWidth","isDate","unit","MILLISECOND","isDecimal","isBinary","isFixedSizeBinary","binaryDataFromJSON","isBool","isUtf8","join","map","x","values","joined","i","Number","parseInt","slice"],"sources":["C:\\Users\\erden\\OneDrive\\Documents\\GitHub\\techclubsite\\streamlit_calendar\\frontend\\node_modules\\apache-arrow\\src\\visitor\\vectorloader.ts"],"sourcesContent":["// Licensed to the Apache Software Foundation (ASF) under one\n// or more contributor license agreements.  See the NOTICE file\n// distributed with this work for additional information\n// regarding copyright ownership.  The ASF licenses this file\n// to you under the Apache License, Version 2.0 (the\n// \"License\"); you may not use this file except in compliance\n// with the License.  You may obtain a copy of the License at\n//\n//   http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing,\n// software distributed under the License is distributed on an\n// \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.  See the License for the\n// specific language governing permissions and limitations\n// under the License.\n\nimport { Data, makeData } from '../data.js';\nimport * as type from '../type.js';\nimport { Field } from '../schema.js';\nimport { Vector } from '../vector.js';\nimport { DataType } from '../type.js';\nimport { Visitor } from '../visitor.js';\nimport { packBools } from '../util/bit.js';\nimport { encodeUtf8 } from '../util/utf8.js';\nimport { Int64, Int128 } from '../util/int.js';\nimport { UnionMode, DateUnit } from '../enum.js';\nimport { toArrayBufferView } from '../util/buffer.js';\nimport { BufferRegion, FieldNode } from '../ipc/metadata/message.js';\n\n/** @ignore */\nexport interface VectorLoader extends Visitor {\n    visit<T extends DataType>(node: Field<T> | T): Data<T>;\n    visitMany<T extends DataType>(nodes: (Field<T> | T)[]): Data<T>[];\n}\n\n/** @ignore */\nexport class VectorLoader extends Visitor {\n    private bytes: Uint8Array;\n    private nodes: FieldNode[];\n    private nodesIndex = -1;\n    private buffers: BufferRegion[];\n    private buffersIndex = -1;\n    private dictionaries: Map<number, Vector<any>>;\n    constructor(bytes: Uint8Array, nodes: FieldNode[], buffers: BufferRegion[], dictionaries: Map<number, Vector<any>>) {\n        super();\n        this.bytes = bytes;\n        this.nodes = nodes;\n        this.buffers = buffers;\n        this.dictionaries = dictionaries;\n    }\n\n    public visit<T extends DataType>(node: Field<T> | T): Data<T> {\n        return super.visit(node instanceof Field ? node.type : node);\n    }\n\n    public visitNull<T extends type.Null>(type: T, { length } = this.nextFieldNode()) {\n        return makeData({ type, length });\n    }\n    public visitBool<T extends type.Bool>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    public visitInt<T extends type.Int>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    public visitFloat<T extends type.Float>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    public visitUtf8<T extends type.Utf8>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), valueOffsets: this.readOffsets(type), data: this.readData(type) });\n    }\n    public visitBinary<T extends type.Binary>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), valueOffsets: this.readOffsets(type), data: this.readData(type) });\n    }\n    public visitFixedSizeBinary<T extends type.FixedSizeBinary>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    public visitDate<T extends type.Date_>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    public visitTimestamp<T extends type.Timestamp>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    public visitTime<T extends type.Time>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    public visitDecimal<T extends type.Decimal>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    public visitList<T extends type.List>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), valueOffsets: this.readOffsets(type), 'child': this.visit(type.children[0]) });\n    }\n    public visitStruct<T extends type.Struct>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), children: this.visitMany(type.children) });\n    }\n    public visitUnion<T extends type.Union>(type: T) {\n        return type.mode === UnionMode.Sparse ? this.visitSparseUnion(type as type.SparseUnion) : this.visitDenseUnion(type as type.DenseUnion);\n    }\n    public visitDenseUnion<T extends type.DenseUnion>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), typeIds: this.readTypeIds(type), valueOffsets: this.readOffsets(type), children: this.visitMany(type.children) });\n    }\n    public visitSparseUnion<T extends type.SparseUnion>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), typeIds: this.readTypeIds(type), children: this.visitMany(type.children) });\n    }\n    public visitDictionary<T extends type.Dictionary>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type.indices), dictionary: this.readDictionary(type) });\n    }\n    public visitInterval<T extends type.Interval>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), data: this.readData(type) });\n    }\n    public visitFixedSizeList<T extends type.FixedSizeList>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), 'child': this.visit(type.children[0]) });\n    }\n    public visitMap<T extends type.Map_>(type: T, { length, nullCount } = this.nextFieldNode()) {\n        return makeData({ type, length, nullCount, nullBitmap: this.readNullBitmap(type, nullCount), valueOffsets: this.readOffsets(type), 'child': this.visit(type.children[0]) });\n    }\n\n    protected nextFieldNode() { return this.nodes[++this.nodesIndex]; }\n    protected nextBufferRange() { return this.buffers[++this.buffersIndex]; }\n    protected readNullBitmap<T extends DataType>(type: T, nullCount: number, buffer = this.nextBufferRange()) {\n        return nullCount > 0 && this.readData(type, buffer) || new Uint8Array(0);\n    }\n    protected readOffsets<T extends DataType>(type: T, buffer?: BufferRegion) { return this.readData(type, buffer); }\n    protected readTypeIds<T extends DataType>(type: T, buffer?: BufferRegion) { return this.readData(type, buffer); }\n    protected readData<T extends DataType>(_type: T, { length, offset } = this.nextBufferRange()) {\n        return this.bytes.subarray(offset, offset + length);\n    }\n    protected readDictionary<T extends type.Dictionary>(type: T): Vector<T['dictionary']> {\n        return this.dictionaries.get(type.id)!;\n    }\n}\n\n/** @ignore */\nexport class JSONVectorLoader extends VectorLoader {\n    private sources: any[][];\n    constructor(sources: any[][], nodes: FieldNode[], buffers: BufferRegion[], dictionaries: Map<number, Vector<any>>) {\n        super(new Uint8Array(0), nodes, buffers, dictionaries);\n        this.sources = sources;\n    }\n    protected readNullBitmap<T extends DataType>(_type: T, nullCount: number, { offset } = this.nextBufferRange()) {\n        return nullCount <= 0 ? new Uint8Array(0) : packBools(this.sources[offset]);\n    }\n    protected readOffsets<T extends DataType>(_type: T, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(Int32Array, this.sources[offset]));\n    }\n    protected readTypeIds<T extends DataType>(type: T, { offset } = this.nextBufferRange()) {\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, this.sources[offset]));\n    }\n    protected readData<T extends DataType>(type: T, { offset } = this.nextBufferRange()) {\n        const { sources } = this;\n        if (DataType.isTimestamp(type)) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if ((DataType.isInt(type) || DataType.isTime(type)) && type.bitWidth === 64) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if (DataType.isDate(type) && type.unit === DateUnit.MILLISECOND) {\n            return toArrayBufferView(Uint8Array, Int64.convertArray(sources[offset] as string[]));\n        } else if (DataType.isDecimal(type)) {\n            return toArrayBufferView(Uint8Array, Int128.convertArray(sources[offset] as string[]));\n        } else if (DataType.isBinary(type) || DataType.isFixedSizeBinary(type)) {\n            return binaryDataFromJSON(sources[offset] as string[]);\n        } else if (DataType.isBool(type)) {\n            return packBools(sources[offset] as number[]);\n        } else if (DataType.isUtf8(type)) {\n            return encodeUtf8((sources[offset] as string[]).join(''));\n        }\n        return toArrayBufferView(Uint8Array, toArrayBufferView(type.ArrayType, sources[offset].map((x) => +x)));\n    }\n}\n\n/** @ignore */\nfunction binaryDataFromJSON(values: string[]) {\n    // \"DATA\": [\"49BC7D5B6C47D2\",\"3F5FB6D9322026\"]\n    // There are definitely more efficient ways to do this... but it gets the\n    // job done.\n    const joined = values.join('');\n    const data = new Uint8Array(joined.length / 2);\n    for (let i = 0; i < joined.length; i += 2) {\n        data[i >> 1] = Number.parseInt(joined.slice(i, i + 2), 16);\n    }\n    return data;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}