{"ast":null,"code":"import _toConsumableArray from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _inherits from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _classCallCheck from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _createForOfIteratorHelper from \"C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport { refineProps, guid, parseBusinessHours, createEventUi, identity, parseClassNames, EventImpl, Splitter, parseFieldSpecs, BaseComponent, memoizeObjArg, ViewContextType, ContentContainer, formatDayString, memoize, NowTimer, TableDateCell, TableDowCell, computeFallbackHeaderFormat, mapHash, flexibleCompare, compareByFieldSpecs } from '@fullcalendar/core/internal.js';\nimport { createElement, Fragment } from '@fullcalendar/core/preact.js';\nvar PRIVATE_ID_PREFIX = '_fc:';\nvar RESOURCE_REFINERS = {\n  id: String,\n  parentId: String,\n  children: identity,\n  title: String,\n  businessHours: identity,\n  extendedProps: identity,\n  // event-ui\n  eventEditable: Boolean,\n  eventStartEditable: Boolean,\n  eventDurationEditable: Boolean,\n  eventConstraint: identity,\n  eventOverlap: Boolean,\n  eventAllow: identity,\n  eventClassNames: parseClassNames,\n  eventBackgroundColor: String,\n  eventBorderColor: String,\n  eventTextColor: String,\n  eventColor: String\n};\n/*\nneeds a full store so that it can populate children too\n*/\nfunction parseResource(raw) {\n  var parentId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var store = arguments.length > 2 ? arguments[2] : undefined;\n  var context = arguments.length > 3 ? arguments[3] : undefined;\n  var _refineProps = refineProps(raw, RESOURCE_REFINERS),\n    refined = _refineProps.refined,\n    extra = _refineProps.extra;\n  var resource = {\n    id: refined.id || PRIVATE_ID_PREFIX + guid(),\n    parentId: refined.parentId || parentId,\n    title: refined.title || '',\n    businessHours: refined.businessHours ? parseBusinessHours(refined.businessHours, context) : null,\n    ui: createEventUi({\n      editable: refined.eventEditable,\n      startEditable: refined.eventStartEditable,\n      durationEditable: refined.eventDurationEditable,\n      constraint: refined.eventConstraint,\n      overlap: refined.eventOverlap,\n      allow: refined.eventAllow,\n      classNames: refined.eventClassNames,\n      backgroundColor: refined.eventBackgroundColor,\n      borderColor: refined.eventBorderColor,\n      textColor: refined.eventTextColor,\n      color: refined.eventColor\n    }, context),\n    extendedProps: Object.assign(Object.assign({}, extra), refined.extendedProps)\n  };\n  // help out ResourceApi from having user modify props\n  Object.freeze(resource.ui.classNames);\n  Object.freeze(resource.extendedProps);\n  if (store[resource.id]) ;else {\n    store[resource.id] = resource;\n    if (refined.children) {\n      var _iterator = _createForOfIteratorHelper(refined.children),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var childInput = _step.value;\n          parseResource(childInput, resource.id, store, context);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }\n  return resource;\n}\n/*\nTODO: use this in more places\n*/\nfunction getPublicId(id) {\n  if (id.indexOf(PRIVATE_ID_PREFIX) === 0) {\n    return '';\n  }\n  return id;\n}\nvar ResourceApi = /*#__PURE__*/function () {\n  function ResourceApi(_context, _resource) {\n    _classCallCheck(this, ResourceApi);\n    this._context = _context;\n    this._resource = _resource;\n  }\n  _createClass(ResourceApi, [{\n    key: \"setProp\",\n    value: function setProp(name, value) {\n      var oldResource = this._resource;\n      this._context.dispatch({\n        type: 'SET_RESOURCE_PROP',\n        resourceId: oldResource.id,\n        propName: name,\n        propValue: value\n      });\n      this.sync(oldResource);\n    }\n  }, {\n    key: \"setExtendedProp\",\n    value: function setExtendedProp(name, value) {\n      var oldResource = this._resource;\n      this._context.dispatch({\n        type: 'SET_RESOURCE_EXTENDED_PROP',\n        resourceId: oldResource.id,\n        propName: name,\n        propValue: value\n      });\n      this.sync(oldResource);\n    }\n  }, {\n    key: \"sync\",\n    value: function sync(oldResource) {\n      var context = this._context;\n      var resourceId = oldResource.id;\n      // TODO: what if dispatch didn't complete synchronously?\n      this._resource = context.getCurrentData().resourceStore[resourceId];\n      context.emitter.trigger('resourceChange', {\n        oldResource: new ResourceApi(context, oldResource),\n        resource: this,\n        revert: function revert() {\n          context.dispatch({\n            type: 'ADD_RESOURCE',\n            resourceHash: _defineProperty({}, resourceId, oldResource)\n          });\n        }\n      });\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      var context = this._context;\n      var internalResource = this._resource;\n      var resourceId = internalResource.id;\n      context.dispatch({\n        type: 'REMOVE_RESOURCE',\n        resourceId: resourceId\n      });\n      context.emitter.trigger('resourceRemove', {\n        resource: this,\n        revert: function revert() {\n          context.dispatch({\n            type: 'ADD_RESOURCE',\n            resourceHash: _defineProperty({}, resourceId, internalResource)\n          });\n        }\n      });\n    }\n  }, {\n    key: \"getParent\",\n    value: function getParent() {\n      var context = this._context;\n      var parentId = this._resource.parentId;\n      if (parentId) {\n        return new ResourceApi(context, context.getCurrentData().resourceStore[parentId]);\n      }\n      return null;\n    }\n  }, {\n    key: \"getChildren\",\n    value: function getChildren() {\n      var thisResourceId = this._resource.id;\n      var context = this._context;\n      var _context$getCurrentDa = context.getCurrentData(),\n        resourceStore = _context$getCurrentDa.resourceStore;\n      var childApis = [];\n      for (var resourceId in resourceStore) {\n        if (resourceStore[resourceId].parentId === thisResourceId) {\n          childApis.push(new ResourceApi(context, resourceStore[resourceId]));\n        }\n      }\n      return childApis;\n    }\n    /*\n    this is really inefficient!\n    TODO: make EventApi::resourceIds a hash or keep an index in the Calendar's state\n    */\n  }, {\n    key: \"getEvents\",\n    value: function getEvents() {\n      var thisResourceId = this._resource.id;\n      var context = this._context;\n      var _context$getCurrentDa2 = context.getCurrentData().eventStore,\n        defs = _context$getCurrentDa2.defs,\n        instances = _context$getCurrentDa2.instances;\n      var eventApis = [];\n      for (var instanceId in instances) {\n        var instance = instances[instanceId];\n        var def = defs[instance.defId];\n        if (def.resourceIds.indexOf(thisResourceId) !== -1) {\n          // inefficient!!!\n          eventApis.push(new EventImpl(context, def, instance));\n        }\n      }\n      return eventApis;\n    }\n  }, {\n    key: \"id\",\n    get: function get() {\n      return getPublicId(this._resource.id);\n    }\n  }, {\n    key: \"title\",\n    get: function get() {\n      return this._resource.title;\n    }\n  }, {\n    key: \"eventConstraint\",\n    get: function get() {\n      return this._resource.ui.constraints[0] || null;\n    } // TODO: better type\n  }, {\n    key: \"eventOverlap\",\n    get: function get() {\n      return this._resource.ui.overlap;\n    }\n  }, {\n    key: \"eventAllow\",\n    get: function get() {\n      return this._resource.ui.allows[0] || null;\n    } // TODO: better type\n  }, {\n    key: \"eventBackgroundColor\",\n    get: function get() {\n      return this._resource.ui.backgroundColor;\n    }\n  }, {\n    key: \"eventBorderColor\",\n    get: function get() {\n      return this._resource.ui.borderColor;\n    }\n  }, {\n    key: \"eventTextColor\",\n    get: function get() {\n      return this._resource.ui.textColor;\n    }\n    // NOTE: user can't modify these because Object.freeze was called in event-def parsing\n  }, {\n    key: \"eventClassNames\",\n    get: function get() {\n      return this._resource.ui.classNames;\n    }\n  }, {\n    key: \"extendedProps\",\n    get: function get() {\n      return this._resource.extendedProps;\n    }\n  }, {\n    key: \"toPlainObject\",\n    value: function toPlainObject() {\n      var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var internal = this._resource;\n      var ui = internal.ui;\n      var publicId = this.id;\n      var res = {};\n      if (publicId) {\n        res.id = publicId;\n      }\n      if (internal.title) {\n        res.title = internal.title;\n      }\n      if (settings.collapseEventColor && ui.backgroundColor && ui.backgroundColor === ui.borderColor) {\n        res.eventColor = ui.backgroundColor;\n      } else {\n        if (ui.backgroundColor) {\n          res.eventBackgroundColor = ui.backgroundColor;\n        }\n        if (ui.borderColor) {\n          res.eventBorderColor = ui.borderColor;\n        }\n      }\n      if (ui.textColor) {\n        res.eventTextColor = ui.textColor;\n      }\n      if (ui.classNames.length) {\n        res.eventClassNames = ui.classNames;\n      }\n      if (Object.keys(internal.extendedProps).length) {\n        if (settings.collapseExtendedProps) {\n          Object.assign(res, internal.extendedProps);\n        } else {\n          res.extendedProps = internal.extendedProps;\n        }\n      }\n      return res;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.toPlainObject();\n    }\n  }]);\n  return ResourceApi;\n}();\nfunction buildResourceApis(resourceStore, context) {\n  var resourceApis = [];\n  for (var resourceId in resourceStore) {\n    resourceApis.push(new ResourceApi(context, resourceStore[resourceId]));\n  }\n  return resourceApis;\n}\n\n/*\nsplits things BASED OFF OF which resources they are associated with.\ncreates a '' entry which is when something has NO resource.\n*/\nvar ResourceSplitter = /*#__PURE__*/function (_Splitter) {\n  _inherits(ResourceSplitter, _Splitter);\n  var _super = _createSuper(ResourceSplitter);\n  function ResourceSplitter() {\n    _classCallCheck(this, ResourceSplitter);\n    return _super.apply(this, arguments);\n  }\n  _createClass(ResourceSplitter, [{\n    key: \"getKeyInfo\",\n    value: function getKeyInfo(props) {\n      return Object.assign({\n        '': {}\n      }, props.resourceStore);\n    }\n  }, {\n    key: \"getKeysForDateSpan\",\n    value: function getKeysForDateSpan(dateSpan) {\n      return [dateSpan.resourceId || ''];\n    }\n  }, {\n    key: \"getKeysForEventDef\",\n    value: function getKeysForEventDef(eventDef) {\n      var resourceIds = eventDef.resourceIds;\n      if (!resourceIds.length) {\n        return [''];\n      }\n      return resourceIds;\n    }\n  }]);\n  return ResourceSplitter;\n}(Splitter);\nvar DEFAULT_RESOURCE_ORDER = parseFieldSpecs('id,title');\nfunction handleResourceStore(resourceStore, calendarData) {\n  var emitter = calendarData.emitter;\n  if (emitter.hasHandlers('resourcesSet')) {\n    emitter.trigger('resourcesSet', buildResourceApis(resourceStore, calendarData));\n  }\n}\nfunction refineRenderProps$1(input) {\n  return {\n    resource: new ResourceApi(input.context, input.resource)\n  };\n}\n\n// TODO: not used for Spreadsheet. START USING. difficult because of col-specific rendering props\nvar ResourceLabelContainer = /*#__PURE__*/function (_BaseComponent) {\n  _inherits(ResourceLabelContainer, _BaseComponent);\n  var _super2 = _createSuper(ResourceLabelContainer);\n  function ResourceLabelContainer() {\n    var _this;\n    _classCallCheck(this, ResourceLabelContainer);\n    _this = _super2.apply(this, arguments);\n    _this.refineRenderProps = memoizeObjArg(refineRenderProps);\n    return _this;\n  }\n  _createClass(ResourceLabelContainer, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var props = this.props;\n      return createElement(ViewContextType.Consumer, null, function (context) {\n        var options = context.options;\n        var renderProps = _this2.refineRenderProps({\n          resource: props.resource,\n          date: props.date,\n          context: context\n        });\n        return createElement(ContentContainer, Object.assign({}, props, {\n          elAttrs: Object.assign(Object.assign({}, props.elAttrs), {\n            'data-resource-id': props.resource.id,\n            'data-date': props.date ? formatDayString(props.date) : undefined\n          }),\n          renderProps: renderProps,\n          generatorName: \"resourceLabelContent\",\n          customGenerator: options.resourceLabelContent,\n          defaultGenerator: renderInnerContent,\n          classNameGenerator: options.resourceLabelClassNames,\n          didMount: options.resourceLabelDidMount,\n          willUnmount: options.resourceLabelWillUnmount\n        }));\n      });\n    }\n  }]);\n  return ResourceLabelContainer;\n}(BaseComponent);\nfunction renderInnerContent(props) {\n  return props.resource.title || props.resource.id;\n}\nfunction refineRenderProps(input) {\n  return {\n    resource: new ResourceApi(input.context, input.resource),\n    date: input.date ? input.context.dateEnv.toDate(input.date) : null,\n    view: input.context.viewApi\n  };\n}\nvar ResourceCell = /*#__PURE__*/function (_BaseComponent2) {\n  _inherits(ResourceCell, _BaseComponent2);\n  var _super3 = _createSuper(ResourceCell);\n  function ResourceCell() {\n    _classCallCheck(this, ResourceCell);\n    return _super3.apply(this, arguments);\n  }\n  _createClass(ResourceCell, [{\n    key: \"render\",\n    value: function render() {\n      var props = this.props;\n      return createElement(ResourceLabelContainer, {\n        elTag: \"th\",\n        elClasses: ['fc-col-header-cell', 'fc-resource'],\n        elAttrs: {\n          role: 'columnheader',\n          colSpan: props.colSpan\n        },\n        resource: props.resource,\n        date: props.date\n      }, function (InnerContent) {\n        return createElement(\"div\", {\n          className: \"fc-scrollgrid-sync-inner\"\n        }, createElement(InnerContent, {\n          elTag: \"span\",\n          elClasses: ['fc-col-header-cell-cushion', props.isSticky && 'fc-sticky']\n        }));\n      });\n    }\n  }]);\n  return ResourceCell;\n}(BaseComponent);\nvar ResourceDayHeader = /*#__PURE__*/function (_BaseComponent3) {\n  _inherits(ResourceDayHeader, _BaseComponent3);\n  var _super4 = _createSuper(ResourceDayHeader);\n  function ResourceDayHeader() {\n    var _this3;\n    _classCallCheck(this, ResourceDayHeader);\n    _this3 = _super4.apply(this, arguments);\n    _this3.buildDateFormat = memoize(buildDateFormat);\n    return _this3;\n  }\n  _createClass(ResourceDayHeader, [{\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n      var props = this.props,\n        context = this.context;\n      var dateFormat = this.buildDateFormat(context.options.dayHeaderFormat, props.datesRepDistinctDays, props.dates.length);\n      return createElement(NowTimer, {\n        unit: \"day\"\n      }, function (nowDate, todayRange) {\n        if (props.dates.length === 1) {\n          return _this4.renderResourceRow(props.resources, props.dates[0]);\n        }\n        if (context.options.datesAboveResources) {\n          return _this4.renderDayAndResourceRows(props.dates, dateFormat, todayRange, props.resources);\n        }\n        return _this4.renderResourceAndDayRows(props.resources, props.dates, dateFormat, todayRange);\n      });\n    }\n  }, {\n    key: \"renderResourceRow\",\n    value: function renderResourceRow(resources, date) {\n      var resourceCells = resources.map(function (resource) {\n        return createElement(ResourceCell, {\n          key: resource.id,\n          resource: resource,\n          colSpan: 1,\n          date: date\n        });\n      });\n      return this.buildTr(resourceCells, 'resources');\n    }\n  }, {\n    key: \"renderDayAndResourceRows\",\n    value: function renderDayAndResourceRows(dates, dateFormat, todayRange, resources) {\n      var dateCells = [];\n      var resourceCells = [];\n      var _iterator2 = _createForOfIteratorHelper(dates),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var date = _step2.value;\n          dateCells.push(this.renderDateCell(date, dateFormat, todayRange, resources.length, null, true));\n          var _iterator3 = _createForOfIteratorHelper(resources),\n            _step3;\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var resource = _step3.value;\n              resourceCells.push(createElement(ResourceCell, {\n                key: resource.id + ':' + date.toISOString(),\n                resource: resource,\n                colSpan: 1,\n                date: date\n              }));\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      return createElement(Fragment, null, this.buildTr(dateCells, 'day'), this.buildTr(resourceCells, 'resources'));\n    }\n  }, {\n    key: \"renderResourceAndDayRows\",\n    value: function renderResourceAndDayRows(resources, dates, dateFormat, todayRange) {\n      var resourceCells = [];\n      var dateCells = [];\n      var _iterator4 = _createForOfIteratorHelper(resources),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var resource = _step4.value;\n          resourceCells.push(createElement(ResourceCell, {\n            key: resource.id,\n            resource: resource,\n            colSpan: dates.length,\n            isSticky: true\n          }));\n          var _iterator5 = _createForOfIteratorHelper(dates),\n            _step5;\n          try {\n            for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n              var date = _step5.value;\n              dateCells.push(this.renderDateCell(date, dateFormat, todayRange, 1, resource));\n            }\n          } catch (err) {\n            _iterator5.e(err);\n          } finally {\n            _iterator5.f();\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      return createElement(Fragment, null, this.buildTr(resourceCells, 'resources'), this.buildTr(dateCells, 'day'));\n    }\n    // a cell with date text. might have a resource associated with it\n  }, {\n    key: \"renderDateCell\",\n    value: function renderDateCell(date, dateFormat, todayRange, colSpan, resource, isSticky) {\n      var props = this.props;\n      var keyPostfix = resource ? \":\".concat(resource.id) : '';\n      var extraRenderProps = resource ? {\n        resource: new ResourceApi(this.context, resource)\n      } : {};\n      var extraDataAttrs = resource ? {\n        'data-resource-id': resource.id\n      } : {};\n      return props.datesRepDistinctDays ? createElement(TableDateCell, {\n        key: date.toISOString() + keyPostfix,\n        date: date,\n        dateProfile: props.dateProfile,\n        todayRange: todayRange,\n        colCnt: props.dates.length * props.resources.length,\n        dayHeaderFormat: dateFormat,\n        colSpan: colSpan,\n        isSticky: isSticky,\n        extraRenderProps: extraRenderProps,\n        extraDataAttrs: extraDataAttrs\n      }) : createElement(TableDowCell // we can't leverage the pure-componentness becausae the extra* props are new every time :(\n      , {\n        key: date.getUTCDay() + keyPostfix,\n        dow: date.getUTCDay(),\n        dayHeaderFormat: dateFormat,\n        colSpan: colSpan,\n        isSticky: isSticky,\n        extraRenderProps: extraRenderProps,\n        extraDataAttrs: extraDataAttrs\n      });\n    }\n  }, {\n    key: \"buildTr\",\n    value: function buildTr(cells, key) {\n      var renderIntro = this.props.renderIntro;\n      if (!cells.length) {\n        cells = [createElement(\"td\", {\n          key: 0\n        }, \"\\xA0\")];\n      }\n      return createElement(\"tr\", {\n        key: key,\n        role: \"row\"\n      }, renderIntro && renderIntro(key), cells);\n    }\n  }]);\n  return ResourceDayHeader;\n}(BaseComponent);\nfunction buildDateFormat(dayHeaderFormat, datesRepDistinctDays, dayCnt) {\n  return dayHeaderFormat || computeFallbackHeaderFormat(datesRepDistinctDays, dayCnt);\n}\nvar ResourceIndex = /*#__PURE__*/_createClass(function ResourceIndex(resources) {\n  _classCallCheck(this, ResourceIndex);\n  var indicesById = {};\n  var ids = [];\n  for (var i = 0; i < resources.length; i += 1) {\n    var id = resources[i].id;\n    ids.push(id);\n    indicesById[id] = i;\n  }\n  this.ids = ids;\n  this.indicesById = indicesById;\n  this.length = resources.length;\n});\nvar AbstractResourceDayTableModel = /*#__PURE__*/function () {\n  function AbstractResourceDayTableModel(dayTableModel, resources, context) {\n    _classCallCheck(this, AbstractResourceDayTableModel);\n    this.dayTableModel = dayTableModel;\n    this.resources = resources;\n    this.context = context;\n    this.resourceIndex = new ResourceIndex(resources);\n    this.rowCnt = dayTableModel.rowCnt;\n    this.colCnt = dayTableModel.colCnt * resources.length;\n    this.cells = this.buildCells();\n  }\n  _createClass(AbstractResourceDayTableModel, [{\n    key: \"buildCells\",\n    value: function buildCells() {\n      var rowCnt = this.rowCnt,\n        dayTableModel = this.dayTableModel,\n        resources = this.resources;\n      var rows = [];\n      for (var row = 0; row < rowCnt; row += 1) {\n        var rowCells = [];\n        for (var dateCol = 0; dateCol < dayTableModel.colCnt; dateCol += 1) {\n          for (var resourceCol = 0; resourceCol < resources.length; resourceCol += 1) {\n            var resource = resources[resourceCol];\n            var extraRenderProps = {\n              resource: new ResourceApi(this.context, resource)\n            };\n            var extraDataAttrs = {\n              'data-resource-id': resource.id\n            };\n            var extraClassNames = ['fc-resource'];\n            var extraDateSpan = {\n              resourceId: resource.id\n            };\n            var date = dayTableModel.cells[row][dateCol].date;\n            rowCells[this.computeCol(dateCol, resourceCol)] = {\n              key: resource.id + ':' + date.toISOString(),\n              date: date,\n              extraRenderProps: extraRenderProps,\n              extraDataAttrs: extraDataAttrs,\n              extraClassNames: extraClassNames,\n              extraDateSpan: extraDateSpan\n            };\n          }\n        }\n        rows.push(rowCells);\n      }\n      return rows;\n    }\n  }]);\n  return AbstractResourceDayTableModel;\n}();\n/*\nresources over dates\n*/\nvar ResourceDayTableModel = /*#__PURE__*/function (_AbstractResourceDayT) {\n  _inherits(ResourceDayTableModel, _AbstractResourceDayT);\n  var _super5 = _createSuper(ResourceDayTableModel);\n  function ResourceDayTableModel() {\n    _classCallCheck(this, ResourceDayTableModel);\n    return _super5.apply(this, arguments);\n  }\n  _createClass(ResourceDayTableModel, [{\n    key: \"computeCol\",\n    value: function computeCol(dateI, resourceI) {\n      return resourceI * this.dayTableModel.colCnt + dateI;\n    }\n    /*\n    all date ranges are intact\n    */\n  }, {\n    key: \"computeColRanges\",\n    value: function computeColRanges(dateStartI, dateEndI, resourceI) {\n      return [{\n        firstCol: this.computeCol(dateStartI, resourceI),\n        lastCol: this.computeCol(dateEndI, resourceI),\n        isStart: true,\n        isEnd: true\n      }];\n    }\n  }]);\n  return ResourceDayTableModel;\n}(AbstractResourceDayTableModel);\n/*\ndates over resources\n*/\nvar DayResourceTableModel = /*#__PURE__*/function (_AbstractResourceDayT2) {\n  _inherits(DayResourceTableModel, _AbstractResourceDayT2);\n  var _super6 = _createSuper(DayResourceTableModel);\n  function DayResourceTableModel() {\n    _classCallCheck(this, DayResourceTableModel);\n    return _super6.apply(this, arguments);\n  }\n  _createClass(DayResourceTableModel, [{\n    key: \"computeCol\",\n    value: function computeCol(dateI, resourceI) {\n      return dateI * this.resources.length + resourceI;\n    }\n    /*\n    every single day is broken up\n    */\n  }, {\n    key: \"computeColRanges\",\n    value: function computeColRanges(dateStartI, dateEndI, resourceI) {\n      var segs = [];\n      for (var i = dateStartI; i <= dateEndI; i += 1) {\n        var col = this.computeCol(i, resourceI);\n        segs.push({\n          firstCol: col,\n          lastCol: col,\n          isStart: i === dateStartI,\n          isEnd: i === dateEndI\n        });\n      }\n      return segs;\n    }\n  }]);\n  return DayResourceTableModel;\n}(AbstractResourceDayTableModel);\nvar NO_SEGS = []; // for memoizing\nvar VResourceJoiner = /*#__PURE__*/function () {\n  function VResourceJoiner() {\n    _classCallCheck(this, VResourceJoiner);\n    this.joinDateSelection = memoize(this.joinSegs);\n    this.joinBusinessHours = memoize(this.joinSegs);\n    this.joinFgEvents = memoize(this.joinSegs);\n    this.joinBgEvents = memoize(this.joinSegs);\n    this.joinEventDrags = memoize(this.joinInteractions);\n    this.joinEventResizes = memoize(this.joinInteractions);\n  }\n  /*\n  propSets also has a '' key for things with no resource\n  */\n  _createClass(VResourceJoiner, [{\n    key: \"joinProps\",\n    value: function joinProps(propSets, resourceDayTable) {\n      var dateSelectionSets = [];\n      var businessHoursSets = [];\n      var fgEventSets = [];\n      var bgEventSets = [];\n      var eventDrags = [];\n      var eventResizes = [];\n      var eventSelection = '';\n      var keys = resourceDayTable.resourceIndex.ids.concat(['']); // add in the all-resource key\n      var _iterator6 = _createForOfIteratorHelper(keys),\n        _step6;\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var key = _step6.value;\n          var props = propSets[key];\n          dateSelectionSets.push(props.dateSelectionSegs);\n          businessHoursSets.push(key ? props.businessHourSegs : NO_SEGS); // don't include redundant all-resource businesshours\n          fgEventSets.push(key ? props.fgEventSegs : NO_SEGS); // don't include fg all-resource segs\n          bgEventSets.push(props.bgEventSegs);\n          eventDrags.push(props.eventDrag);\n          eventResizes.push(props.eventResize);\n          eventSelection = eventSelection || props.eventSelection;\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n      return {\n        dateSelectionSegs: this.joinDateSelection.apply(this, [resourceDayTable].concat(dateSelectionSets)),\n        businessHourSegs: this.joinBusinessHours.apply(this, [resourceDayTable].concat(businessHoursSets)),\n        fgEventSegs: this.joinFgEvents.apply(this, [resourceDayTable].concat(fgEventSets)),\n        bgEventSegs: this.joinBgEvents.apply(this, [resourceDayTable].concat(bgEventSets)),\n        eventDrag: this.joinEventDrags.apply(this, [resourceDayTable].concat(eventDrags)),\n        eventResize: this.joinEventResizes.apply(this, [resourceDayTable].concat(eventResizes)),\n        eventSelection: eventSelection\n      };\n    }\n  }, {\n    key: \"joinSegs\",\n    value: function joinSegs(resourceDayTable) {\n      var resourceCnt = resourceDayTable.resources.length;\n      var transformedSegs = [];\n      for (var _len = arguments.length, segGroups = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        segGroups[_key - 1] = arguments[_key];\n      }\n      for (var i = 0; i < resourceCnt; i += 1) {\n        var _iterator7 = _createForOfIteratorHelper(segGroups[i]),\n          _step7;\n        try {\n          for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n            var seg = _step7.value;\n            transformedSegs.push.apply(transformedSegs, _toConsumableArray(this.transformSeg(seg, resourceDayTable, i)));\n          }\n        } catch (err) {\n          _iterator7.e(err);\n        } finally {\n          _iterator7.f();\n        }\n        var _iterator8 = _createForOfIteratorHelper(segGroups[resourceCnt]),\n          _step8;\n        try {\n          for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n            var _seg = _step8.value;\n            // one beyond. the all-resource\n            transformedSegs.push.apply(transformedSegs, _toConsumableArray(this.transformSeg(_seg, resourceDayTable, i)));\n          }\n        } catch (err) {\n          _iterator8.e(err);\n        } finally {\n          _iterator8.f();\n        }\n      }\n      return transformedSegs;\n    }\n    /*\n    for expanding non-resource segs to all resources.\n    only for public use.\n    no memoizing.\n    */\n  }, {\n    key: \"expandSegs\",\n    value: function expandSegs(resourceDayTable, segs) {\n      var resourceCnt = resourceDayTable.resources.length;\n      var transformedSegs = [];\n      for (var i = 0; i < resourceCnt; i += 1) {\n        var _iterator9 = _createForOfIteratorHelper(segs),\n          _step9;\n        try {\n          for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n            var seg = _step9.value;\n            transformedSegs.push.apply(transformedSegs, _toConsumableArray(this.transformSeg(seg, resourceDayTable, i)));\n          }\n        } catch (err) {\n          _iterator9.e(err);\n        } finally {\n          _iterator9.f();\n        }\n      }\n      return transformedSegs;\n    }\n  }, {\n    key: \"joinInteractions\",\n    value: function joinInteractions(resourceDayTable) {\n      var resourceCnt = resourceDayTable.resources.length;\n      var affectedInstances = {};\n      var transformedSegs = [];\n      var anyInteractions = false;\n      var isEvent = false;\n      for (var _len2 = arguments.length, interactions = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        interactions[_key2 - 1] = arguments[_key2];\n      }\n      for (var i = 0; i < resourceCnt; i += 1) {\n        var interaction = interactions[i];\n        if (interaction) {\n          anyInteractions = true;\n          var _iterator10 = _createForOfIteratorHelper(interaction.segs),\n            _step10;\n          try {\n            for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n              var seg = _step10.value;\n              transformedSegs.push.apply(transformedSegs, _toConsumableArray(this.transformSeg(seg, resourceDayTable, i)));\n            }\n          } catch (err) {\n            _iterator10.e(err);\n          } finally {\n            _iterator10.f();\n          }\n          Object.assign(affectedInstances, interaction.affectedInstances);\n          isEvent = isEvent || interaction.isEvent;\n        }\n        if (interactions[resourceCnt]) {\n          // one beyond. the all-resource\n          var _iterator11 = _createForOfIteratorHelper(interactions[resourceCnt].segs),\n            _step11;\n          try {\n            for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n              var _seg2 = _step11.value;\n              transformedSegs.push.apply(transformedSegs, _toConsumableArray(this.transformSeg(_seg2, resourceDayTable, i)));\n            }\n          } catch (err) {\n            _iterator11.e(err);\n          } finally {\n            _iterator11.f();\n          }\n        }\n      }\n      if (anyInteractions) {\n        return {\n          affectedInstances: affectedInstances,\n          segs: transformedSegs,\n          isEvent: isEvent\n        };\n      }\n      return null;\n    }\n  }]);\n  return VResourceJoiner;\n}();\n/*\nTODO: just use ResourceHash somehow? could then use the generic ResourceSplitter\n*/\nvar VResourceSplitter = /*#__PURE__*/function (_Splitter2) {\n  _inherits(VResourceSplitter, _Splitter2);\n  var _super7 = _createSuper(VResourceSplitter);\n  function VResourceSplitter() {\n    _classCallCheck(this, VResourceSplitter);\n    return _super7.apply(this, arguments);\n  }\n  _createClass(VResourceSplitter, [{\n    key: \"getKeyInfo\",\n    value: function getKeyInfo(props) {\n      var resourceDayTableModel = props.resourceDayTableModel;\n      var hash = mapHash(resourceDayTableModel.resourceIndex.indicesById, function (i) {\n        return resourceDayTableModel.resources[i];\n      }); // :(\n      hash[''] = {};\n      return hash;\n    }\n  }, {\n    key: \"getKeysForDateSpan\",\n    value: function getKeysForDateSpan(dateSpan) {\n      return [dateSpan.resourceId || ''];\n    }\n  }, {\n    key: \"getKeysForEventDef\",\n    value: function getKeysForEventDef(eventDef) {\n      var resourceIds = eventDef.resourceIds;\n      if (!resourceIds.length) {\n        return [''];\n      }\n      return resourceIds;\n    }\n  }]);\n  return VResourceSplitter;\n}(Splitter);\n/*\ndoesn't accept grouping\n*/\nfunction flattenResources(resourceStore, orderSpecs) {\n  return buildRowNodes(resourceStore, [], orderSpecs, false, {}, true).map(function (node) {\n    return node.resource;\n  });\n}\nfunction buildRowNodes(resourceStore, groupSpecs, orderSpecs, isVGrouping, expansions, expansionDefault) {\n  var complexNodes = buildHierarchy(resourceStore, isVGrouping ? -1 : 1, groupSpecs, orderSpecs);\n  var flatNodes = [];\n  flattenNodes(complexNodes, flatNodes, isVGrouping, [], 0, expansions, expansionDefault);\n  return flatNodes;\n}\nfunction flattenNodes(complexNodes, res, isVGrouping, rowSpans, depth, expansions, expansionDefault) {\n  for (var i = 0; i < complexNodes.length; i += 1) {\n    var complexNode = complexNodes[i];\n    var group = complexNode.group;\n    if (group) {\n      if (isVGrouping) {\n        var firstRowIndex = res.length;\n        var rowSpanIndex = rowSpans.length;\n        flattenNodes(complexNode.children, res, isVGrouping, rowSpans.concat(0), depth, expansions, expansionDefault);\n        if (firstRowIndex < res.length) {\n          var firstRow = res[firstRowIndex];\n          var firstRowSpans = firstRow.rowSpans = firstRow.rowSpans.slice();\n          firstRowSpans[rowSpanIndex] = res.length - firstRowIndex;\n        }\n      } else {\n        var id = group.spec.field + ':' + group.value;\n        var isExpanded = expansions[id] != null ? expansions[id] : expansionDefault;\n        res.push({\n          id: id,\n          group: group,\n          isExpanded: isExpanded\n        });\n        if (isExpanded) {\n          flattenNodes(complexNode.children, res, isVGrouping, rowSpans, depth + 1, expansions, expansionDefault);\n        }\n      }\n    } else if (complexNode.resource) {\n      var _id = complexNode.resource.id;\n      var _isExpanded = expansions[_id] != null ? expansions[_id] : expansionDefault;\n      res.push({\n        id: _id,\n        rowSpans: rowSpans,\n        depth: depth,\n        isExpanded: _isExpanded,\n        hasChildren: Boolean(complexNode.children.length),\n        resource: complexNode.resource,\n        resourceFields: complexNode.resourceFields\n      });\n      if (_isExpanded) {\n        flattenNodes(complexNode.children, res, isVGrouping, rowSpans, depth + 1, expansions, expansionDefault);\n      }\n    }\n  }\n}\nfunction buildHierarchy(resourceStore, maxDepth, groupSpecs, orderSpecs) {\n  var resourceNodes = buildResourceNodes(resourceStore, orderSpecs);\n  var builtNodes = [];\n  for (var resourceId in resourceNodes) {\n    var resourceNode = resourceNodes[resourceId];\n    if (!resourceNode.resource.parentId) {\n      insertResourceNode(resourceNode, builtNodes, groupSpecs, 0, maxDepth, orderSpecs);\n    }\n  }\n  return builtNodes;\n}\nfunction buildResourceNodes(resourceStore, orderSpecs) {\n  var nodeHash = {};\n  for (var resourceId in resourceStore) {\n    var resource = resourceStore[resourceId];\n    nodeHash[resourceId] = {\n      resource: resource,\n      resourceFields: buildResourceFields(resource),\n      children: []\n    };\n  }\n  for (var _resourceId in resourceStore) {\n    var _resource2 = resourceStore[_resourceId];\n    if (_resource2.parentId) {\n      var parentNode = nodeHash[_resource2.parentId];\n      if (parentNode) {\n        insertResourceNodeInSiblings(nodeHash[_resourceId], parentNode.children, orderSpecs);\n      }\n    }\n  }\n  return nodeHash;\n}\nfunction insertResourceNode(resourceNode, nodes, groupSpecs, depth, maxDepth, orderSpecs) {\n  if (groupSpecs.length && (maxDepth === -1 || depth <= maxDepth)) {\n    var groupNode = ensureGroupNodes(resourceNode, nodes, groupSpecs[0]);\n    insertResourceNode(resourceNode, groupNode.children, groupSpecs.slice(1), depth + 1, maxDepth, orderSpecs);\n  } else {\n    insertResourceNodeInSiblings(resourceNode, nodes, orderSpecs);\n  }\n}\nfunction ensureGroupNodes(resourceNode, nodes, groupSpec) {\n  var groupValue = resourceNode.resourceFields[groupSpec.field];\n  var groupNode;\n  var newGroupIndex;\n  // find an existing group that matches, or determine the position for a new group\n  if (groupSpec.order) {\n    for (newGroupIndex = 0; newGroupIndex < nodes.length; newGroupIndex += 1) {\n      var node = nodes[newGroupIndex];\n      if (node.group) {\n        var cmp = flexibleCompare(groupValue, node.group.value) * groupSpec.order;\n        if (cmp === 0) {\n          groupNode = node;\n          break;\n        } else if (cmp < 0) {\n          break;\n        }\n      }\n    }\n  } else {\n    // the groups are unordered\n    for (newGroupIndex = 0; newGroupIndex < nodes.length; newGroupIndex += 1) {\n      var _node = nodes[newGroupIndex];\n      if (_node.group && groupValue === _node.group.value) {\n        groupNode = _node;\n        break;\n      }\n    }\n  }\n  if (!groupNode) {\n    groupNode = {\n      group: {\n        value: groupValue,\n        spec: groupSpec\n      },\n      children: []\n    };\n    nodes.splice(newGroupIndex, 0, groupNode);\n  }\n  return groupNode;\n}\nfunction insertResourceNodeInSiblings(resourceNode, siblings, orderSpecs) {\n  var i;\n  for (i = 0; i < siblings.length; i += 1) {\n    var cmp = compareByFieldSpecs(siblings[i].resourceFields, resourceNode.resourceFields, orderSpecs); // TODO: pass in ResourceApi?\n    if (cmp > 0) {\n      // went 1 past. insert at i\n      break;\n    }\n  }\n  siblings.splice(i, 0, resourceNode);\n}\nfunction buildResourceFields(resource) {\n  var obj = Object.assign(Object.assign(Object.assign({}, resource.extendedProps), resource.ui), resource);\n  delete obj.ui;\n  delete obj.extendedProps;\n  return obj;\n}\nfunction isGroupsEqual(group0, group1) {\n  return group0.spec === group1.spec && group0.value === group1.value;\n}\nexport { AbstractResourceDayTableModel as A, DEFAULT_RESOURCE_ORDER as D, ResourceApi as R, VResourceJoiner as V, ResourceSplitter as a, ResourceDayHeader as b, ResourceDayTableModel as c, DayResourceTableModel as d, VResourceSplitter as e, flattenResources as f, getPublicId as g, handleResourceStore as h, isGroupsEqual as i, buildRowNodes as j, buildResourceFields as k, ResourceLabelContainer as l, parseResource as p, refineRenderProps$1 as r };","map":{"version":3,"names":["refineProps","guid","parseBusinessHours","createEventUi","identity","parseClassNames","EventImpl","Splitter","parseFieldSpecs","BaseComponent","memoizeObjArg","ViewContextType","ContentContainer","formatDayString","memoize","NowTimer","TableDateCell","TableDowCell","computeFallbackHeaderFormat","mapHash","flexibleCompare","compareByFieldSpecs","createElement","Fragment","PRIVATE_ID_PREFIX","RESOURCE_REFINERS","id","String","parentId","children","title","businessHours","extendedProps","eventEditable","Boolean","eventStartEditable","eventDurationEditable","eventConstraint","eventOverlap","eventAllow","eventClassNames","eventBackgroundColor","eventBorderColor","eventTextColor","eventColor","parseResource","raw","arguments","length","undefined","store","context","_refineProps","refined","extra","resource","ui","editable","startEditable","durationEditable","constraint","overlap","allow","classNames","backgroundColor","borderColor","textColor","color","Object","assign","freeze","_iterator","_createForOfIteratorHelper","_step","s","n","done","childInput","value","err","e","f","getPublicId","indexOf","ResourceApi","_context","_resource","_classCallCheck","_createClass","key","setProp","name","oldResource","dispatch","type","resourceId","propName","propValue","sync","setExtendedProp","getCurrentData","resourceStore","emitter","trigger","revert","resourceHash","_defineProperty","remove","internalResource","getParent","getChildren","thisResourceId","_context$getCurrentDa","childApis","push","getEvents","_context$getCurrentDa2","eventStore","defs","instances","eventApis","instanceId","instance","def","defId","resourceIds","get","constraints","allows","toPlainObject","settings","internal","publicId","res","collapseEventColor","keys","collapseExtendedProps","toJSON","buildResourceApis","resourceApis","ResourceSplitter","_Splitter","_inherits","_super","_createSuper","apply","getKeyInfo","props","getKeysForDateSpan","dateSpan","getKeysForEventDef","eventDef","DEFAULT_RESOURCE_ORDER","handleResourceStore","calendarData","hasHandlers","refineRenderProps$1","input","ResourceLabelContainer","_BaseComponent","_super2","_this","refineRenderProps","render","_this2","Consumer","options","renderProps","date","elAttrs","generatorName","customGenerator","resourceLabelContent","defaultGenerator","renderInnerContent","classNameGenerator","resourceLabelClassNames","didMount","resourceLabelDidMount","willUnmount","resourceLabelWillUnmount","dateEnv","toDate","view","viewApi","ResourceCell","_BaseComponent2","_super3","elTag","elClasses","role","colSpan","InnerContent","className","isSticky","ResourceDayHeader","_BaseComponent3","_super4","_this3","buildDateFormat","_this4","dateFormat","dayHeaderFormat","datesRepDistinctDays","dates","unit","nowDate","todayRange","renderResourceRow","resources","datesAboveResources","renderDayAndResourceRows","renderResourceAndDayRows","resourceCells","map","buildTr","dateCells","_iterator2","_step2","renderDateCell","_iterator3","_step3","toISOString","_iterator4","_step4","_iterator5","_step5","keyPostfix","concat","extraRenderProps","extraDataAttrs","dateProfile","colCnt","getUTCDay","dow","cells","renderIntro","dayCnt","ResourceIndex","indicesById","ids","i","AbstractResourceDayTableModel","dayTableModel","resourceIndex","rowCnt","buildCells","rows","row","rowCells","dateCol","resourceCol","extraClassNames","extraDateSpan","computeCol","ResourceDayTableModel","_AbstractResourceDayT","_super5","dateI","resourceI","computeColRanges","dateStartI","dateEndI","firstCol","lastCol","isStart","isEnd","DayResourceTableModel","_AbstractResourceDayT2","_super6","segs","col","NO_SEGS","VResourceJoiner","joinDateSelection","joinSegs","joinBusinessHours","joinFgEvents","joinBgEvents","joinEventDrags","joinInteractions","joinEventResizes","joinProps","propSets","resourceDayTable","dateSelectionSets","businessHoursSets","fgEventSets","bgEventSets","eventDrags","eventResizes","eventSelection","_iterator6","_step6","dateSelectionSegs","businessHourSegs","fgEventSegs","bgEventSegs","eventDrag","eventResize","resourceCnt","transformedSegs","_len","segGroups","Array","_key","_iterator7","_step7","seg","_toConsumableArray","transformSeg","_iterator8","_step8","expandSegs","_iterator9","_step9","affectedInstances","anyInteractions","isEvent","_len2","interactions","_key2","interaction","_iterator10","_step10","_iterator11","_step11","VResourceSplitter","_Splitter2","_super7","resourceDayTableModel","hash","flattenResources","orderSpecs","buildRowNodes","node","groupSpecs","isVGrouping","expansions","expansionDefault","complexNodes","buildHierarchy","flatNodes","flattenNodes","rowSpans","depth","complexNode","group","firstRowIndex","rowSpanIndex","firstRow","firstRowSpans","slice","spec","field","isExpanded","hasChildren","resourceFields","maxDepth","resourceNodes","buildResourceNodes","builtNodes","resourceNode","insertResourceNode","nodeHash","buildResourceFields","parentNode","insertResourceNodeInSiblings","nodes","groupNode","ensureGroupNodes","groupSpec","groupValue","newGroupIndex","order","cmp","splice","siblings","obj","isGroupsEqual","group0","group1","A","D","R","V","a","b","c","d","g","h","j","k","l","p","r"],"sources":["C:/Users/erden/OneDrive/Documents/GitHub/techclubsite/streamlit_calendar/frontend/node_modules/@fullcalendar/resource/internal-common.js"],"sourcesContent":["import { refineProps, guid, parseBusinessHours, createEventUi, identity, parseClassNames, EventImpl, Splitter, parseFieldSpecs, BaseComponent, memoizeObjArg, ViewContextType, ContentContainer, formatDayString, memoize, NowTimer, TableDateCell, TableDowCell, computeFallbackHeaderFormat, mapHash, flexibleCompare, compareByFieldSpecs } from '@fullcalendar/core/internal.js';\nimport { createElement, Fragment } from '@fullcalendar/core/preact.js';\n\nconst PRIVATE_ID_PREFIX = '_fc:';\nconst RESOURCE_REFINERS = {\n    id: String,\n    parentId: String,\n    children: identity,\n    title: String,\n    businessHours: identity,\n    extendedProps: identity,\n    // event-ui\n    eventEditable: Boolean,\n    eventStartEditable: Boolean,\n    eventDurationEditable: Boolean,\n    eventConstraint: identity,\n    eventOverlap: Boolean,\n    eventAllow: identity,\n    eventClassNames: parseClassNames,\n    eventBackgroundColor: String,\n    eventBorderColor: String,\n    eventTextColor: String,\n    eventColor: String,\n};\n/*\nneeds a full store so that it can populate children too\n*/\nfunction parseResource(raw, parentId = '', store, context) {\n    let { refined, extra } = refineProps(raw, RESOURCE_REFINERS);\n    let resource = {\n        id: refined.id || (PRIVATE_ID_PREFIX + guid()),\n        parentId: refined.parentId || parentId,\n        title: refined.title || '',\n        businessHours: refined.businessHours ? parseBusinessHours(refined.businessHours, context) : null,\n        ui: createEventUi({\n            editable: refined.eventEditable,\n            startEditable: refined.eventStartEditable,\n            durationEditable: refined.eventDurationEditable,\n            constraint: refined.eventConstraint,\n            overlap: refined.eventOverlap,\n            allow: refined.eventAllow,\n            classNames: refined.eventClassNames,\n            backgroundColor: refined.eventBackgroundColor,\n            borderColor: refined.eventBorderColor,\n            textColor: refined.eventTextColor,\n            color: refined.eventColor,\n        }, context),\n        extendedProps: Object.assign(Object.assign({}, extra), refined.extendedProps),\n    };\n    // help out ResourceApi from having user modify props\n    Object.freeze(resource.ui.classNames);\n    Object.freeze(resource.extendedProps);\n    if (store[resource.id]) ;\n    else {\n        store[resource.id] = resource;\n        if (refined.children) {\n            for (let childInput of refined.children) {\n                parseResource(childInput, resource.id, store, context);\n            }\n        }\n    }\n    return resource;\n}\n/*\nTODO: use this in more places\n*/\nfunction getPublicId(id) {\n    if (id.indexOf(PRIVATE_ID_PREFIX) === 0) {\n        return '';\n    }\n    return id;\n}\n\nclass ResourceApi {\n    constructor(_context, _resource) {\n        this._context = _context;\n        this._resource = _resource;\n    }\n    setProp(name, value) {\n        let oldResource = this._resource;\n        this._context.dispatch({\n            type: 'SET_RESOURCE_PROP',\n            resourceId: oldResource.id,\n            propName: name,\n            propValue: value,\n        });\n        this.sync(oldResource);\n    }\n    setExtendedProp(name, value) {\n        let oldResource = this._resource;\n        this._context.dispatch({\n            type: 'SET_RESOURCE_EXTENDED_PROP',\n            resourceId: oldResource.id,\n            propName: name,\n            propValue: value,\n        });\n        this.sync(oldResource);\n    }\n    sync(oldResource) {\n        let context = this._context;\n        let resourceId = oldResource.id;\n        // TODO: what if dispatch didn't complete synchronously?\n        this._resource = context.getCurrentData().resourceStore[resourceId];\n        context.emitter.trigger('resourceChange', {\n            oldResource: new ResourceApi(context, oldResource),\n            resource: this,\n            revert() {\n                context.dispatch({\n                    type: 'ADD_RESOURCE',\n                    resourceHash: {\n                        [resourceId]: oldResource,\n                    },\n                });\n            },\n        });\n    }\n    remove() {\n        let context = this._context;\n        let internalResource = this._resource;\n        let resourceId = internalResource.id;\n        context.dispatch({\n            type: 'REMOVE_RESOURCE',\n            resourceId,\n        });\n        context.emitter.trigger('resourceRemove', {\n            resource: this,\n            revert() {\n                context.dispatch({\n                    type: 'ADD_RESOURCE',\n                    resourceHash: {\n                        [resourceId]: internalResource,\n                    },\n                });\n            },\n        });\n    }\n    getParent() {\n        let context = this._context;\n        let parentId = this._resource.parentId;\n        if (parentId) {\n            return new ResourceApi(context, context.getCurrentData().resourceStore[parentId]);\n        }\n        return null;\n    }\n    getChildren() {\n        let thisResourceId = this._resource.id;\n        let context = this._context;\n        let { resourceStore } = context.getCurrentData();\n        let childApis = [];\n        for (let resourceId in resourceStore) {\n            if (resourceStore[resourceId].parentId === thisResourceId) {\n                childApis.push(new ResourceApi(context, resourceStore[resourceId]));\n            }\n        }\n        return childApis;\n    }\n    /*\n    this is really inefficient!\n    TODO: make EventApi::resourceIds a hash or keep an index in the Calendar's state\n    */\n    getEvents() {\n        let thisResourceId = this._resource.id;\n        let context = this._context;\n        let { defs, instances } = context.getCurrentData().eventStore;\n        let eventApis = [];\n        for (let instanceId in instances) {\n            let instance = instances[instanceId];\n            let def = defs[instance.defId];\n            if (def.resourceIds.indexOf(thisResourceId) !== -1) { // inefficient!!!\n                eventApis.push(new EventImpl(context, def, instance));\n            }\n        }\n        return eventApis;\n    }\n    get id() { return getPublicId(this._resource.id); }\n    get title() { return this._resource.title; }\n    get eventConstraint() { return this._resource.ui.constraints[0] || null; } // TODO: better type\n    get eventOverlap() { return this._resource.ui.overlap; }\n    get eventAllow() { return this._resource.ui.allows[0] || null; } // TODO: better type\n    get eventBackgroundColor() { return this._resource.ui.backgroundColor; }\n    get eventBorderColor() { return this._resource.ui.borderColor; }\n    get eventTextColor() { return this._resource.ui.textColor; }\n    // NOTE: user can't modify these because Object.freeze was called in event-def parsing\n    get eventClassNames() { return this._resource.ui.classNames; }\n    get extendedProps() { return this._resource.extendedProps; }\n    toPlainObject(settings = {}) {\n        let internal = this._resource;\n        let { ui } = internal;\n        let publicId = this.id;\n        let res = {};\n        if (publicId) {\n            res.id = publicId;\n        }\n        if (internal.title) {\n            res.title = internal.title;\n        }\n        if (settings.collapseEventColor && ui.backgroundColor && ui.backgroundColor === ui.borderColor) {\n            res.eventColor = ui.backgroundColor;\n        }\n        else {\n            if (ui.backgroundColor) {\n                res.eventBackgroundColor = ui.backgroundColor;\n            }\n            if (ui.borderColor) {\n                res.eventBorderColor = ui.borderColor;\n            }\n        }\n        if (ui.textColor) {\n            res.eventTextColor = ui.textColor;\n        }\n        if (ui.classNames.length) {\n            res.eventClassNames = ui.classNames;\n        }\n        if (Object.keys(internal.extendedProps).length) {\n            if (settings.collapseExtendedProps) {\n                Object.assign(res, internal.extendedProps);\n            }\n            else {\n                res.extendedProps = internal.extendedProps;\n            }\n        }\n        return res;\n    }\n    toJSON() {\n        return this.toPlainObject();\n    }\n}\nfunction buildResourceApis(resourceStore, context) {\n    let resourceApis = [];\n    for (let resourceId in resourceStore) {\n        resourceApis.push(new ResourceApi(context, resourceStore[resourceId]));\n    }\n    return resourceApis;\n}\n\n/*\nsplits things BASED OFF OF which resources they are associated with.\ncreates a '' entry which is when something has NO resource.\n*/\nclass ResourceSplitter extends Splitter {\n    getKeyInfo(props) {\n        return Object.assign({ '': {} }, props.resourceStore);\n    }\n    getKeysForDateSpan(dateSpan) {\n        return [dateSpan.resourceId || ''];\n    }\n    getKeysForEventDef(eventDef) {\n        let resourceIds = eventDef.resourceIds;\n        if (!resourceIds.length) {\n            return [''];\n        }\n        return resourceIds;\n    }\n}\n\nconst DEFAULT_RESOURCE_ORDER = parseFieldSpecs('id,title');\nfunction handleResourceStore(resourceStore, calendarData) {\n    let { emitter } = calendarData;\n    if (emitter.hasHandlers('resourcesSet')) {\n        emitter.trigger('resourcesSet', buildResourceApis(resourceStore, calendarData));\n    }\n}\n\nfunction refineRenderProps$1(input) {\n    return {\n        resource: new ResourceApi(input.context, input.resource),\n    };\n}\n\n// TODO: not used for Spreadsheet. START USING. difficult because of col-specific rendering props\nclass ResourceLabelContainer extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.refineRenderProps = memoizeObjArg(refineRenderProps);\n    }\n    render() {\n        const { props } = this;\n        return (createElement(ViewContextType.Consumer, null, (context) => {\n            let { options } = context;\n            let renderProps = this.refineRenderProps({\n                resource: props.resource,\n                date: props.date,\n                context,\n            });\n            return (createElement(ContentContainer, Object.assign({}, props, { elAttrs: Object.assign(Object.assign({}, props.elAttrs), { 'data-resource-id': props.resource.id, 'data-date': props.date ? formatDayString(props.date) : undefined }), renderProps: renderProps, generatorName: \"resourceLabelContent\", customGenerator: options.resourceLabelContent, defaultGenerator: renderInnerContent, classNameGenerator: options.resourceLabelClassNames, didMount: options.resourceLabelDidMount, willUnmount: options.resourceLabelWillUnmount })));\n        }));\n    }\n}\nfunction renderInnerContent(props) {\n    return props.resource.title || props.resource.id;\n}\nfunction refineRenderProps(input) {\n    return {\n        resource: new ResourceApi(input.context, input.resource),\n        date: input.date ? input.context.dateEnv.toDate(input.date) : null,\n        view: input.context.viewApi,\n    };\n}\n\nclass ResourceCell extends BaseComponent {\n    render() {\n        let { props } = this;\n        return (createElement(ResourceLabelContainer, { elTag: \"th\", elClasses: ['fc-col-header-cell', 'fc-resource'], elAttrs: {\n                role: 'columnheader',\n                colSpan: props.colSpan,\n            }, resource: props.resource, date: props.date }, (InnerContent) => (createElement(\"div\", { className: \"fc-scrollgrid-sync-inner\" },\n            createElement(InnerContent, { elTag: \"span\", elClasses: [\n                    'fc-col-header-cell-cushion',\n                    props.isSticky && 'fc-sticky',\n                ] })))));\n    }\n}\n\nclass ResourceDayHeader extends BaseComponent {\n    constructor() {\n        super(...arguments);\n        this.buildDateFormat = memoize(buildDateFormat);\n    }\n    render() {\n        let { props, context } = this;\n        let dateFormat = this.buildDateFormat(context.options.dayHeaderFormat, props.datesRepDistinctDays, props.dates.length);\n        return (createElement(NowTimer, { unit: \"day\" }, (nowDate, todayRange) => {\n            if (props.dates.length === 1) {\n                return this.renderResourceRow(props.resources, props.dates[0]);\n            }\n            if (context.options.datesAboveResources) {\n                return this.renderDayAndResourceRows(props.dates, dateFormat, todayRange, props.resources);\n            }\n            return this.renderResourceAndDayRows(props.resources, props.dates, dateFormat, todayRange);\n        }));\n    }\n    renderResourceRow(resources, date) {\n        let resourceCells = resources.map((resource) => (createElement(ResourceCell, { key: resource.id, resource: resource, colSpan: 1, date: date })));\n        return this.buildTr(resourceCells, 'resources');\n    }\n    renderDayAndResourceRows(dates, dateFormat, todayRange, resources) {\n        let dateCells = [];\n        let resourceCells = [];\n        for (let date of dates) {\n            dateCells.push(this.renderDateCell(date, dateFormat, todayRange, resources.length, null, true));\n            for (let resource of resources) {\n                resourceCells.push(createElement(ResourceCell, { key: resource.id + ':' + date.toISOString(), resource: resource, colSpan: 1, date: date }));\n            }\n        }\n        return (createElement(Fragment, null,\n            this.buildTr(dateCells, 'day'),\n            this.buildTr(resourceCells, 'resources')));\n    }\n    renderResourceAndDayRows(resources, dates, dateFormat, todayRange) {\n        let resourceCells = [];\n        let dateCells = [];\n        for (let resource of resources) {\n            resourceCells.push(createElement(ResourceCell, { key: resource.id, resource: resource, colSpan: dates.length, isSticky: true }));\n            for (let date of dates) {\n                dateCells.push(this.renderDateCell(date, dateFormat, todayRange, 1, resource));\n            }\n        }\n        return (createElement(Fragment, null,\n            this.buildTr(resourceCells, 'resources'),\n            this.buildTr(dateCells, 'day')));\n    }\n    // a cell with date text. might have a resource associated with it\n    renderDateCell(date, dateFormat, todayRange, colSpan, resource, isSticky) {\n        let { props } = this;\n        let keyPostfix = resource ? `:${resource.id}` : '';\n        let extraRenderProps = resource ? { resource: new ResourceApi(this.context, resource) } : {};\n        let extraDataAttrs = resource ? { 'data-resource-id': resource.id } : {};\n        return props.datesRepDistinctDays ? (createElement(TableDateCell, { key: date.toISOString() + keyPostfix, date: date, dateProfile: props.dateProfile, todayRange: todayRange, colCnt: props.dates.length * props.resources.length, dayHeaderFormat: dateFormat, colSpan: colSpan, isSticky: isSticky, extraRenderProps: extraRenderProps, extraDataAttrs: extraDataAttrs })) : (createElement(TableDowCell // we can't leverage the pure-componentness becausae the extra* props are new every time :(\n        , { key: date.getUTCDay() + keyPostfix, dow: date.getUTCDay(), dayHeaderFormat: dateFormat, colSpan: colSpan, isSticky: isSticky, extraRenderProps: extraRenderProps, extraDataAttrs: extraDataAttrs }));\n    }\n    buildTr(cells, key) {\n        let { renderIntro } = this.props;\n        if (!cells.length) {\n            cells = [createElement(\"td\", { key: 0 }, \"\\u00A0\")];\n        }\n        return (createElement(\"tr\", { key: key, role: \"row\" },\n            renderIntro && renderIntro(key),\n            cells));\n    }\n}\nfunction buildDateFormat(dayHeaderFormat, datesRepDistinctDays, dayCnt) {\n    return dayHeaderFormat || computeFallbackHeaderFormat(datesRepDistinctDays, dayCnt);\n}\n\nclass ResourceIndex {\n    constructor(resources) {\n        let indicesById = {};\n        let ids = [];\n        for (let i = 0; i < resources.length; i += 1) {\n            let id = resources[i].id;\n            ids.push(id);\n            indicesById[id] = i;\n        }\n        this.ids = ids;\n        this.indicesById = indicesById;\n        this.length = resources.length;\n    }\n}\n\nclass AbstractResourceDayTableModel {\n    constructor(dayTableModel, resources, context) {\n        this.dayTableModel = dayTableModel;\n        this.resources = resources;\n        this.context = context;\n        this.resourceIndex = new ResourceIndex(resources);\n        this.rowCnt = dayTableModel.rowCnt;\n        this.colCnt = dayTableModel.colCnt * resources.length;\n        this.cells = this.buildCells();\n    }\n    buildCells() {\n        let { rowCnt, dayTableModel, resources } = this;\n        let rows = [];\n        for (let row = 0; row < rowCnt; row += 1) {\n            let rowCells = [];\n            for (let dateCol = 0; dateCol < dayTableModel.colCnt; dateCol += 1) {\n                for (let resourceCol = 0; resourceCol < resources.length; resourceCol += 1) {\n                    let resource = resources[resourceCol];\n                    let extraRenderProps = { resource: new ResourceApi(this.context, resource) };\n                    let extraDataAttrs = { 'data-resource-id': resource.id };\n                    let extraClassNames = ['fc-resource'];\n                    let extraDateSpan = { resourceId: resource.id };\n                    let date = dayTableModel.cells[row][dateCol].date;\n                    rowCells[this.computeCol(dateCol, resourceCol)] = {\n                        key: resource.id + ':' + date.toISOString(),\n                        date,\n                        extraRenderProps,\n                        extraDataAttrs,\n                        extraClassNames,\n                        extraDateSpan,\n                    };\n                }\n            }\n            rows.push(rowCells);\n        }\n        return rows;\n    }\n}\n\n/*\nresources over dates\n*/\nclass ResourceDayTableModel extends AbstractResourceDayTableModel {\n    computeCol(dateI, resourceI) {\n        return resourceI * this.dayTableModel.colCnt + dateI;\n    }\n    /*\n    all date ranges are intact\n    */\n    computeColRanges(dateStartI, dateEndI, resourceI) {\n        return [\n            {\n                firstCol: this.computeCol(dateStartI, resourceI),\n                lastCol: this.computeCol(dateEndI, resourceI),\n                isStart: true,\n                isEnd: true,\n            },\n        ];\n    }\n}\n\n/*\ndates over resources\n*/\nclass DayResourceTableModel extends AbstractResourceDayTableModel {\n    computeCol(dateI, resourceI) {\n        return dateI * this.resources.length + resourceI;\n    }\n    /*\n    every single day is broken up\n    */\n    computeColRanges(dateStartI, dateEndI, resourceI) {\n        let segs = [];\n        for (let i = dateStartI; i <= dateEndI; i += 1) {\n            let col = this.computeCol(i, resourceI);\n            segs.push({\n                firstCol: col,\n                lastCol: col,\n                isStart: i === dateStartI,\n                isEnd: i === dateEndI,\n            });\n        }\n        return segs;\n    }\n}\n\nconst NO_SEGS = []; // for memoizing\nclass VResourceJoiner {\n    constructor() {\n        this.joinDateSelection = memoize(this.joinSegs);\n        this.joinBusinessHours = memoize(this.joinSegs);\n        this.joinFgEvents = memoize(this.joinSegs);\n        this.joinBgEvents = memoize(this.joinSegs);\n        this.joinEventDrags = memoize(this.joinInteractions);\n        this.joinEventResizes = memoize(this.joinInteractions);\n    }\n    /*\n    propSets also has a '' key for things with no resource\n    */\n    joinProps(propSets, resourceDayTable) {\n        let dateSelectionSets = [];\n        let businessHoursSets = [];\n        let fgEventSets = [];\n        let bgEventSets = [];\n        let eventDrags = [];\n        let eventResizes = [];\n        let eventSelection = '';\n        let keys = resourceDayTable.resourceIndex.ids.concat(['']); // add in the all-resource key\n        for (let key of keys) {\n            let props = propSets[key];\n            dateSelectionSets.push(props.dateSelectionSegs);\n            businessHoursSets.push(key ? props.businessHourSegs : NO_SEGS); // don't include redundant all-resource businesshours\n            fgEventSets.push(key ? props.fgEventSegs : NO_SEGS); // don't include fg all-resource segs\n            bgEventSets.push(props.bgEventSegs);\n            eventDrags.push(props.eventDrag);\n            eventResizes.push(props.eventResize);\n            eventSelection = eventSelection || props.eventSelection;\n        }\n        return {\n            dateSelectionSegs: this.joinDateSelection(resourceDayTable, ...dateSelectionSets),\n            businessHourSegs: this.joinBusinessHours(resourceDayTable, ...businessHoursSets),\n            fgEventSegs: this.joinFgEvents(resourceDayTable, ...fgEventSets),\n            bgEventSegs: this.joinBgEvents(resourceDayTable, ...bgEventSets),\n            eventDrag: this.joinEventDrags(resourceDayTable, ...eventDrags),\n            eventResize: this.joinEventResizes(resourceDayTable, ...eventResizes),\n            eventSelection,\n        };\n    }\n    joinSegs(resourceDayTable, ...segGroups) {\n        let resourceCnt = resourceDayTable.resources.length;\n        let transformedSegs = [];\n        for (let i = 0; i < resourceCnt; i += 1) {\n            for (let seg of segGroups[i]) {\n                transformedSegs.push(...this.transformSeg(seg, resourceDayTable, i));\n            }\n            for (let seg of segGroups[resourceCnt]) { // one beyond. the all-resource\n                transformedSegs.push(...this.transformSeg(seg, resourceDayTable, i));\n            }\n        }\n        return transformedSegs;\n    }\n    /*\n    for expanding non-resource segs to all resources.\n    only for public use.\n    no memoizing.\n    */\n    expandSegs(resourceDayTable, segs) {\n        let resourceCnt = resourceDayTable.resources.length;\n        let transformedSegs = [];\n        for (let i = 0; i < resourceCnt; i += 1) {\n            for (let seg of segs) {\n                transformedSegs.push(...this.transformSeg(seg, resourceDayTable, i));\n            }\n        }\n        return transformedSegs;\n    }\n    joinInteractions(resourceDayTable, ...interactions) {\n        let resourceCnt = resourceDayTable.resources.length;\n        let affectedInstances = {};\n        let transformedSegs = [];\n        let anyInteractions = false;\n        let isEvent = false;\n        for (let i = 0; i < resourceCnt; i += 1) {\n            let interaction = interactions[i];\n            if (interaction) {\n                anyInteractions = true;\n                for (let seg of interaction.segs) {\n                    transformedSegs.push(...this.transformSeg(seg, resourceDayTable, i));\n                }\n                Object.assign(affectedInstances, interaction.affectedInstances);\n                isEvent = isEvent || interaction.isEvent;\n            }\n            if (interactions[resourceCnt]) { // one beyond. the all-resource\n                for (let seg of interactions[resourceCnt].segs) {\n                    transformedSegs.push(...this.transformSeg(seg, resourceDayTable, i));\n                }\n            }\n        }\n        if (anyInteractions) {\n            return {\n                affectedInstances,\n                segs: transformedSegs,\n                isEvent,\n            };\n        }\n        return null;\n    }\n}\n\n/*\nTODO: just use ResourceHash somehow? could then use the generic ResourceSplitter\n*/\nclass VResourceSplitter extends Splitter {\n    getKeyInfo(props) {\n        let { resourceDayTableModel } = props;\n        let hash = mapHash(resourceDayTableModel.resourceIndex.indicesById, (i) => resourceDayTableModel.resources[i]); // :(\n        hash[''] = {};\n        return hash;\n    }\n    getKeysForDateSpan(dateSpan) {\n        return [dateSpan.resourceId || ''];\n    }\n    getKeysForEventDef(eventDef) {\n        let resourceIds = eventDef.resourceIds;\n        if (!resourceIds.length) {\n            return [''];\n        }\n        return resourceIds;\n    }\n}\n\n/*\ndoesn't accept grouping\n*/\nfunction flattenResources(resourceStore, orderSpecs) {\n    return buildRowNodes(resourceStore, [], orderSpecs, false, {}, true)\n        .map((node) => node.resource);\n}\nfunction buildRowNodes(resourceStore, groupSpecs, orderSpecs, isVGrouping, expansions, expansionDefault) {\n    let complexNodes = buildHierarchy(resourceStore, isVGrouping ? -1 : 1, groupSpecs, orderSpecs);\n    let flatNodes = [];\n    flattenNodes(complexNodes, flatNodes, isVGrouping, [], 0, expansions, expansionDefault);\n    return flatNodes;\n}\nfunction flattenNodes(complexNodes, res, isVGrouping, rowSpans, depth, expansions, expansionDefault) {\n    for (let i = 0; i < complexNodes.length; i += 1) {\n        let complexNode = complexNodes[i];\n        let group = complexNode.group;\n        if (group) {\n            if (isVGrouping) {\n                let firstRowIndex = res.length;\n                let rowSpanIndex = rowSpans.length;\n                flattenNodes(complexNode.children, res, isVGrouping, rowSpans.concat(0), depth, expansions, expansionDefault);\n                if (firstRowIndex < res.length) {\n                    let firstRow = res[firstRowIndex];\n                    let firstRowSpans = firstRow.rowSpans = firstRow.rowSpans.slice();\n                    firstRowSpans[rowSpanIndex] = res.length - firstRowIndex;\n                }\n            }\n            else {\n                let id = group.spec.field + ':' + group.value;\n                let isExpanded = expansions[id] != null ? expansions[id] : expansionDefault;\n                res.push({ id, group, isExpanded });\n                if (isExpanded) {\n                    flattenNodes(complexNode.children, res, isVGrouping, rowSpans, depth + 1, expansions, expansionDefault);\n                }\n            }\n        }\n        else if (complexNode.resource) {\n            let id = complexNode.resource.id;\n            let isExpanded = expansions[id] != null ? expansions[id] : expansionDefault;\n            res.push({\n                id,\n                rowSpans,\n                depth,\n                isExpanded,\n                hasChildren: Boolean(complexNode.children.length),\n                resource: complexNode.resource,\n                resourceFields: complexNode.resourceFields,\n            });\n            if (isExpanded) {\n                flattenNodes(complexNode.children, res, isVGrouping, rowSpans, depth + 1, expansions, expansionDefault);\n            }\n        }\n    }\n}\nfunction buildHierarchy(resourceStore, maxDepth, groupSpecs, orderSpecs) {\n    let resourceNodes = buildResourceNodes(resourceStore, orderSpecs);\n    let builtNodes = [];\n    for (let resourceId in resourceNodes) {\n        let resourceNode = resourceNodes[resourceId];\n        if (!resourceNode.resource.parentId) {\n            insertResourceNode(resourceNode, builtNodes, groupSpecs, 0, maxDepth, orderSpecs);\n        }\n    }\n    return builtNodes;\n}\nfunction buildResourceNodes(resourceStore, orderSpecs) {\n    let nodeHash = {};\n    for (let resourceId in resourceStore) {\n        let resource = resourceStore[resourceId];\n        nodeHash[resourceId] = {\n            resource,\n            resourceFields: buildResourceFields(resource),\n            children: [],\n        };\n    }\n    for (let resourceId in resourceStore) {\n        let resource = resourceStore[resourceId];\n        if (resource.parentId) {\n            let parentNode = nodeHash[resource.parentId];\n            if (parentNode) {\n                insertResourceNodeInSiblings(nodeHash[resourceId], parentNode.children, orderSpecs);\n            }\n        }\n    }\n    return nodeHash;\n}\nfunction insertResourceNode(resourceNode, nodes, groupSpecs, depth, maxDepth, orderSpecs) {\n    if (groupSpecs.length && (maxDepth === -1 || depth <= maxDepth)) {\n        let groupNode = ensureGroupNodes(resourceNode, nodes, groupSpecs[0]);\n        insertResourceNode(resourceNode, groupNode.children, groupSpecs.slice(1), depth + 1, maxDepth, orderSpecs);\n    }\n    else {\n        insertResourceNodeInSiblings(resourceNode, nodes, orderSpecs);\n    }\n}\nfunction ensureGroupNodes(resourceNode, nodes, groupSpec) {\n    let groupValue = resourceNode.resourceFields[groupSpec.field];\n    let groupNode;\n    let newGroupIndex;\n    // find an existing group that matches, or determine the position for a new group\n    if (groupSpec.order) {\n        for (newGroupIndex = 0; newGroupIndex < nodes.length; newGroupIndex += 1) {\n            let node = nodes[newGroupIndex];\n            if (node.group) {\n                let cmp = flexibleCompare(groupValue, node.group.value) * groupSpec.order;\n                if (cmp === 0) {\n                    groupNode = node;\n                    break;\n                }\n                else if (cmp < 0) {\n                    break;\n                }\n            }\n        }\n    }\n    else { // the groups are unordered\n        for (newGroupIndex = 0; newGroupIndex < nodes.length; newGroupIndex += 1) {\n            let node = nodes[newGroupIndex];\n            if (node.group && groupValue === node.group.value) {\n                groupNode = node;\n                break;\n            }\n        }\n    }\n    if (!groupNode) {\n        groupNode = {\n            group: {\n                value: groupValue,\n                spec: groupSpec,\n            },\n            children: [],\n        };\n        nodes.splice(newGroupIndex, 0, groupNode);\n    }\n    return groupNode;\n}\nfunction insertResourceNodeInSiblings(resourceNode, siblings, orderSpecs) {\n    let i;\n    for (i = 0; i < siblings.length; i += 1) {\n        let cmp = compareByFieldSpecs(siblings[i].resourceFields, resourceNode.resourceFields, orderSpecs); // TODO: pass in ResourceApi?\n        if (cmp > 0) { // went 1 past. insert at i\n            break;\n        }\n    }\n    siblings.splice(i, 0, resourceNode);\n}\nfunction buildResourceFields(resource) {\n    let obj = Object.assign(Object.assign(Object.assign({}, resource.extendedProps), resource.ui), resource);\n    delete obj.ui;\n    delete obj.extendedProps;\n    return obj;\n}\nfunction isGroupsEqual(group0, group1) {\n    return group0.spec === group1.spec && group0.value === group1.value;\n}\n\nexport { AbstractResourceDayTableModel as A, DEFAULT_RESOURCE_ORDER as D, ResourceApi as R, VResourceJoiner as V, ResourceSplitter as a, ResourceDayHeader as b, ResourceDayTableModel as c, DayResourceTableModel as d, VResourceSplitter as e, flattenResources as f, getPublicId as g, handleResourceStore as h, isGroupsEqual as i, buildRowNodes as j, buildResourceFields as k, ResourceLabelContainer as l, parseResource as p, refineRenderProps$1 as r };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}